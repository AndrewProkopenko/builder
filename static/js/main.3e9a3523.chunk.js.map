{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/category/AddItem.js","components/header/headerHelpers/category/ChangePage.js","components/functions/InputChange.js","components/header/headerHelpers/CategoriesChanger.js","components/functions/colorChanger/ColorPicker.js","components/functions/colorChanger/ColorSelecter.js","components/functions/colorChanger/ColorCalculation.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/headerHelpers/RequestsChanger.js","assets/icons/half-moon.svg","assets/icons/sun.svg","components/header/dumb/ThemeSwitcher.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/AddItem.js","components/functions/SelectPage.js","components/library/swiper/StyledComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/DumbComponent.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/library/blocksPages/DumbComponent.js","components/library/blocksPages/AddItem.js","components/library/blocksPages/StyledComponent.js","components/library/blocksPages/ElementCreator.js","components/library/blocksAdv/DumbComponent.js","components/library/blocksAdv/AddItem.js","components/library/blocksAdv/StyledComponent.js","components/library/blocksAdv/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","images","removeImage","removeImagesFromArray","SendFormContext","SendFormProvider","requests","modalSettings","isAlertSeverity","alertText","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","time","setTimeout","req","newList","slice","newReq","Object","assign","getCurrentDate","push","closeAlertFromTimeout","severity","duration","isShowAlert","updateRequests","updateModalSettings","sendRequests","closeAlert","setCustomAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","shorter","flexDirection","btnSave","bottom","paddingTop","paddingBottom","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineOffset","responseValues","margin","marginRight","responseTablets","border","success","fill","responseMobile","mobileTooltip","tabletTooltip","dialogContentUnstyle","AddItem","useState","newItemTitle","setNewItemTitle","newItemSlug","setNewItemSlug","onSubmit","e","preventDefault","id","addItem","FormGroup","Box","mb","TextField","required","fullWidth","label","title","variant","onChange","style","Tooltip","placement","IconButton","Button","type","ChangeCategory","itemPages","setValue","disabled","onClick","handleUpdatePage","ml","InputChange","memo","multiline","size","setIsDisableBtn","valueLocal","setValueLocal","Number","onBlur","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","setOpen","isDisableBtn","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","addPage","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","handleUpdateCategory","categoryId","pageId","handleSave","swapCategory","direction","activeIndex","indexOf","length","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","xs","newCategory","index","disableElevation","confirm","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","gutterBottom","mt","ColorPicker","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","getContrastText","primary","boxColor","flexGrow","borderRadius","shape","short","boxShadow","shadows","boxPicker","iconButton","iconButtonDisabled","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","isContrastSelect","block","main","warning","info","defaultColor","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","getColorByPalette","getColorByPaletteForGradient","getColorByPaletteReverse","isNoThemeColor","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","modalTarget","setModalTarget","colorTheme","newLogo","newModal","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","mr","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","newSettings","row","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","startIcon","RequestsChanger","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","amber","newData","my","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","innerIndex","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","ThemeSwitcher","ThemeCustomSwitch","withStyles","switchBase","transform","darkThemeIcon","thumb","lightThemeIcon","backgroundSize","backgroundPosition","track","create","focusVisible","focusVisibleClassName","disableRipple","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","shortest","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","menuColor","iconColor","accordionReset","drawerHeader","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","handleSignOut","content","indexPage","borderTop","px","openModal","edge","DumbComponent","backgroundHeader","widthMobile","mobileView","setMobileView","modalBtnColor","headerRef","useRef","topHeaderRef","darken","header","fixedPadding","topHeader","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","linkModal","setResponsiveness","setScrollHeader","headerTop","pageYOffset","current","classList","add","remove","err","addEventListener","removeEventListener","logout","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ModalChanger","ElementCreator","Header","Footer","contrastFooter","backgroundFooter","footer","down","buttonToTop","handleClickToTop","Login","setName","setPassword","setError","isRedirect","setIsRedirect","isSubmit","setIsSubmit","avatar","form","submitBtn","forgotTitle","handleChange","place","value1","value2","disableCheck","Avatar","CircularProgress","loginWithEmail","res","autoComplete","autoFocus","Alert","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","backgroundSelect","setBackgroundSelect","backgroundCustom","setBackgroundCustom","borderColor","borderColorSelect","setBorderColorSelect","borderColorCustom","setBorderColorCustom","shadow","setShadow","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","bgTheme","borderTheme","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","reSaveContainerStyleSettings","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","swapHeading","swapChildrens","viewCorrect","sentData","reSaveChildren","prop","isFirst","isLast","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","handleItemChange","newItems","swapItem","swapList","splice","deleteItemList","swapParagraph","imageBorderColor","imageClassName","imageStyle","imageStabilization","sm","imageUrl","titleImg","imageBorderColorSelect","setImageBorderColorSelect","imageBorderColorCustom","setImageBorderColorCustom","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageBorderTheme","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","F","styleClass","noPadding","yesPadding","isPaperClassForContainer","isPaperClassForPaper","renderItems","orderFirst","orderLast","createArrayImages","forEach","swapContainer","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","maxWidthContainer","input","up","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","newItemBody","setNewItemBody","handleUpdateItemHead","handleUpdateItemBody","itemLayout","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableMinWidth","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isButtonShowMore","isButtonClick","setIsButtonClick","StyledTableRow","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","newItemPrice","setNewItemPrice","setRows","setTableRow","setTableMinWidth","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleTableHeadChange","newRow","handleRowChangeName","newRows","handleRowChangePrice","warningBtn","rowLayout","lineDecor","gridItem","SwiperCore","use","Navigation","history","useHistory","isSwiper","setIsSwiper","slidesForViewDesktop","slidesPerView","slidesForViewTablet","slidesPerViewTablet","slidesForViewMobile","slidesPerViewMobile","spaceBetween","speed","loop","freeMode","slides","slideHeight","setSlideHeight","slideRef","swiper","activeSlide","slide","overflow","slideBox","slideImg","backgroundRepeat","slideTitle","gallery","marginRigth","getWidthViewport","actualWidth","slideHeightCalc","clientWidth","renderSlide","key","isUrl","activePage","handleSlideClick","600","960","navigation","newImageName","setNewImageName","newImageUrl","setNewImageUrl","newImageTitle","setNewImageTitle","addSlide","replace","SelectPage","SetPages","selectValue","setSelectValue","createPages","pagesArray","categorySlug","undefined","setSlidesPerView","setSlidesPerViewTablet","setSlidesPerViewMobile","setSpaceBetween","setSpeed","setLoop","setFreeMode","setSlides","imageForDelete","setImageForDelete","slideContainer","dumbSlide","dumbSlideButtons","dumbSlideTitle","tooltipReload","reloadSettings","handleSlideTitle","newSlides","handleChangeUrl","handleChangeIsButtonTarget","swipeSlide","element","imgArray","handleChangeIsButton","handleChangeIsUrl","newImageForDelete","deletedImageName","removeSlide","isLink","colorText","paddingVertical","bannerBackground","bannerContent","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","colorButtonTheme","colorTextTheme","boxSizing","standard","newSvg","setNewSvg","idActive","setIdActive","setActivePage","selectedPage","dumbSlideSvg","handleSlideSvg","inner","setNewTitle","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","BlocksPagesLayout","blocksPages","BlocksAdvLayout","blocksAdv","setData","btnContainer","boxMenuItem","fetchData","document","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3e9a3523.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 600) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    // state = {  \r\n    //     imageList: [], \r\n    // } \r\n\r\n    // async componentDidMount() { \r\n    //       this.fetchListFromStorage()\r\n    //     //   this.fetchListFromFirestore()\r\n    // }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n    //     this.setState({\r\n    //         imageList: imagesArray\r\n    //     }) \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 500);\r\n        \r\n    // }\r\n\r\n    // async addImageToList(newImage, oldName) {\r\n    //     const newList = this.state.imageList.slice()\r\n    //     let newItem\r\n    //     let isNew = true\r\n    //     let isNeedUpdate = newImage.name === oldName ? false : true \r\n    //     if(isNeedUpdate) { \r\n    //         for(let i = 0; i < newList.length; i++) {\r\n    //             if(newList[i].name === newImage.name) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity++ \r\n    //                 isNew = false\r\n    //             }\r\n    //             if(newList[i].name === oldName) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity--  \r\n    //                 if( newList[i].quantity === 0 ) { \r\n    //                     this.removeImage(oldName) \r\n    //                     newList.splice(i, 1)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         if(isNew) {\r\n    //             newItem = {\r\n    //                 name: newImage.name, \r\n    //                 url: newImage.url, \r\n    //                 quantity: 1\r\n    //             }\r\n    //             newList.push(newItem)\r\n    //         }\r\n    //     }\r\n    //     else { \r\n    //         console.log(newImage, oldName)\r\n    //     }\r\n         \r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })\r\n \r\n    //     console.log(this.state.imageList, oldName)\r\n\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    // async fetchListFromFirestore() {\r\n    //     const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n    //     const doc = await listRef.get();\r\n      \r\n    //     if (!doc.exists) {\r\n    //         console.log('No such page!');  \r\n\r\n    //     } else { \r\n    //         this.setState({\r\n    //             imageList: doc.data().list\r\n    //         }) \r\n    //     }\r\n    // }\r\n    // async uploadImage(imageData, oldName) { \r\n    //     const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n    //     const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n    //     const newImage = {\r\n    //         url: downloadURL, \r\n    //         name: imageData.name, \r\n    //         quantity: 1\r\n    //     }\r\n    //     this.addImageToList(newImage, oldName)\r\n  \r\n    // }\r\n    // async updateList(newList) {\r\n    //     await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n    //         list: newList, \r\n    //     }).then(() => { \r\n    //         this.setState({\r\n    //             imageList: newList\r\n    //         })\r\n    //     })\r\n    // }\r\n \r\n    // removeImageFromStoreAndList(name) {\r\n    //     console.log(name)\r\n    //     const newList = this.state.imageList.slice()\r\n    //     newList.map( (item, index) => {\r\n    //         if(item.name === name) {\r\n    //             item.quantity--\r\n    //             if(item.quantity === 0) newList.splice(index, 1)\r\n    //         }\r\n    //     })\r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })  \r\n    //     this.removeImage(name)\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImagesFromArray(images) {\r\n        console.log(images)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    // imageList: this.state.imageList, \r\n                    // nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImagesFromArray: (array) => {\r\n                        this.removeImagesFromArray(array)\r\n                    },\r\n                    // removeImageFromStoreAndList: (name) => {\r\n                    //     this.removeImageFromStoreAndList(name)\r\n                    // },\r\n                    // uploadImage: (data, name) => {\r\n                    //     this.uploadImage(data, name)\r\n                    // }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isAlertSeverity: null,\r\n        alertText: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout(time) {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isAlertSeverity: null,\r\n                alertText: ''\r\n            })\r\n        }, time);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isAlertSeverity: 'info',\r\n            alertText: \"Your request is being processed\"\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isAlertSeverity: 'success', \r\n                alertText: 'Your request was accepted successfully'\r\n            })\r\n            this.closeAlertFromTimeout(7000)\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isAlertSeverity: 'error', \r\n                alertText: \"An error has occurred :(\"\r\n            })\r\n            this.closeAlertFromTimeout(700)\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    setCustomAlert(severity, text, duration) {\r\n        this.setState({  \r\n            isAlertSeverity: severity, \r\n            alertText: text\r\n        })\r\n        this.closeAlertFromTimeout(duration)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isAlertSeverity, \r\n                    modalSettings: this.state.modalSettings, \r\n                    alertText: this.state.alertText, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isAlertSeverity: null, \r\n                            alertText: ''\r\n                        }) \r\n                    }, \r\n                    setCustomAlert: (severity, text, duration) => {\r\n                        this.setCustomAlert(severity, text, duration)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            // paddingBottom: 50,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                // outlineColor: `${theme.palette.error.main}`,\r\n                // zIndex: 100, \r\n                 \r\n                // '& $mtView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $mbView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $btnDrawerStyle' : { \r\n                //     opacity: 1\r\n                // }\r\n            }\r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }, \r\n        dialogContentUnstyle: {\r\n            outline: 0, \r\n            padding: 0\r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddItem = (props) => {\r\n\r\n    \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemSlug, setNewItemSlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(props.id !== null ) props.addItem(newItemTitle, newItemSlug, props.id)\r\n        else props.addItem(newItemTitle, newItemSlug)\r\n        \r\n        \r\n        setNewItemTitle('') \r\n        setNewItemSlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} title`} \r\n                        variant=\"outlined\" \r\n                        value={newItemTitle}\r\n                        onChange={(e) => { setNewItemTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} slug`} \r\n                        variant=\"outlined\" \r\n                        value={newItemSlug}\r\n                        onChange={(e) => { setNewItemSlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New {props.title}\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { memo, useState } from \"react\";\r\n\r\nimport { TextField } from '@material-ui/core' \r\n \r\n\r\n\r\nconst InputChange = memo(({ id, fullWidth, required, multiline,  type, size, label, variant, value, setValue, setIsDisableBtn }) => {\r\n\r\n   \r\n    const [valueLocal, setValueLocal] = useState(value)   \r\n   \r\n    React.useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const save = () => { \r\n        if(valueLocal !== value) {\r\n            if(id !== null ) setValue(valueLocal, id)\r\n            else setValue(valueLocal)\r\n\r\n            setIsDisableBtn(false) \r\n        } \r\n    } \r\n    \r\n    const handleChange = (e) => {\r\n        type === 'number' ? setValueLocal(Number(e.target.value)) : setValueLocal(e.target.value)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n      \r\n    return ( \r\n        <TextField\r\n            required={required}\r\n            fullWidth={fullWidth}\r\n            type={type}\r\n            multiline={multiline}\r\n            size={size}\r\n            label={label}\r\n            variant={variant}\r\n            value={valueLocal}\r\n            onChange={handleChange}\r\n            onBlur={save}\r\n        /> \r\n    )\r\n})\r\n\r\nexport default InputChange\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddItem from './category/AddItem' \r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,\r\n    TextField,  \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('Categories Changer')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    \r\n \r\n    const handleOpen = () => {  \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting , dialogContentUnstyle } = commonClasses\r\n       \r\n        return( { \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        // setCategories(localCategories)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = JSON.parse(JSON.stringify(categories)) \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        const conf = window.confirm('Delete category?')\r\n        if(conf) {\r\n            let filtered = categories.filter((item) => (item.id !== id))  \r\n            const deleted = categories.filter( (item) => (item.id === id))\r\n            let arrayOfPagesForDelete = [] \r\n\r\n            arrayOfPagesForDelete.push(deleted[0].slug)\r\n            if(deleted[0].pages.length > 0) {\r\n                deleted[0].pages.map((item) => {\r\n                    arrayOfPagesForDelete.push(item.slug)\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            setCategories(filtered)  \r\n            deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        }  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        const conf = window.confirm('Delete page?')\r\n            if(conf) {\r\n            categories.map( category => {\r\n                if(category.id === categoryId) {  \r\n                    let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                    category.pages = filtered\r\n                }\r\n                return 0 \r\n            }) \r\n            setCategories(categories)  \r\n\r\n            deletePageFromFirebase(slug)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddItem title={'Category'} id={null} addItem={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  >  \r\n                                                            <InputChange\r\n                                                                id={item.id}\r\n                                                                fullWidth={true}\r\n                                                                required={true}\r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Category title\"\r\n                                                                variant='filled'\r\n                                                                value={item.title}\r\n                                                                setValue={handleUpdateCategory}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            <TextField\r\n                                                                type='text' \r\n                                                                label=\"Category slug (read only)\"\r\n                                                                fullWidth\r\n                                                                variant='filled'\r\n                                                                value={item.slug} \r\n                                                                disabled={true} \r\n                                                            /> \r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <Box mt={2} ml={'auto'} maxWidth={300}>\r\n                                                                        <Box mb={1} ><Typography variant='caption' gutterBottom >Add new page</Typography></Box>\r\n                                                                        <AddItem title={'Page'} id={item.id} addItem={addPage} />\r\n                                                                    </Box> \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box mt={5} />\r\n                                    {/* <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'contrast' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.short}ms ${theme.transitions.easing.easeInOut} `, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[2]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit, isContrastSelect }) {\r\n    \r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        },\r\n        defaultColor: {\r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        paper: { \r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success, defaultColor , paper } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'default'}>\r\n                        Default Background\r\n                        <Box className={`${block} ${defaultColor}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'paper'}>\r\n                        Paper Background\r\n                        <Box className={`${block} ${paper}`} />\r\n                    </MenuItem>\r\n                    {   \r\n                        isContrastSelect &&\r\n                        <MenuItem style={{position: 'relative'}} value={'contrast'}>\r\n                            Contrast (about Background)\r\n                        </MenuItem>\r\n                    }\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","export const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('contrast') : {\r\n            return 'contrast'\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        case ('default') : {\r\n            return [theme.palette.background.paper, theme.palette.background.default]\r\n        } \r\n        case ('paper') : {\r\n            return [theme.palette.background.default, theme.palette.background.paper]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.default\r\n        }\r\n        default: return color\r\n    } \r\n}\r\nexport const isNoThemeColor = (color) => {\r\n    if(\r\n        color !== 'contrast' && \r\n        color !== 'default' && \r\n        color !== 'paper' && \r\n        color !== 'primary' && \r\n        color !== 'secondary' &&\r\n        color !== 'warning' &&\r\n        color !== 'error' &&\r\n        color !== 'info' &&\r\n        color !== 'success' \r\n    ) return true \r\n    else return false \r\n}\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch, \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n    const [modalTarget, setModalTarget] = React.useState(modal.target || 'buy') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(modal.color) \r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [modal])\r\n\r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText, \r\n            target: modalTarget\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => { \r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Logo/Modal Settings  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained' \r\n                                        className={classes.btnWithLabel}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    /> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <Box mr={1} display='inline'>\r\n                                                    <TextField\r\n                                                        type='text'\r\n                                                        label=\"Text for Button\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={modalText}\r\n                                                        onChange={(e) => {\r\n                                                        setIsDisableBtn(false);\r\n                                                        setModalText(e.target.value)\r\n                                                    }}/>  \r\n                                                </Box> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Target for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalTarget}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalTarget(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(settings.classes.backgroundColor) \r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [settings])\r\n     \r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true) \r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                               { !isDisableBtn && \"Close to save - \" }  Header Style Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                        <ColorSelecter\r\n                                            label={'Background for Header'}\r\n                                            colorSelect={settingBackgroundSelect} \r\n                                            setColorSelect={setSettingBackgroundSelect}\r\n                                            colorCustom={settingBackgroundCustom}\r\n                                            setColorCustom={setSettingBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        />\r\n                                             \r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../functions/colorChanger/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = React.useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = React.useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = React.useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = React.useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = React.useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = React.useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = React.useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = React.useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }, \r\n            dialogContentUnstyle: dialogContentUnstyle\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,   \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n     \r\n    const colorTheme = isNoThemeColor(modalSettings.colorButton)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }},  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {   \r\n        const conf = window.confirm('Delete request?') \r\n        if(conf) {\r\n            const newReq = localRequests.slice()\r\n            const filtered = newReq.filter(item => ( item.time !== id ))\r\n    \r\n            setLocalRequests(filtered)\r\n            setIsDisableBtn(false) \r\n        }\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","export default __webpack_public_path__ + \"static/media/half-moon.4946e6c2.svg\";","export default __webpack_public_path__ + \"static/media/sun.b7c92f87.svg\";","import React from 'react'\r\n\r\nimport {  \r\n    FormControlLabel, \r\n    Switch,\r\n    withStyles\r\n} from \"@material-ui/core\"; \r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n \r\nimport darkThemeIcon from '../../../assets/icons/half-moon.svg'\r\nimport lightThemeIcon from '../../../assets/icons/sun.svg' \r\n\r\nfunction ThemeSwitcher() {\r\n\r\n    const { setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n    \r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const ThemeCustomSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 60,\r\n          height: 28,\r\n          padding: 0, \r\n          marginRight: 5\r\n        },\r\n        switchBase: {\r\n          padding: 1,  \r\n          '&$checked': {\r\n            transform: 'translateX(32px)',\r\n            color: '#27536b',\r\n            '& + $track': {\r\n              backgroundColor: '#27536b',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n            '&  $thumb': { \r\n              opacity: 1,\r\n              border: 'none',\r\n              backgroundImage: `url(${darkThemeIcon})`\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869', \r\n          },\r\n        },\r\n        thumb: {\r\n          width: 26,\r\n          height: 26,\r\n          backgroundImage: `url(${lightThemeIcon})`,\r\n          backgroundSize: '28px',\r\n          backgroundPosition: 'center',  \r\n        },\r\n        track: {\r\n          borderRadius: 28 / 2,\r\n          border: `1px solid #a3d4ff`,\r\n          backgroundColor: '#a3d4ff',\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n    return ( \r\n        <FormControlLabel\r\n            control={<ThemeCustomSwitch checked={checked} onChange={handleChange} name=\"checkedB\" />}\r\n            label={checked ? 'Night Mode' : 'Light Mode'}\r\n        /> \r\n    ) \r\n}\r\n\r\nexport default ThemeSwitcher\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                // paddingLeft: 10, \r\n                // paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n    Button\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nconst Mobile = (props) => { \r\n \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: props.menuColor,\r\n                    color: props.iconColor\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            drawerHeader: {\r\n                margin: theme.spacing(1, 2), \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                '& .log-button': {\r\n                    minWidth: 100\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset, drawerHeader } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n    const handleModal = () => {\r\n        handleDrawerClose()\r\n        props.openModal()\r\n    }\r\n\r\n    return (\r\n        <Toolbar disableGutters style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box className={drawerHeader}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {\r\n                            props.user ? \r\n                            <Button \r\n                                size='medium'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={ () => { props.handleSignOut(); handleDrawerClose()  } }\r\n                                className={'log-button'}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                            :\r\n                            <NavLink to='/login' onClick={handleDrawerClose}>\r\n                                <Button  \r\n                                    color='primary' \r\n                                    variant=\"contained\"\r\n                                    size='medium'\r\n                                    className={'log-button'} \r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </NavLink>\r\n                        }\r\n                        \r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={3} width={'100%'} clone={true} onClick={handleModal}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box px={3} my={2} >\r\n                        <Box  width={'100%'} clone={true} >\r\n                            <ThemeSwitcher/>\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"default\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon style={{color: props.iconColor}} />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n   \r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button, \r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\n\r\nimport { getColorByPalette } from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { user } = React.useContext(ModeContext)\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings } = React.useContext(CategoryContext)    \r\n    \r\n    const [mobileView, setMobileView] = useState(true); \r\n   \r\n    let backgroundHeader\r\n    let colorHeader \r\n    let hoverActiveLinkColor \r\n  \r\n    let modalBtnColor = modal.color  \r\n\r\n    let widthMobile \r\n     \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`] \r\n        modalBtnColor= getColorByPalette(theme, modal.color)  \r\n\r\n        backgroundHeader = getColorByPalette(theme, settings.classes.backgroundColor) \r\n\r\n        hoverActiveLinkColor = darken(backgroundHeader, 0.3)\r\n        colorHeader =  theme.palette.getContrastText(backgroundHeader)  \r\n \r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n               \r\n                top: 0,  \r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n                '&.sticky' : {\r\n                    transform: \"translateY(-41px)\",\r\n                    [`@media (max-width: ${widthMobile}px)`]: {\r\n                        transform: \"translateY(0px)\",\r\n                    }\r\n                }\r\n            },\r\n            fixedPadding: { \r\n                minHeight: 100 + settings.classes.paddingY*2 , \r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    minHeight: 60 + settings.classes.paddingY , \r\n                },\r\n            },\r\n            topHeader: {   \r\n                height: '100%', \r\n                paddingTop: 5, \r\n                paddingBottom: 5,  \r\n                backgroundColor:  \"rgba(0, 0, 0, 0.16)\" , \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `,  \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 700,\r\n                fontSize: 22,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundColor: modalBtnColor,   \r\n                color: theme.palette.getContrastText(modalBtnColor), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': {  \r\n                    backgroundColor: darken(modalBtnColor, .3) , \r\n                }\r\n            }, \r\n            linkModal: {  \r\n                textTransform: 'inherit', \r\n                color: colorHeader, \r\n                padding: theme.spacing(0.5, 1.2),\r\n                '&:hover': { \r\n                    backgroundColor: modalBtnColor, \r\n                    color: theme.palette.getContrastText(modalBtnColor), \r\n                    cursor: 'pointer'\r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, linkModal, topHeader} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {  \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            if(mobileView) {\r\n                const headerTop =  window.pageYOffset \r\n                try {\r\n                    if( headerTop > 1 ) {\r\n                        headerRef.current.classList.add('sticky')\r\n                    } else {\r\n                        headerRef.current.classList.remove('sticky')\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                } \r\n            }\r\n        } \r\n        setResponsiveness(); \r\n        setScrollHeader();\r\n\r\n        window.addEventListener(\"resize\", setResponsiveness);\r\n        window.addEventListener(\"scroll\", setScrollHeader);\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', setResponsiveness) \r\n            window.removeEventListener('scroll', setScrollHeader) \r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n     \r\n\r\n    const openModal = () => { \r\n        handleOpen(modal.target) \r\n    }\r\n\r\n    const handleSignOut = () => { \r\n        firebase.logout()\r\n        setCustomAlert('warning', 'You are logged out successfully', 3000)\r\n    }\r\n  \r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n    const topHeaderModalBtn = () => ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            className={linkModal}\r\n            size='small' \r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                    { \r\n                        !mobileView &&\r\n                        <Box className={topHeader} ref={topHeaderRef} >\r\n                            <Container \r\n                                disableGutters={settings.disableGutters}\r\n                                fixed={settings.fixed} \r\n                                maxWidth={settings.maxWidth}  \r\n                            > \r\n                                <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n                                    {  modal.isModal ? topHeaderModalBtn() : ( <span></span> ) }\r\n                                    <Box display='flex' alignItems='center' >\r\n                                        \r\n                                        <ThemeSwitcher/>\r\n                                        \r\n                                        {\r\n                                            user ?\r\n                                            <Button \r\n                                                size='small'\r\n                                                color='secondary' \r\n                                                variant={'contained'} \r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                            :\r\n                                            <NavLink to='/login'>\r\n                                                <Button \r\n                                                    color='default' \r\n                                                    variant=\"outlined\"\r\n                                                    size='small'\r\n                                                >\r\n                                                    Login\r\n                                                </Button>\r\n                                            </NavLink>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Box>\r\n                    }\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop   \r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            openModal={openModal}\r\n                            iconColor={colorHeader}  \r\n                            menuColor={backgroundHeader}  \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                            user={user}\r\n                            handleSignOut={handleSignOut}\r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\n\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: open ? 1 : 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 10, \r\n            top: 5, \r\n            width: 60, \r\n            height: 60,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            textAlign: 'center' ,\r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.headerContainer}>\r\n  \r\n            <div>   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >   \r\n                    {open ? 'close' : 'open' }\r\n                    <br/>\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <RequestsChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles, Box, Typography, Container, IconButton, Tooltip, darken } from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nimport { getColorByPalette } from '../functions/colorChanger/ColorCalculation'\r\n\r\nfunction Footer() {\r\n\r\n    const { logo, settings } = React.useContext(CategoryContext)\r\n\r\n    let backgroundFooter = settings.classes.backgroundColor\r\n    let contrastFooter\r\n    let hoverActiveLinkColor\r\n     \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        backgroundFooter = getColorByPalette(theme, backgroundFooter) \r\n        contrastFooter = theme.palette.getContrastText(backgroundFooter)\r\n        hoverActiveLinkColor = darken(backgroundFooter, 0.3)\r\n\r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n\r\n        return({ \r\n            footer: {\r\n                backgroundColor: backgroundFooter, \r\n                padding: theme.spacing(3, 0)\r\n            }, \r\n            logoMain: { \r\n                color: contrastFooter,\r\n                fontWeight: 700,\r\n                fontSize: 25, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                color: contrastFooter,\r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 70, \r\n                height: 50, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 45, \r\n                    height: 30, \r\n                },\r\n            },  \r\n            buttonToTop: {\r\n                '&:hover': {\r\n                    backgroundColor: hoverActiveLinkColor\r\n                }\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n \r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none', display: 'inline-block'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={classes.logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={classes.logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={classes.logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n    const buttonToTop = () => (\r\n        <Tooltip title='To Top' placement='top' >\r\n            <IconButton \r\n                className={classes.buttonToTop}  \r\n                onClick={handleClickToTop}\r\n            >\r\n                <KeyboardArrowUpIcon style={{fill: contrastFooter}}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n    const handleClickToTop = () => {\r\n        window.scrollTo({\r\n            top: 0, \r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n\r\n                <Box display='flex' alignItems=\"center\" justifyContent='space-between'>\r\n                    { createLogo() }\r\n                    { buttonToTop() }\r\n                </Box>\r\n                \r\n \r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\nimport ModeContext from '../context/modeContext/ModeContext' \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext' \r\n \r\nimport { Avatar, Button, TextField, Box, Container, CircularProgress, Typography, Tooltip } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab'; \r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n    const { user } = React.useContext(ModeContext) \r\n \r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isSubmit, setIsSubmit] = React.useState(false)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        if(user) setIsRedirect(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          marginBottom: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: isSubmit ? theme.palette.primary.main : theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submitBtn: {  \r\n            minHeight: 55\r\n        },\r\n        forgotTitle: {\r\n            textAlign: 'center'\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const disableCheck = ({value1, value2}) => { \r\n        console.log(value1, value2)\r\n        if(value1 !== '' && value2 !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)   \r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        setError(null)\r\n        disableCheck({\r\n            value1: value, \r\n            value2: place === 'name' ? password : name\r\n        })\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsLoading(true)\r\n        setIsDisableBtn(true)\r\n        setIsSubmit(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n            setIsSubmit(false) \r\n            setCustomAlert('success', `Hello, ${res.user.email}. Now you can change site`, 7000)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n            setIsSubmit(false)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        { isSubmit ? <CircularProgress size={25} style={{color: '#fff'}} /> : <LockOutlinedIcon /> }\r\n                    </Avatar> \r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                autoComplete='true'\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'name')} }\r\n                            />\r\n                        </Box>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'password')} }\r\n                            />\r\n                        </Box>\r\n                        {\r\n                            error && \r\n                            <Box mb={2} >\r\n                                <Alert severity=\"error\">{error.message}</Alert>\r\n                            </Box>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submitBtn}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                        \r\n                    <Box mt={2} >\r\n                        <Tooltip title=\"It's your problem\" placement='top'>\r\n                            <Typography variant='caption' className={classes.forgotTitle}>\r\n                                Forgot Password? \r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5, \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\nimport Draggable from 'react-draggable'; \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    const [borderColorSelect,  setBorderColorSelect] = React.useState(props.data.classes.borderColor || 'inherit')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor || 'inherit')\r\n \r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor])\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n        \r\n        return ({   \r\n            dialogContentUnstyle:dialogContentUnstyle, \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                // maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,  \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        if (backgroundSelect === 'custom') { myClassName.backgroundColor = backgroundCustom }\r\n        else { myClassName.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { myClassName.color = colorCustom } \r\n        else { myClassName.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { myClassName.borderColor = borderColorCustom } \r\n        else { myClassName.borderColor = borderColorSelect }\r\n\r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true);  \r\n    } \r\n\r\n    const handleClose = () => {\r\n        if(!isDisableBtn)reSaveClassesSettings()\r\n        props.handleClose()\r\n    } \r\n    \r\n    \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"For correct margin inside conteiner recomended:   display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Top'\r\n                                        variant='filled'\r\n                                        value={margin.top}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Bottom'\r\n                                        variant='filled'\r\n                                        value={margin.bottom}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Top\" \r\n                                        variant='filled'\r\n                                        value={padding.top}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Bottom\" \r\n                                        variant='filled'\r\n                                        value={padding.bottom}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} > \r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={backgroundSelect} \r\n                                    setColorSelect={setBackgroundSelect}\r\n                                    colorCustom={backgroundCustom}\r\n                                    setColorCustom={setBackgroundCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                />  \r\n                            </Box>\r\n                        </Box>\r\n                        <Box  className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Color'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                    isContrastSelect={true}\r\n                                />   \r\n                                {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                            </Box> \r\n                        </Box>\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Border Color'}\r\n                                    colorSelect={borderColorSelect} \r\n                                    setColorSelect={setBorderColorSelect}\r\n                                    colorCustom={borderColorCustom}\r\n                                    setColorCustom={setBorderColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false} \r\n                                />  \r\n                            </Box> \r\n                        </Box>\r\n                         \r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Radius\" \r\n                                        variant='filled'\r\n                                        value={borderRadius}\r\n                                        setValue={setBorderRadius}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Width\" \r\n                                        variant='filled'\r\n                                        value={borderWidth}\r\n                                        setValue={setBorderWidth}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box mt={5} />\r\n                        {/* <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box> */}\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} ,\r\n            resposiveFontSize: { \r\n                [`@media (max-width: 960px)`]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.8 : 20, \r\n                    marginTop: props.className.marginTop*0.8,\r\n                    marginBottom: props.className.marginBottom*0.8\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                    lineHeight : 1.2, \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n             \r\n          })\r\n    } );\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren.length > 0) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n        else {\r\n            return `(No text - ${props.data.variant})`\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent,\r\n    ButtonGroup,\r\n    FormGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n \r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n          \r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            // btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n            tooltip: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.primary.main\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n \r\n\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        // handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    const swapHeading = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const viewCorrect = props.data.classes.display !== 'block' ? `(uncorrect view for ${props.data.classes.display} display)` : ''\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    { !isDisableBtn && \"Close to save - \" } Heading - {props.data.variant} Settings <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <InputChange\r\n                                        id={null}\r\n                                        fullWidth={true}\r\n                                        multiline={true}\r\n                                        type='text'\r\n                                        size=\"medium\" \r\n                                        label=\"Text input\"\r\n                                        variant='standard'\r\n                                        value={textInDumb}\r\n                                        setValue={setTextInDumb}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />      \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip classes={{tooltip: classes.tooltip}}  title=\"If enabled, the type will be smaller on mobile devices and the alignment will be centered\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.8 : 20 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={display}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'block'}>Block</MenuItem> \r\n                                            <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                            <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                            <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>  \r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='filled'\r\n                                                value={margin.top}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={margin.bottom}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Left'\r\n                                                variant='filled'\r\n                                                value={margin.left}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Right'\r\n                                                variant='filled'\r\n                                                value={margin.right}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top\" \r\n                                                variant='filled'\r\n                                                value={padding.top}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Bottom\" \r\n                                                variant='filled'\r\n                                                value={padding.bottom}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Left\" \r\n                                                variant='filled'\r\n                                                value={padding.left}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Right\" \r\n                                                variant='filled'\r\n                                                value={padding.right}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Background'}\r\n                                            colorSelect={backgroundSelect} \r\n                                            setColorSelect={setBackgroundSelect}\r\n                                            colorCustom={backgroundCustom}\r\n                                            setColorCustom={setBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                            isContrastSelect={true} \r\n                                        /> \r\n                                        {\r\n                                            backgroundCustom === 'inherit' &&\r\n                                            colorSelect === 'contrast' && \r\n                                            <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>\r\n                                        } \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Font Size\" \r\n                                                variant='filled'\r\n                                                value={fontSize}\r\n                                                setValue={setFontSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Line Height (em)\" \r\n                                                variant='filled'\r\n                                                value={lineHeight}\r\n                                                setValue={setLineHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                     \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={borderRadius}\r\n                                                setValue={setBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={borderWidth}\r\n                                                setValue={setBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber} >   \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={borderColorSelect} \r\n                                                setColorSelect={setBorderColorSelect}\r\n                                                colorCustom={borderColorCustom}\r\n                                                setColorCustom={setBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                                {/* <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box> */}\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                        \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        \r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,   \r\n            }},  \r\n            liClass: props.data.itemsStyle,\r\n            mobileClass: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                    marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                    paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n                } \r\n            }\r\n          })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n                {\r\n                    props.data.items.length === 0 &&\r\n                    <li className={classes.liClass} >No items</li>\r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid,  \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n     \r\n    const [colorSelect, setColorSelect] = React.useState(props.data.classes.color || 'inherit') \r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft,  \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n        if(colorSelect === 'custom') {\r\n            sentData.classes.color = colorCustom\r\n        } else {\r\n            sentData.classes.color = colorSelect\r\n        }\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (value, index) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItemList = (index) => { \r\n        let conf = window.confirm(\"Delete item?\");\r\n        if(conf) {\r\n            let newItems = items.slice()\r\n            newItems.splice(index, 1)\r\n             \r\n            setItems(newItems) \r\n            setIsDisableBtn(false)\r\n        } \r\n    } \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    } \r\n    const swapList = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>  \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Block Padding Left\" \r\n                                            variant='filled'\r\n                                            value={paddingLeft}\r\n                                            setValue={setPaddingLeft}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Item Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={itemsPadding}\r\n                                            setValue={setItemsPadding}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                </Box>\r\n                                 \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n \r\n                                       \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >\r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"left\"\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} alignItems='flex-start' p={1} > \r\n                                                <InputChange\r\n                                                    id={index}\r\n                                                    fullWidth={true}\r\n                                                    multiline={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant='outlined'\r\n                                                    value={item}\r\n                                                    setValue={handleItemChange}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                />  \r\n                                                <Box mr={0.5} />\r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItemList(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <Box px={1}>\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='text'\r\n                                        label={`New Item`} \r\n                                        variant=\"outlined\" \r\n                                        size='small'  \r\n                                        value={newItem}\r\n                                        onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                    />\r\n                                    <Box my={1}>\r\n                                        <Button \r\n                                            onClick={handleAddItem}\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            disabled={newItem.length > 0 ? false : true}\r\n                                        >\r\n                                            Add new item\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box mt={5} />\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` list margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` list margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                            \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor) \r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }}   \r\n        })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren.length !== 0 ? props.textChildren : '(No text - paragraph)'\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)     \r\n\r\n        const { menu, menuTitle, responseValues, responseMobile, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right, \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n      \r\n     \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)   \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)   \r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />     \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >   \r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box> \r\n                                    \r\n                            </Box>\r\n\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                            </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                              \r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box> */}\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        let  imageBorderColor = getColorByPalette(theme, props.imageClassName.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} , \r\n            imageStyle: props.imageClassName ? {...props.imageClassName, ...{ \r\n                borderColor: imageBorderColor\r\n            }} : {} ,  \r\n            imageStabilization: {\r\n                maxWidth: '100%', \r\n                maxHeight: '100%',  \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    height: 'auto'\r\n                }, \r\n                // [theme.breakpoints.down('md')]: { \r\n                // }\r\n            },\r\n            mobileClass: {\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    textAlign: 'center', \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5,\r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n            }\r\n          })\r\n    }); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    ButtonGroup, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n    const [imageBorderColorSelect, setImageBorderColorSelect] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderColorCustom, setImageBorderColorCustom] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n  \r\n    // eslint-disable-next-line\r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n     \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n \r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    const imageBorderTheme = isNoThemeColor(props.data.image.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        if(imageBorderTheme) {  \r\n            setImageBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor, props.data.image.classes.borderColor ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius,  \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        if (imageBorderColorSelect === 'custom') { sentData.classes.borderColor = imageBorderColorCustom } \r\n        else { sentData.classes.borderColor = imageBorderColorSelect }\r\n\r\n\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }\r\n     \r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Image Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />   \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <InputChange\r\n                                                    id={null} \r\n                                                    fullWidth={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label=\"Image title\" \r\n                                                    variant='filled'\r\n                                                    value={imageTitle}\r\n                                                    setValue={setImageTitle}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                /> \r\n                                                 \r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Top'\r\n                                                variant='filled'\r\n                                                value={imageMargin.top}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={imageMargin.bottom}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Left'\r\n                                                variant='filled'\r\n                                                value={imageMargin.left}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Right'\r\n                                                variant='filled'\r\n                                                value={imageMargin.right}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Width'\r\n                                                variant='filled'\r\n                                                value={imageWidth}\r\n                                                setValue={setImageWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Height'\r\n                                                variant='filled'\r\n                                                value={imageHeight}\r\n                                                setValue={setImageHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} > \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={imageBorderColorSelect} \r\n                                                setColorSelect={setImageBorderColorSelect}\r\n                                                colorCustom={imageBorderColorCustom}\r\n                                                setColorCustom={setImageBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={imageBorderRadius}\r\n                                                setValue={setImageBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={imageBorderWidth}\r\n                                                setValue={setImageBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                 \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            \r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            F = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                                 \r\n\r\n\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            \r\n                            <Box mt={5} />\r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                 */}\r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer } onClick={handleOpen}>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem } \r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n  \r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n \r\n    console.log('dumb container work') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.classes.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.classes.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.classes.borderColor)\r\n\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n             myClassName: {...props.classes, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor \r\n            }} ,   \r\n            styleClass: { \r\n                [`@media (max-width: 960px)`]: { \r\n                    marginTop: props.classes.marginTop*0.8,\r\n                    marginBottom: props.classes.marginBottom*0.8, \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    marginTop: props.classes.marginTop*0.5,\r\n                    marginBottom: props.classes.marginBottom*0.5,  \r\n                },\r\n            },\r\n            noPadding : { \r\n                paddingTop: 0,  \r\n                paddingBottom: 0,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n            },\r\n            yesPadding : { \r\n                paddingTop: props.classes.paddingTop,  \r\n                paddingBottom: props.classes.paddingBottom,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.8,\r\n                    paddingBottom: props.classes.paddingBottom*0.8,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.5,\r\n                    paddingBottom: props.classes.paddingBottom*0.5,\r\n                },\r\n            }, \r\n        })\r\n    });\r\n    const classes = useStyles(); \r\n\r\n    const isPaperClassForContainer = props.settings.isPaper ? classes.noPadding : classes.yesPadding\r\n    const isPaperClassForPaper = props.settings.isPaper ? classes.yesPadding : classes.noPadding\r\n    \r\n    const renderItems = () => { \r\n        return (\r\n            modeDev ?\r\n            props.data.children.map((item) => {   \r\n                // eslint-disable-next-line\r\n                let orderFirst = props.data.children.indexOf(item) == 0 ? true : false\r\n                // eslint-disable-next-line\r\n                let orderLast = props.data.children.indexOf(item) == props.data.children.length - 1 ? true : false\r\n\r\n                switch(item.type) {  \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens} \r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )\r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )  \r\n                    default: break;\r\n                }  \r\n                return null\r\n            })\r\n            :\r\n            props.data.children.map((item) => {  \r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    default: break;\r\n                }  \r\n                return null\r\n            }) \r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                > \r\n                    <Paper style={{paddingLeft: 15, paddingRight: 15}} className={isPaperClassForPaper}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={props.settings.innerContainer}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={props.settings.innerContainer}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    const swapChildrens = (direction, id) => {  \r\n\r\n        let newChildren = props.data.children.slice() \r\n        let activeIndex  \r\n        newChildren.map( (item) => { \r\n            if(item.id === id) {\r\n              activeIndex = newChildren.indexOf(item) \r\n            }\r\n            return 0 \r\n        }) \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newChildren.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex - 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex + 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex + 1 ] = movedItem  \r\n        } \r\n \r\n        props.reSaveContainer(props.data.id, newChildren)\r\n    }\r\n\r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                        swapChildrens={swapChildrens}\r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07), \r\n                }, \r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={7} >\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} > \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Sub Heading'\r\n                                            variant='outlined'\r\n                                            value={subHeading}\r\n                                            setValue={setSubHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                         \r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >  \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Input Label\" \r\n                                                variant='outlined'\r\n                                                value={inputLabel}\r\n                                                setValue={setInputLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Button Label\" \r\n                                                variant='outlined'\r\n                                                value={buttonLabel}\r\n                                                setValue={setButtonLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Form Policy\" \r\n                                            variant='outlined'\r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />   \r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemBody, setNewItemBody] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, dialogContentUnstyle, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItemHead = (head, index) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head \r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleUpdateItemBody = (body, index) => { \r\n        const newItems = items.slice() \r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const conf = window.confirm('Delete item?')\r\n        if(conf) {\r\n            const newItems = items.slice()\r\n            newItems.splice(index, 1) \r\n    \r\n            setItems(newItems)\r\n            setIsDisableBtn(false); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                             \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Head'\r\n                                                            variant='outlined'\r\n                                                            value={item.head}\r\n                                                            setValue={handleUpdateItemHead}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />\r\n                                                        <Box mt={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Body'\r\n                                                            variant='outlined'\r\n                                                            value={item.body}\r\n                                                            setValue={handleUpdateItemBody}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        /> \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n \r\n                                    <Box mt={5} />  \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                     \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken, fade } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07), \r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) { \r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData)  \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Location'\r\n                                            variant='outlined'\r\n                                            value={location}\r\n                                            setValue={setLocation}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Phone'\r\n                                            variant='outlined'  \r\n                                            value={phone}\r\n                                            setValue={setPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} > \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Comment Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputComment}\r\n                                            setValue={setInputComment}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >       \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                  \r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={true} \r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Map Frame\" \r\n                                                        variant='outlined'  \r\n                                                        value={mapFrame}\r\n                                                        setValue={setMapFrame}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />  \r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box my={5} />\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    // let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(colorButton, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorButton)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem,  dialogContentUnstyle, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n\r\n        \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => { \r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }  Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />   \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />  \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.5) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorMain, 0.3) ,  \r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorMain)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, dialogContentUnstyle,\r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Action Line \r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Heading Size\"\r\n                                                variant='outlined'\r\n                                                value={headingSize}\r\n                                                setValue={setHeadingSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n \r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />   \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box    \r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const tableMinWidth = props.data.tableMinWidth\r\n    const isButton = props.data.isButton\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isButtonShowMore = rows.length - visibleRows > 0 ? true : false  \r\n    const [isButtonClick, setIsButtonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: { \r\n                minWidth: tableMinWidth,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsButtonClick(!isButtonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(isButtonClick)\r\n            return (\r\n                rows.map((row, index) => { \r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                })\r\n            )\r\n        else\r\n            return (\r\n                rows.map((row, index) => {\r\n                    if(index < visibleRows)\r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                    return false\r\n                })\r\n            )\r\n       \r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            {\r\n                isButton && \r\n                <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                    <Button \r\n                        variant='contained'   \r\n                        className={classes.tableButton}\r\n                        onClick={() => { handleOpenModal(row.name) }}\r\n                    >\r\n                        { buttonText }\r\n                    </Button>\r\n                </TableCell>\r\n            }\r\n        </StyledTableRow> \r\n    )\r\n    const renderButton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isButtonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead> \r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            {\r\n                                isButton &&\r\n                                <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    \r\n                        <TableBody>\r\n                            {\r\n                                renderRows()\r\n                            }\r\n                        </TableBody> \r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isButtonShowMore &&\r\n                renderButton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemPrice, setNewItemPrice] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n    FormControlLabel, \r\n    Switch, \r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [tableMinWidth, setTableMinWidth] = React.useState(props.data.tableMinWidth || 200 )\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses   \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.tableMinWidth = tableMinWidth \r\n        newData.isButton = isButton \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (value, index) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChangeName = (name, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].name = name \r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleRowChangePrice = (price, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false);  \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <Box my={2} display={'flex'}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1}> \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Text for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={textButton}\r\n                                                        setValue={setTextButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box my={3} display='flex' alignItems='center'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip  title=\"The table will scroll horizontally with a smaller width\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            fullWidth={true}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Table Min Width\"\r\n                                            variant='outlined'\r\n                                            value={tableMinWidth}\r\n                                            setValue={setTableMinWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <InputChange\r\n                                                            id={index} \r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item}\r\n                                                            setValue={handleTableHeadChange}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Row' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Name ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.name}\r\n                                                            setValue={handleRowChangeName}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        <Box mr={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={false}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Price ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.price}\r\n                                                            setValue={handleRowChangePrice}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        {/* <ChangeItem handleRowChange={handleRowChange} item={item} index={index} /> */}\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label={`Quantity to show`}\r\n                                                variant='outlined'\r\n                                                value={visibleRows}\r\n                                                setValue={setVisibleRows}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label={`Text for botton`}\r\n                                                variant='outlined'\r\n                                                value={visibleBottonText}\r\n                                                setValue={setVisibleBottonText}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null}  \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label={`Text for botton clicked`}\r\n                                            variant='outlined'\r\n                                            value={visibleBottonTextClick}\r\n                                            setValue={setVisibleBottonTextClick}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                        \r\n                                    </Box>\r\n                                                \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('') \r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput,\r\n                    background: fade(colorFocusInput, 0.07), \r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                paddingRight: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName,  \r\n            place: 'line Form',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('') \r\n\r\n    }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if (colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n         \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>  \r\n                                    <Box mt={2} >        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >      \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n\r\n    let history = useHistory();\r\n    \r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({  \r\n            swiper: {\r\n                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },  \r\n            },\r\n            activeSlide: {\r\n                cursor: 'pointer', \r\n                '&:hover': {\r\n                    '& $slideImg': {\r\n                        transform: \"scale(1.03)\"\r\n                    },\r\n                    '& $slideTitle': { \r\n                        backgroundColor: theme.palette.background.default\r\n                    },\r\n                }\r\n            }, \r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,   \r\n                overflow: 'hidden',    \r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: '3vw', \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2), \r\n                borderBottom: `2px solid ${color}`,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 20\r\n                }\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 300, \r\n                    marginLeft: spaceBetween,\r\n                    marginRigth: spaceBetween,\r\n                    marginBottom: spaceBetween, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 0, \r\n                        marginRight: 0, \r\n                        maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n     \r\n  \r\n    React.useEffect(() => {   \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('swiper resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const handleSlideClick = (slide) => {\r\n        if(slide.isButton) {\r\n            handleOpen(slide.targetButton)\r\n        }\r\n        if(slide.isUrl) {\r\n            history.push(`${slide.activePage.slug}`) \r\n        }\r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key} \r\n            ref={slideRef} \r\n            className={`${classes.slide} ${(slide.isButton || slide.isUrl) ? classes.activeSlide : '' } `}\r\n            onClick={() => { handleSlideClick(slide) }}\r\n        >\r\n            <Box className={classes.slideBox}>\r\n                <Box \r\n                    style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                    className={classes.slideImg}\r\n                />\r\n                {\r\n                    slide.title.length > 0 &&\r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.title}\r\n                    </Typography>\r\n                }\r\n                \r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,  \r\n    Typography, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newImageName, setNewImageName] = React.useState('')\r\n    const [newImageUrl, setNewImageUrl] = React.useState('')\r\n    const [newImageTitle, setNewImageTitle] = React.useState('')\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setNewImageUrl(downloadURL)\r\n        setNewImageName(generateImageName)   \r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newImageUrl, newImageName, newImageTitle)\r\n        setNewImageName('')\r\n        setNewImageUrl('') \r\n        setNewImageTitle('') \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n            <Button color='primary' variant='contained' className={props.btnWithLabel}  >\r\n                <label htmlFor='image-input-label'>\r\n                    Set image\r\n                </label>\r\n                <input\r\n                    id=\"image-input-label\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {  handleImageUpload(e) }}\r\n                    style={{\r\n                    display: \"none\"\r\n                }}/>\r\n            </Button> \r\n            <Box ml={2} display='inline-block'>\r\n                <Typography variant='caption' > Image: { newImageName.replace(`-${props.id}`, '') }</Typography>\r\n            </Box>\r\n            <Box my={1}>\r\n                <TextField \r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Title'\r\n                    variant=\"outlined\"\r\n                    value={newImageTitle}\r\n                    onChange={(e) => { setNewImageTitle(e.target.value) }}\r\n                />\r\n                <Box my={1}>\r\n                    <Button\r\n                        disabled={newImageName !== '' ? false : true }\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useContext, useState, useEffect, memo} from 'react'\r\n\r\nimport {   \r\n    Box,   \r\n    FormControl, \r\n    InputLabel, \r\n    Select,  \r\n    MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nconst SelectPage = memo( ({value, setValue, index}) => {\r\n   \r\n    const { categories } = useContext(CategoryContext)\r\n\r\n    const [pages, SetPages] = useState([]) \r\n    const [selectValue, setSelectValue] = useState(value)\r\n\r\n    useEffect( () => {\r\n        createPages() \r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if(selectValue !== value && value !== null) {\r\n            setSelectValue(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const createPages = () => {\r\n        let pagesArray = []\r\n        categories.forEach( item => { \r\n            pagesArray.push(item)\r\n            if(item.pages.length > 0) {\r\n                item.pages.forEach( innerItem => {\r\n                    let page = JSON.parse(JSON.stringify(innerItem))\r\n                    page.categorySlug = item.slug\r\n                    pagesArray.push(page)\r\n                })\r\n            }\r\n        })\r\n        SetPages(pagesArray) \r\n    }\r\n    \r\n    const handleChange = (id) => { \r\n        const activePage = {\r\n            id: id\r\n        }\r\n        pages.forEach( page => {\r\n            if(page.id === id) {\r\n                activePage.title = page.title\r\n                activePage.slug = (page.type === 'page') ? (`/${page.categorySlug}/${page.slug}`) : (`/${page.slug}`)\r\n            }\r\n        })\r\n        setSelectValue(id) \r\n        if(index !== undefined) { \r\n            setValue(activePage, index)\r\n        }\r\n        else {\r\n            setValue(activePage)\r\n        }\r\n    }\r\n\r\n    const renderLinkList = () => { \r\n        return pages.map( link => {\r\n            switch(link.type) {\r\n                case('category') : {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - { link.slug}</MenuItem> \r\n                }\r\n                case('page'): {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - {`${link.categorySlug}/${link.slug}`}</MenuItem>\r\n                }\r\n                default: break;\r\n            } \r\n            return false\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <Box> \r\n            <FormControl \r\n                variant='filled' \r\n                size='small'    \r\n                // style={{width: '100%'}}\r\n                fullWidth\r\n            >\r\n                <InputLabel id={`url-pages`}>Choice page</InputLabel>\r\n                <Select\r\n                    labelId={`url-pages`}\r\n                    id=\"url-select\"\r\n                    value={selectValue}  \r\n                    fullWidth\r\n                    style={{maxWidth: '100%'}}\r\n                    onChange={(e) => { handleChange(e.target.value) }}\r\n                >   \r\n                    {\r\n                        renderLinkList()\r\n                    }\r\n                        \r\n                </Select>\r\n            </FormControl>\r\n        </Box> \r\n    )\r\n})\r\n\r\nexport default SelectPage\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent, \r\n    fade, \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const [imageForDelete, setImageForDelete] = React.useState([])\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-block', \r\n                width: 250, \r\n                height: 250, \r\n                position: 'relative', \r\n                \"& img\": {\r\n                    width: '100%', \r\n                    height: '100%'\r\n                },\r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }, \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            reloadSettings: {\r\n                display: \"flex\", \r\n                alignItems: 'center', \r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                '&:hover': {\r\n                    borderColor: theme.palette.warning.light,  \r\n                    '& $warningBtn': {\r\n                        backgroundColor: theme.palette.warning.main,   \r\n                        '& svg': {\r\n                            fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                        }\r\n                    }\r\n                }\r\n                 \r\n            },\r\n            warningBtn: {\r\n                backgroundColor: theme.palette.divider, \r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.warning.light,\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        if(imageForDelete.length > 0) {\r\n            imageForDelete.forEach( name => {\r\n                removeImage(name)\r\n            })\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n        setImageForDelete([])\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  { \r\n            let imgArray = []\r\n            slides.forEach( slide => {\r\n                if(slide.imageName !== 'ImageExample') imgArray.push(slide.imageName)\r\n            })\r\n            if(imgArray.length > 0) {\r\n                imgArray.forEach( name => {\r\n                    removeImage(name)\r\n                })\r\n            }\r\n\r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsUrl = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isUrl = !value \r\n        newSlides[index].isButton = false \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].activePage = activePage  \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButton = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isButton = !value \r\n        newSlides[index].isUrl = false\r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButtonTarget = (value, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].targetButton = value \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false) \r\n    }\r\n\r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => {\r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newImageForDelete = imageForDelete.slice()\r\n            const newSlides = slides.slice()\r\n            const deletedImageName = newSlides[index].imageName\r\n    \r\n            if(deletedImageName !== 'imageExample') newImageForDelete.push(deletedImageName)\r\n    \r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides)\r\n            setImageForDelete(newImageForDelete)\r\n            setIsDisableBtn(false) \r\n        }\r\n    }\r\n    const addSlide = ( url, name, title ) => {\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            imageUrl: url, \r\n            imageName: name, \r\n            title: title, \r\n            isLink: false, \r\n            activePage: [],\r\n            isButton: false, \r\n            targetButton: \"\"\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {  \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    {\r\n                        !item.isUrl &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isButton }\r\n                                            onChange = { () => {handleChangeIsButton(item.isButton, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Modal Button\"\r\n                            /> \r\n                            {\r\n                                item.isButton &&  \r\n                                <Box my={1}>  \r\n                                    <InputChange\r\n                                        id={index}\r\n                                        fullWidth={true}\r\n                                        type='text'\r\n                                        size=\"small\"  \r\n                                        label=\"Target for Modal\"\r\n                                        variant='outlined'\r\n                                        value={item.targetButton}\r\n                                        setValue={handleChangeIsButtonTarget}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />  \r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        !item.isButton &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isUrl }\r\n                                            onChange = { () => {handleChangeIsUrl(item.isUrl, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Link\"\r\n                            /> \r\n                            {\r\n                                item.isUrl &&  \r\n                                <Box my={1}>\r\n                                    <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} />\r\n                                </Box>\r\n                                // <Box my={1}> \r\n                                //     <FormControl \r\n                                //         variant='filled' \r\n                                //         size='small'    \r\n                                //         // style={{width: '100%'}}\r\n                                //         fullWidth\r\n                                //     >\r\n                                //         <InputLabel id={`url-${index}`}>Choice page</InputLabel>\r\n                                //         <Select\r\n                                //             labelId={`url-${index}`}\r\n                                //             id=\"url-select\"\r\n                                //             value={item.url}  \r\n                                //             fullWidth\r\n                                //             style={{maxWidth: '100%'}}\r\n                                //             onChange={(e) => {setIsDisableBtn(false); handleChangeUrl(e.target.value, index) }}\r\n                                //         >   \r\n                                //             {\r\n                                //                 renderLinkList()\r\n                                //             }\r\n                                             \r\n                                //         </Select>\r\n                                //     </FormControl>\r\n                                // </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box>\r\n                        <img src={item.imageUrl} alt={item.imageName}/>\r\n                        <Box className={classes.dumbSlideTitle}>  \r\n                            <InputChange\r\n                                id={index}\r\n                                fullWidth={true}\r\n                                type='text'\r\n                                size=\"small\"  \r\n                                variant='outlined'\r\n                                value={item.title}\r\n                                setValue={handleSlideTitle}\r\n                                setIsDisableBtn={setIsDisableBtn} \r\n                            /> \r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n      \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Swiper margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Swiper margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    \r\n                                    <Box className={classes.reloadSettings}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Arrows'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} btnWithLabel={classes.btnWithLabel} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken, fade } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n \r\n    const useStyles = makeStyles((theme) => {   \r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundColor: fade(theme.palette.primary.main, 0.3), \r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginTop: -10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorButton, 0.2) , \r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) { \r\n    \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.imageUrl)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    \r\n    const colorButtonTheme = isNoThemeColor(props.data.colorButton)\r\n    const colorTextTheme = isNoThemeColor(props.data.colorText)\r\n\r\n    React.useEffect(() => {\r\n        if(colorButtonTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        if(colorTextTheme) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton, props.data.colorText])  \r\n   \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) { \r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Banner Settings ' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                         { !isDisableBtn && \"Close to save - \" }  Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Min Height for block\"\r\n                                                variant='outlined'\r\n                                                value={minHeight}\r\n                                                setValue={setMinHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant='outlined'\r\n                                                value={paddingVertical}\r\n                                                setValue={setPaddingVertical}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />    \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,   \r\n                cursor: 'pointer',   \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 10, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        // maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    React.useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n  \r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`}\r\n        >\r\n            <NavLink to={slide.activePage.slug}>\r\n                <Box className={classes.slideBox}> \r\n                    <Box className={classes.slideImg}>\r\n                        <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                    </Box> \r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.activePage.title} \r\n                    </Typography> \r\n                </Box>\r\n            </NavLink>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n\r\nimport SelectPage from '../../functions/SelectPage'\r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = React.useState('') \r\n    const [idActive, setIdActive] = React.useState(null) \r\n    const [activePage, setActivePage] = React.useState({}) \r\n \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, activePage)\r\n        setNewSvg('') \r\n        setIdActive('')\r\n        setActivePage({})\r\n    }\r\n    function handleChangeUrl(selectedPage) {  \r\n     \r\n        setIdActive(selectedPage.id)\r\n        setActivePage(selectedPage)\r\n      \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <TextField \r\n                    fullWidth\r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Svg'\r\n                    variant=\"outlined\"\r\n                    value={newSvg}\r\n                    onChange={(e) => { setNewSvg(e.target.value) }}\r\n                />\r\n                <Box my={1}> \r\n                    <SelectPage value={idActive} setValue={handleChangeUrl} />\r\n                </Box> \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            reloadSettings: {\r\n                display: \"flex\", \r\n                alignItems: 'center', \r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                '&:hover': {\r\n                    borderColor: theme.palette.warning.light,  \r\n                    '& $warningBtn': {\r\n                        backgroundColor: theme.palette.warning.main,   \r\n                        '& svg': {\r\n                            fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                        }\r\n                    }\r\n                }\r\n                 \r\n            },\r\n            warningBtn: {\r\n                backgroundColor: theme.palette.divider, \r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.warning.light,\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  {  \r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n   \r\n        newSlides[index].activePage = activePage \r\n         \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => { \r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newSlides = slides.slice() \r\n    \r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides) \r\n            setIsDisableBtn(false) \r\n        } \r\n    }\r\n    const addSlide = ( svg, activePage ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            activePage: activePage,   \r\n            inner: []\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>  \r\n                    <Box my={1}> \r\n                        <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} /> \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.activePage.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Block Pages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Block Pages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Block Pages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Block Pages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                      \r\n                                    <Box className={classes.reloadSettings}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react' \r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n \r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    const isButton = props.data.isButton  \r\n    const targetButton = props.data.targetButton \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {  \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                }, \r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,    \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n\r\n                cursor: isButton ? 'pointer' : 'default', \r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 15, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('xs')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        maxWidth: 400,   \r\n                    },\r\n                    '& $slideBox': {\r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        flexDirection: 'row', \r\n                        padding: 10\r\n                    },\r\n                    '& $slideImg': {\r\n                        position: 'relative', \r\n                        top: 'auto',\r\n                        left: 'auto',\r\n                        minWidth: 50\r\n                    },\r\n                    '& $slideTitle': {\r\n                        marginTop: 0, \r\n                        marginLeft: 8\r\n                    },\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    React.useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n  \r\n    const handleSlideClick = () => { \r\n        if(isButton) handleOpen(targetButton) \r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`} \r\n            onClick={handleSlideClick}\r\n        > \r\n            <Box className={classes.slideBox}> \r\n                <Box className={classes.slideImg}>\r\n                    <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                </Box> \r\n                <Typography\r\n                    component='h6'\r\n                    className={classes.slideTitle}\r\n                >\r\n                    {slide.title} \r\n                </Typography> \r\n            </Box> \r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = React.useState('') \r\n    const [newTitle, setNewTitle] = React.useState('') \r\n    \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, newTitle)\r\n        setNewSvg('') \r\n        setNewTitle('') \r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Title'\r\n                        variant=\"outlined\"\r\n                        value={newTitle}\r\n                        onChange={(e) => { setNewTitle(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Svg'\r\n                        variant=\"outlined\"\r\n                        value={newSvg}\r\n                        onChange={(e) => { setNewSvg(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n    \r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            reloadSettings: {\r\n                display: \"flex\", \r\n                alignItems: 'center', \r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                '&:hover': {\r\n                    borderColor: theme.palette.warning.light,  \r\n                    '& $warningBtn': {\r\n                        backgroundColor: theme.palette.warning.main,   \r\n                        '& svg': {\r\n                            fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                        }\r\n                    }\r\n                }\r\n                 \r\n            },\r\n            warningBtn: {\r\n                backgroundColor: theme.palette.divider, \r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.warning.light,\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.isButton = isButton   \r\n        newData.targetButton = targetButton   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  {  \r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => { \r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newSlides = slides.slice() \r\n\r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides) \r\n            setIsDisableBtn(false)\r\n        }\r\n         \r\n    }\r\n    const addSlide = ( svg, title ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            title: title\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set title\"\r\n                            variant='outlined'\r\n                            value={item.title}\r\n                            setValue={handleSlideTitle}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Advantages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Advantages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Advantages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Advantages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Box display='flex' mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Open Modal by click\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1} > \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Target for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={targetButton}\r\n                                                        setValue={setTargetButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />   \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.reloadSettings}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '20px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                margin: '10px 0', \r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\nimport BlocksPagesElement from '../library/blocksPages/ElementCreator'   \r\nimport BlocksAdvElement from '../library/blocksAdv/ElementCreator'   \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n  const BlocksPagesLayout = layouts.blocksPages \r\n  const BlocksAdvLayout = layouts.blocksAdv \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => { \r\n\r\n    const classesRef = StylesChangers()\r\n    const commonClasses = classesRef(theme)\r\n\r\n    const { menu, menuTitle, dialogContentUnstyle } = commonClasses \r\n\r\n    return ({ \r\n      dialogContentUnstyle: dialogContentUnstyle, \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 70,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38,  \r\n          opacity: 0, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')   newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner')  newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')   newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap')  newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')       newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine')  newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')       newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')    newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')      newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')      newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n    if(type === 'blocksPages') newCont = JSON.parse(JSON.stringify(BlocksPagesLayout))\r\n    if(type === 'blocksAdv')   newCont = JSON.parse(JSON.stringify(BlocksAdvLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksPages') { \r\n          return(\r\n              <BlocksPagesElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksAdv') { \r\n          return(\r\n              <BlocksAdvElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <Box className={classes.btnContainer}> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <React.Fragment>\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip> \r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon, contain link to page. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksPages') }}>\r\n                                    Blocks with Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksAdv') }}>\r\n                                    Blocks without Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>  \r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Line for small text paragrapher with ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images. Has be blocks' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </React.Fragment>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop'  \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n             \r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton, \r\n} from '@material-ui/core';  \r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPaletteForGradient} from '../functions/colorChanger/ColorCalculation'\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  // const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n   \r\n    // const currentColor = getColorByPalette(theme, modalSettings.colorButton)\r\n  \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    // colorGradient1 = lighten(currentColor, 0.2)\r\n    // colorGradient2 = darken(currentColor, 0.2) \r\n     \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: \"#7979792b\", \r\n        },\r\n         \r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n \r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst  AlertComponent = () => { \r\n    \r\n    const { isShowAlert, closeAlert, alertText  } = React.useContext(SendFormContext)  \r\n\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        closeAlert() \r\n    }\r\n   \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={isShowAlert} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert  /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}