{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","imageAnswerUrl","imageList","fetchListFromFirestore","newImage","oldName","newList","slice","isNew","name","i","length","quantity","removeImage","splice","newItem","url","push","updateList","listRef","imageData","ref","put","storageRef","getDownloadURL","downloadURL","addImageToList","imageRef","child","index","nameList","removeImageFromStoreAndList","uploadImage","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newReq","Object","assign","time","getCurrentDate","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","paddingBottom","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","bottom","paddingTop","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineColor","main","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","dumbWrapper","Tooltip","title","placement","Button","onClick","size","variant","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","IconButton","fullWidth","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","save","contrastColor","getContrastText","primary","boxColor","flexGrow","marginRight","border","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","prevOpen","onChangeComplete","newColor","hex","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","colorSelect","setColorSelect","colorCustom","setColorCustom","uploadHandler","on","snapshot","message","htmlFor","event","files","src","alt","Divider","margin","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","labelId","MenuItem","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","colorPreview","colorItem","flexWrap","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","DumbComponent","modalBtnColor1","modalBtnColor2","widthMobile","headerHeight","setHeaderHeight","backgroundHeader","modalBtnColor","darken","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","amber","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","ml","newData","AdminHeader","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","fill","footer","footerHeading","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","handleChange","place","Avatar","loginWithEmail","res","err","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","toggleDrawer","addHeading","a","newChildren","JSON","parse","stringify","reSaveContainer","pt","pb","mr","aria-haspopup","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","resposiveFontSize","sm","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","focus","sentData","reSaveChildren","prop","confirm","removeItem","imageStyle","multiline","rowsMax","imageClassName","imageStabilization","mobileClass","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","classForResp","createArrayImages","images","forEach","isFirst","swapContainer","isLast","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","input","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","imageType","reSaveItem","items","disableMobileGutters","colorNumber","indexForDisplay","head","body","setItems","handleUpdateItem","newItems","swapItem","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","colorTheme","headingSize","colorMain","fade","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","withStyles","TableRow","table","tableCell","down","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","align","price","TableContainer","Table","TableHead","TableBody","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleRowChange","newRows","newRow","handleTableHeadChange","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","setData","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","m","key","orderFirst","orderLast","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6554fa7d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n      \r\n    } \r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    state = { \r\n        imageAnswerUrl: '', \r\n        imageList: [ ], \r\n    } \r\n\r\n    async componentDidMount() { \r\n        //   this.fetchListFromStorage()\r\n          this.fetchListFromFirestore()\r\n    }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll().then(function(res) {\r\n    //         res.items.forEach(function(itemRef) { \r\n    //             imagesArray.push(itemRef.fullPath) \r\n    //         });\r\n    //       }).catch(function(error) {\r\n    //           console.log(error) \r\n    //       });\r\n    //       this.setState({\r\n    //         imageList: imagesArray\r\n    //       }) \r\n    // }\r\n\r\n    async addImageToList(newImage, oldName) {\r\n        const newList = this.state.imageList.slice()\r\n        let newItem\r\n        let isNew = true\r\n        let isNeedUpdate = newImage.name === oldName ? false : true \r\n        if(isNeedUpdate) { \r\n            for(let i = 0; i < newList.length; i++) {\r\n                if(newList[i].name === newImage.name) {\r\n                    //уже было загружено\r\n                    newList[i].quantity++ \r\n                    isNew = false\r\n                }\r\n                if(newList[i].name === oldName) {\r\n                    //уже было загружено\r\n                    newList[i].quantity--  \r\n                    if( newList[i].quantity === 0 ) { \r\n                        this.removeImage(oldName) \r\n                        newList.splice(i, 1)\r\n                    }\r\n                }\r\n            }\r\n            if(isNew) {\r\n                newItem = {\r\n                    name: newImage.name, \r\n                    url: newImage.url, \r\n                    quantity: 1\r\n                }\r\n                newList.push(newItem)\r\n            }\r\n        }\r\n        else { \r\n            console.log(newImage, oldName)\r\n        }\r\n         \r\n        this.setState({\r\n            imageList: newList\r\n        })\r\n \r\n        console.log(this.state.imageList, oldName)\r\n\r\n        this.updateList(newList)\r\n    }\r\n\r\n    async fetchListFromFirestore() {\r\n        const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n        const doc = await listRef.get();\r\n      \r\n        if (!doc.exists) {\r\n            console.log('No such page!');  \r\n\r\n        } else { \r\n            this.setState({\r\n                imageList: doc.data().list\r\n            }) \r\n        }\r\n    }\r\n    async uploadImage(imageData, oldName) { \r\n        const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        const newImage = {\r\n            url: downloadURL, \r\n            name: imageData.name, \r\n            quantity: 1\r\n        }\r\n        this.addImageToList(newImage, oldName)\r\n  \r\n    }\r\n    async updateList(newList) {\r\n        await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({\r\n                imageList: newList\r\n            })\r\n        })\r\n    }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImageFromStoreAndList(name) {\r\n        console.log(name)\r\n        const newList = this.state.imageList.slice()\r\n        newList.map( (item, index) => {\r\n            if(item.name === name) {\r\n                item.quantity--\r\n                if(item.quantity === 0) newList.splice(index, 1)\r\n            }\r\n        })\r\n        this.setState({\r\n            imageList: newList\r\n        })  \r\n        this.removeImage(name)\r\n        this.updateList(newList)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    imageList: this.state.imageList, \r\n                    nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImageFromStoreAndList: (name) => {\r\n                        this.removeImageFromStoreAndList(name)\r\n                    },\r\n                    uploadImage: (data, name) => {\r\n                        this.uploadImage(data, name)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            paddingBottom: 0,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                 \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            }\r\n        },\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n    \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 350px)\",\r\n                maxWidth: 700,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid #eee`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home  Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n\r\n    const togglePicker = () => setIsOpen(prevOpen => !prevOpen);\r\n    const handleChange = (newColor) => setColor(newColor.hex);\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => {\r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    initialColor === color ? \r\n                    <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(modal.color !== 'primary' && modal.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'right'}\r\n                                                        noInherit={true} \r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n \r\n    React.useEffect(() => {\r\n        if( settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box  my={4} width={'100%'} clone={true}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nfunction DumbComponent() {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings} = React.useContext(CategoryContext)    \r\n  \r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n\r\n\r\n    let modalBtnColor = modal.color\r\n    let modalBtnColor1 \r\n    let modalBtnColor2 \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        if(modalBtnColor === 'primary') {\r\n            modalBtnColor1 = theme.palette.primary.main\r\n            modalBtnColor2 = theme.palette.primary.dark\r\n        }\r\n        if(modalBtnColor === 'secondary') {\r\n            modalBtnColor1 = theme.palette.secondary.main\r\n            modalBtnColor2 = theme.palette.secondary.dark\r\n        }\r\n        if(modalBtnColor !== 'primary' && modalBtnColor !== 'secondary' ) {\r\n            modalBtnColor1 = modal.color\r\n            modalBtnColor2 = darken(modal.color, 0.4) \r\n        } \r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        }\r\n        \r\n        if( backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.3) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n\r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: colorHeader ,\r\n                // color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal } = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            // console.log(headHeight)\r\n            setHeaderHeight(headHeight + 5)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal}\r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,  \r\n    FormControl, \r\n    Select,\r\n    MenuItem, \r\n    InputLabel\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n   \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                    <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"color-select-label\"\r\n                                        id=\"color-select\"\r\n                                        value={colorSelect}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                    >\r\n                                        <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                        <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Box ml={1} >\r\n                                    {\r\n                                        colorSelect === 'custom' &&\r\n                                        <ColorPicker\r\n                                            initialColor = {colorCustom}\r\n                                            changeColor = {setColorCustom}\r\n                                            setIsDisableBtn = {setIsDisableBtn}\r\n                                            position = {'right'}\r\n                                        /> \r\n                                    }\r\n                                    \r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\n// import Dumb from '../components/library/table/DumbComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const disableCheck = () => {\r\n        if(name !== '' && password !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)\r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        disableCheck()\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsDisableBtn(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"text\"\r\n                            label=\"User\"\r\n                            name=\"user\"\r\n                            autoComplete='true'\r\n                            autoFocus\r\n                            value={name}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"name\")} }\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            value={password}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"password\")} }\r\n                        />\r\n                        {\r\n                            error && \r\n                            <Alert severity=\"error\">{error.message}</Alert>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport uuid from 'react-uuid' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton\r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem } = commonStyle \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage));\r\n                // newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        console.log(libraryParagraphImage, newItem)\r\n\r\n        // setChildren(newChildren) \r\n\r\n        props.toggleDrawer()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.toggleDrawer()\r\n    } \r\n     \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} > \r\n                 \r\n                {/*  DrawerContainer */}\r\n                    <Drawer anchor={'left'} open={props.open} onClose={props.toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                               \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-paper-label\"\r\n                                            id=\"inner-paper-style\"\r\n                                            value={settingIsPaper}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                            \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Background  -  { backgroundColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={backgroundColor} \r\n                                                changeColor={setBackgroundColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Color  -  { color }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={color} \r\n                                                changeColor={setColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'right'}\r\n                                            /> \r\n                                        </Box>\r\n                                          \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <Box className={classes.inputNumber} >\r\n                                                <Typography  component={'p'} gutterBottom  >\r\n                                                    Border Color  -  { borderColor }\r\n                                                </Typography> \r\n                                                <ColorPicker \r\n                                                    initialColor={borderColor} \r\n                                                    changeColor={setBorderColor} \r\n                                                    setIsDisableBtn={setIsDisableBtn}\r\n                                                    position={'right'}\r\n                                                /> \r\n                                            </Box> \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6,\r\n                lineHeight : 1.2, \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5, \r\n                textAlign: 'center'\r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, то на мобильных устройствах шрифт будет меньше и выравнивание будет по центру  \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) { \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {},\r\n        imageStabilization: {\r\n            maxWidth: '100%', \r\n            maxHeight: '100%',  \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                height: 'auto'\r\n            }, \r\n            // [theme.breakpoints.down('md')]: { \r\n            // }\r\n        },\r\n        mobileClass: {\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                textAlign: 'center', \r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n        }\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    // const handleImageSetting = (event) => {    \r\n    //     uploadHandler(event.target.files[0])\r\n    //     setIsLoading(true)\r\n    // }\r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n\r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.45,\r\n                marginBottom: props.classes.marginBottom*0.45\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        // let slicedChild = props.data.children.slice()\r\n        // slicedChild.forEach((item) => {\r\n        //     if(item.id === id) {\r\n        //         for( let key in item) { \r\n        //             item[key] = data[key]\r\n        //         } \r\n        //     }\r\n        // })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))  \r\n        console.log(props.data.children, filtered)\r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={toggleDrawer} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        toggleDrawer={toggleDrawer}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                '&:hover' : {\r\n                    background: 'none', \r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } \r\n        } )\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        } \r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <img src={iconUrl} alt='icon' width={35} />\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                /> \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className=\"mac-accordion heading\">\r\n            <Container maxWidth={'lg'} className={classes.disableMobileGutters}>\r\n\r\n                <h3> { heading } </h3> \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"mac-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"mac-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n \r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        \r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки аккордиона  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                />   \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${theme.palette.primary.main}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: theme.palette.secondary.light\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: theme.palette.primary.main ,\r\n                border: `2px solid ${theme.palette.primary.main}`, \r\n                color: '#fff',\r\n                '&:hover' : {\r\n                    background: 'none',\r\n                    '&>span': { \r\n                        color: theme.palette.primary.main\r\n                    }\r\n                }\r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${theme.palette.primary.main} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"ln-contact\"> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`ln-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ln-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Switch, FormControlLabel\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 250px )',\r\n                maxWidth: 500,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки контактов  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                    <TextField  \r\n                                                        multiline\r\n                                                        fullWidth\r\n                                                        type='text'\r\n                                                        label=\"Map Frame\" \r\n                                                        variant=\"outlined\"  \r\n                                                        value={mapFrame}\r\n                                                        onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                                    />\r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n  \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const { imageList } = React.useContext(ImageContext)\r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    let colorButton = props.data.colorButton || '#f00'\r\n \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth=\"lg\" >\r\n                <div className=\"electro-about heading\">\r\n                    <Grid container> \r\n                        <Grid item md={6} >\r\n                            <div className=\"electro-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"electro-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel\r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <ColorPicker\r\n                                                                    initialColor = {colorCustom}\r\n                                                                    changeColor = {setColorCustom}\r\n                                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                                    position = {'right'}\r\n                                                                />  \r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorMain === 'primary')  colorMain = theme.palette.primary.main\r\n        if(colorMain === 'secondary') colorMain = theme.palette.secondary.main  \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0), \r\n                margin: theme.spacing(6, 0), \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.containerColored}> \r\n            <Container maxWidth=\"lg\" > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorMain !== 'primary' && props.data.colorMain !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Action Line\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='number'\r\n                                            label=\"Heading Size\"\r\n                                            variant=\"outlined\"\r\n                                            value={headingSize}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeadingSize(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Block</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'top'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        if(mainColor === 'primary')  mainColor = theme.palette.primary.main\r\n        if(mainColor === 'secondary') mainColor = theme.palette.secondary.main  \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: 50, \r\n                marginBottom: 50, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    marginTop: 30, \r\n                    marginBottom: 30, \r\n\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth='lg' className={`${classes.tableContainer} heading`} >\r\n            <h3>{heading}</h3>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (index, value) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, place, value) => {\r\n        const newRows = rows.slice()\r\n        newRows[index][place] = value\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addRow = () => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: \"Table Row\", \r\n            price: 100 \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Text Button\"\r\n                                            variant=\"outlined\"\r\n                                            value={textButton}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setTextButton(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <TextField \r\n                                                            fullWidth\r\n                                                            type='text'\r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant=\"outlined\"\r\n                                                            value={item}\r\n                                                            onChange={(e) => {\r\n                                                            setIsDisableBtn(false);\r\n                                                            handleTableHeadChange(index, e.target.value)\r\n                                                        }}/>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n\r\n                                                            <Box mr={0.5}>\r\n                                                                <Typography variant='caption'>\r\n                                                                    Row {index + 1}\r\n                                                                </Typography>\r\n                                                            </Box>\r\n\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                        <Box mr={1} flexGrow={1}>\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Name ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.name}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'name', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                        <Box >\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Price ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.price}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'price', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={addRow}\r\n                                    >\r\n                                        Add Row\r\n                                    </Button>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <Box  display=\"flex\" >\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Table</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box ml={1} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        noInherit={true}\r\n                                                        position = {'right'}\r\n                                                    />  \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='number'\r\n                                                label={`Quantity to show`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleRows}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleRows(Number(e.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='text'\r\n                                                label={`Text for botton`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleBottonText}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleBottonText(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <TextField  \r\n                                            type='text'\r\n                                            label={`Text for botton clicked`}\r\n                                            variant=\"outlined\"\r\n                                            value={visibleBottonTextClick}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setVisibleBottonTextClick(e.target.value)\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                                \r\n                                    \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent  } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n  const commonClasses = classesRef(theme)\r\n\r\n  const { menu, menuTitle } = commonClasses \r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 80,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 400, \r\n        left: \"calc(50% - 200px)\",\r\n      }},     \r\n      menuTitle: menuTitle\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n    if(type === 'actionLine') newCont = Object.assign({}, ActionLineLayout) \r\n    if(type === 'table') newCont = Object.assign({}, TableLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                          <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Действия для страницы  <OpenWithIcon/>\r\n                            </Typography> \r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                  Add new container\r\n                              </Button> \r\n                            </Box> \r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                  Add Main Banner\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                  Add Accordion\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                  Add Contacts with Map\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                  Add About\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                  Add Colored Action Line \r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                  Add Table \r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop' \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n\r\n    if(colorButton === 'primary') {\r\n        colorGradient1 = theme.palette.primary.main\r\n        colorGradient2 = theme.palette.primary.dark\r\n    }\r\n    if(colorButton === 'secondary') {\r\n        colorGradient1 = theme.palette.secondary.main\r\n        colorGradient2 = theme.palette.secondary.dark\r\n    }\r\n    if(colorButton !== 'primary' && colorButton !== 'secondary' ) {\r\n      if(modalSettings.colorButton) {\r\n        colorGradient1 = modalSettings.colorButton\r\n        colorGradient2 = darken(modalSettings.colorButton, 0.4)\r\n      } \r\n    } \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst  AlertComponent = (props) => {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n        if(props.severity === 'warning') return \"Warning!\"\r\n    }\r\n      \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}