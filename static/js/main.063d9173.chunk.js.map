{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/library/actionLine/DumbComponent.js","components/Login.js","components/Error.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","imageList","name","url","quantity","nameList","fetchListFromStorage","fetchListFromFirestore","listRef","ref","imagesArray","listAll","res","items","forEach","itemRef","push","fullPath","imageData","storageRef","put","on","snapshot","message","getDownloadURL","answerUrl","child","removeImage","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","theme","listPages","marginTop","paddingLeft","listStyle","marginBottom","titlePages","fontSize","fontWeight","borderBottom","menu","palette","background","paper","padding","paddingBottom","maxWidth","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","cursor","btnSetting","orange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","dumbWrapper","opacity","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","Tooltip","title","placement","Button","onClick","size","variant","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","save","contrastColor","getContrastText","primary","boxColor","flexGrow","marginRight","border","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","prevOpen","onChangeComplete","newColor","hex","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","colorSelect","setColorSelect","colorCustom","setColorCustom","amber","uploadHandler","htmlFor","event","files","src","alt","Divider","margin","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","labelId","MenuItem","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","default","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","main","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","secondary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","deepOrange","colorPreview","colorItem","flexWrap","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","easeIn","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","buttonModal","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","DumbComponent","modalBtnColor1","modalBtnColor2","widthMobile","headerHeight","setHeaderHeight","backgroundHeader","modalBtnColor","darken","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","divider","handleOnceCheck","isCheck","handleRemove","Checkbox","request","Card","CardContent","keys","String","CardActions","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","ml","newData","AdminHeader","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","fill","footer","footerHeading","colorMain","sm","md","headingSize","containerColored","fade","containerFlexed","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","err","autoComplete","autoFocus","Alert","severity","Error","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","setChildren","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","inputNumber","inputGroup","tooltip","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","toggleDrawer","addHeading","a","newChildren","newItem","reSaveContainer","pt","pb","mr","aria-haspopup","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","dumbItemContainer","outline","outlineColor","mtView","mbView","ptView","pbView","dumbItem","dumbItemDelete","showInput","focus","sentData","reSaveChildren","prop","removeItem","imageStyle","imageAccordion","imagePreview","multiline","rowsMax","imageClassName","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","classForResp","containerWrapper","btnDrawerStyle","btnDrawerItem","slicedChild","key","confirm","isFirst","swapContainer","isLast","removeContainer","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","input","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","xlinkHref","phone","place","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","handleImageUpload","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","setItems","handleUpdateItem","newItems","swapItem","splice","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","textButton","targetButton","setIsButton","setTextButton","setTargetButton","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","setData","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","m","orderFirst","orderLast","RouterComponent","useTheme","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.063d9173.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n      \r\n    } \r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    state = { \r\n        imageList: [ \r\n            {\r\n                name: 'name' , \r\n                url: 'url', \r\n                quantity: 2, \r\n\r\n            }\r\n        ],\r\n        nameList: []\r\n    } \r\n\r\n    async componentDidMount() { \r\n          this.fetchListFromStorage()\r\n          this.fetchListFromFirestore()\r\n    }\r\n\r\n    async fetchListFromStorage() {\r\n        const listRef = firebase.storage.ref(); \r\n        \r\n        let imagesArray = []\r\n\r\n        await listRef.listAll().then(function(res) {\r\n            res.items.forEach(function(itemRef) { \r\n                imagesArray.push(itemRef.fullPath) \r\n            });\r\n          }).catch(function(error) {\r\n              console.log(error) \r\n          });\r\n          this.setState({\r\n            imageList: imagesArray\r\n          }) \r\n    }\r\n\r\n    async fetchListFromFirestore() {\r\n        const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n        const doc = await listRef.get();\r\n      \r\n        if (!doc.exists) {\r\n            console.log('No such page!');  \r\n\r\n        } else { \r\n            this.setState({\r\n                nameList: doc.data().list\r\n            }) \r\n        }\r\n    }\r\n    async uploadImage(imageData) {\r\n        let answerUrl\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log(\"image uploaded\")\r\n            // console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => { \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                answerUrl = url \r\n              })\r\n          }\r\n        )\r\n        return answerUrl\r\n    }\r\n\r\n    removeImage(name) { \r\n        const storageRef = firebase.storage.ref();\r\n \r\n        const imageRef = storageRef.child(name)\r\n     \r\n        imageRef.delete().then(function() {\r\n            console.log('File deleted successfully')\r\n        }).catch(function(error) {\r\n            console.log(error) \r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    imageList: this.state.imageList, \r\n                    nameList: this.state.nameList ,\r\n                    // updateImageNameList: (name) => {\r\n                    //     let newList = this.state.nameList.slice()\r\n                    //     let isUnic = true\r\n                    //     newList.map((item) => {\r\n                    //         if( item === name ) isUnic = false\r\n                    //     })\r\n                    //     if(isUnic) newList.push(name)\r\n\r\n                    //     this.setState({\r\n                    //         nameList: newList\r\n                    //     }) \r\n                    //     firebase.db.collection(\"site1category\").doc('imageList').update({\r\n                    //         list: newList\r\n                    //     })\r\n                    // },\r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n// import DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n\r\n    const togglePicker = () => setIsOpen(prevOpen => !prevOpen);\r\n    const handleChange = (newColor) => setColor(newColor.hex);\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles( theme => {\r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: {\r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 100, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    initialColor === color ? \r\n                    <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(modal.color !== 'primary' && modal.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        }, \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n         \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Редактировать логотип/модальное окно   <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'right'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n \r\n    React.useEffect(() => {\r\n        if( settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: { \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },  \r\n        settingsItem: {\r\n            width: '100%',\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1, \r\n        },\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Изменить настройки  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 450px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 900,  \r\n            width: 900,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n         \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        }, \r\n        colorPreview: { \r\n            width: '100%',\r\n            height: 8,  \r\n            borderRadius: 3, \r\n        }, \r\n        colorItem: {\r\n            display: \"flex\",\r\n            flexDirection: 'column', \r\n            justifyContent: 'space-between', \r\n            maxWidth: '25%',\r\n\r\n            flexGrow: 1, \r\n            marginRight: theme.spacing(1)\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Отредактировать тему  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle, buttonModal  } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box  my={4} width={'100%'} clone={true}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nfunction DumbComponent() {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings} = React.useContext(CategoryContext)    \r\n  \r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n\r\n\r\n    let modalBtnColor = modal.color\r\n    let modalBtnColor1 \r\n    let modalBtnColor2 \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        if(modalBtnColor === 'primary') {\r\n            modalBtnColor1 = theme.palette.primary.main\r\n            modalBtnColor2 = theme.palette.primary.dark\r\n        }\r\n        if(modalBtnColor === 'secondary') {\r\n            modalBtnColor1 = theme.palette.secondary.main\r\n            modalBtnColor2 = theme.palette.secondary.dark\r\n        }\r\n        if(modalBtnColor !== 'primary' && modalBtnColor !== 'secondary' ) {\r\n            modalBtnColor1 = modal.color\r\n            modalBtnColor2 = darken(modal.color, 0.4) \r\n        } \r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        }\r\n        \r\n        if( backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.3) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n\r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: colorHeader ,\r\n                // color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal } = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            setHeaderHeight(headHeight)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal}\r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 400px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 800,  \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex',  \r\n                fontSize: 10\r\n            }\r\n        },\r\n        \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        cardRoot: {\r\n            display: 'inline-block', \r\n            width: 'calc( 50% - 20px)',\r\n            marginBottom: 20,\r\n            marginRight: 20\r\n        },\r\n        checkbox: {\r\n            display: 'flex',\r\n            alignItems: 'center' ,\r\n            marginBottom: theme.spacing(2),\r\n            marginLeft:  theme.spacing(1), \r\n            borderBottom: `1px solid ${theme.palette.divider}`\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,  \r\n    FormControl, \r\n    Select,\r\n    MenuItem, \r\n    InputLabel\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 300px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 600,  \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[700], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex',  \r\n                fontSize: 10\r\n            }\r\n        },\r\n        \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                    <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"color-select-label\"\r\n                                        id=\"color-select\"\r\n                                        value={colorSelect}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                    >\r\n                                        <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                        <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Box ml={1} >\r\n                                    {\r\n                                        colorSelect === 'custom' &&\r\n                                        <ColorPicker\r\n                                            initialColor = {colorCustom}\r\n                                            changeColor = {setColorCustom}\r\n                                            setIsDisableBtn = {setIsDisableBtn}\r\n                                            position = {'right'}\r\n                                        /> \r\n                                    }\r\n                                    \r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core'\r\n// import { lighten } from '@material-ui/core/styles';\r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext)\r\n\r\n    const justify = 'space-between'\r\n    const heading = \"text heading space-between Sale 30% primary\"\r\n    const headingSize = 40\r\n    const isButton = true\r\n    const textButton = \"buy now\"\r\n    const targetButton = 'Sale 30%'  \r\n    let colorButton = 'primary'\r\n    let colorMain = '#0aa24c'\r\n    // const heading = props.data.heading \r\n    // const isButton = props.data.isButton\r\n    // const textButton = props.data.textButton\r\n    // const targetButton = props.data.targetButton  \r\n    // let colorButton = props.data.colorButton || '#f00'\r\n    // let colorMain = props.data.colorButton || '#f00'\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: darken(colorMain, 0.5),\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: fade(colorMain, 0.35), \r\n                padding: theme.spacing(3, 0), \r\n                margin: theme.spacing(6, 0),\r\n                borderTop: `1px solid ${colorMain}`,\r\n                borderBottom: `1px solid ${colorMain}`,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: justify,\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.containerColored}> \r\n            <Container maxWidth=\"lg\" > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport Dumb from '../components/library/actionLine/DumbComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>\r\n        <Dumb/>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n\r\n            \r\n  \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton\r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({  \r\n         \r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\", \r\n            maxWidth: '50%'\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 20, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        }\r\n    })\r\n    )\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n\r\n        props.toggleDrawer()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.toggleDrawer()\r\n    } \r\n     \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} > \r\n                 \r\n                {/*  DrawerContainer */}\r\n                    <Drawer anchor={'left'} open={props.open} onClose={props.toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                               \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-paper-label\"\r\n                                            id=\"inner-paper-style\"\r\n                                            value={settingIsPaper}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                            \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Background  -  { backgroundColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={backgroundColor} \r\n                                                changeColor={setBackgroundColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Color  -  { color }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={color} \r\n                                                changeColor={setColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'right'}\r\n                                            /> \r\n                                        </Box>\r\n                                          \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <Box className={classes.inputNumber} >\r\n                                                <Typography  component={'p'} gutterBottom  >\r\n                                                    Border Color  -  { borderColor }\r\n                                                </Typography> \r\n                                                <ColorPicker \r\n                                                    initialColor={borderColor} \r\n                                                    changeColor={setBorderColor} \r\n                                                    setIsDisableBtn={setIsDisableBtn}\r\n                                                    position={'right'}\r\n                                                /> \r\n                                            </Box> \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6, \r\n                marginTop: props.className.marginTop*0.5,\r\n                marginBottom: props.className.marginBottom*0.5\r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            position: \"relative\", \r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            \"& $inputNumber\": { \r\n                maxWidth: \"100%\" \r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                },  \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50,  \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                },  \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                },  \r\n            }, \r\n        }, \r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName,\r\n    // }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n\r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.45,\r\n                marginBottom: props.classes.marginBottom*0.45\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle' : { \r\n                    opacity: 1\r\n                }, \r\n                 \r\n            },    \r\n        },\r\n        btnDrawerStyle : {\r\n            // backgroundColor: theme.palette.error.dark, \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${props.data.classes.marginTop}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${props.data.classes.marginTop}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${props.data.classes.marginBottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${props.data.classes.marginBottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${props.data.classes.paddingTop}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${props.data.classes.paddingBottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    }))\r\n\r\n    const classes = useStyles();\r\n\r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = props.data.children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = props.data.children.filter((item) => (item.id !== id))  \r\n            // setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={toggleDrawer} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        toggleDrawer={toggleDrawer}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                '&:hover' : {\r\n                    background: 'none', \r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } \r\n        } )\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                <svg style={{fill: '#fff'}}>       \r\n                                    <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                </svg>\r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                  \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e, imageType) => { \r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => {  \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                  if(imageType === 'icon') setIconUrl(url)\r\n\r\n                  if(imageType === 'mainImage') setImageUrl(url) \r\n              })\r\n          }\r\n        ) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки банера <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button> \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <img src={iconUrl} alt='icon' width={35} />\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Форма\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                /> \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'> \r\n                                            <Button color='primary' variant='contained'> \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'} />\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className=\"mac-accordion heading\">\r\n            <Container maxWidth={'lg'} className={classes.disableMobileGutters}>\r\n\r\n                <h3> { heading } </h3> \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"mac-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"mac-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport Draggable from 'react-draggable';  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        \r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки аккордиона  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                />   \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box } from '@material-ui/core'\r\n\r\nimport '../../../assets/contactMap.scss' \r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n    \r\n\r\n    let colorMapOnload \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${theme.palette.primary.main}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: theme.palette.secondary.light\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: theme.palette.primary.main ,\r\n                border: `2px solid ${theme.palette.primary.main}`, \r\n                color: '#fff',\r\n                '&:hover' : {\r\n                    background: 'none',\r\n                    '&>span': { \r\n                        color: theme.palette.primary.main\r\n                    }\r\n                }\r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${theme.palette.primary.main} !important`,\r\n                }\r\n            },\r\n            boxForFlex: {\r\n                [`@media (min-width: 960px)`]: {\r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"ln-contact\"> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={'ln-contact_item'} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ln-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                 \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = mapFrame === '' ? null : mapFrame \r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки контактов  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} mb={2}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Map Frame\" \r\n                                            variant=\"outlined\"  \r\n                                            value={mapFrame}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    { \r\n                                        !mapFrame && \r\n                                        <Typography color='secondary'>\r\n                                            If <b>Map Frame</b> is null layout have another view!\r\n                                        </Typography>\r\n                                    } \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const imageUrl = props.data.image\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    let colorButton = props.data.colorButton || '#f00'\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth=\"lg\" >\r\n                <div className=\"electro-about heading\">\r\n                    <Grid container> \r\n                        <Grid item md={6} >\r\n                            <div className=\"electro-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"electro-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorButton]) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                 \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            }\r\n        },\r\n        menu: {\r\n            position: \"absolute\",\r\n            left: 50,\r\n            top: 50,\r\n            backgroundColor: theme.palette.background.paper,\r\n            padding: 10,\r\n            paddingBottom: 0,\r\n            maxWidth: '100% ',\r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)',\r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            fontSize: 14,\r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10,\r\n            cursor: 'move'\r\n        },\r\n        btnSave: {\r\n            position: 'sticky',\r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            height: 80,\r\n            backgroundColor: theme.palette.background.paper,\r\n\r\n            '&>button': {\r\n                marginTop: 20,\r\n                marginBottom: 30,\r\n                opacity: 1,\r\n                paddingLeft: 40,\r\n                paddingRight: 40\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async(e) => {\r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase\r\n            .storage\r\n            .ref(`${imageData.name}`)\r\n            .put(imageData)\r\n        storageRef.on('state-changed', snapshot => {\r\n            console.log(snapshot)\r\n        }, error => {\r\n            console.log(error.message)\r\n        }, () => {\r\n            storageRef\r\n                .snapshot\r\n                .ref\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    setImageUrl(url)\r\n                })\r\n        })\r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Настройки банера\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <ColorPicker\r\n                                                                    initialColor = {colorCustom}\r\n                                                                    changeColor = {setColorCustom}\r\n                                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                                    position = {'right'}\r\n                                                                />  \r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained'>\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'}/>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent  } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({ \r\n    btnContainer: {\r\n      position: 'relative',\r\n      '&:hover $btnSetting' : {\r\n        opacity: 1\r\n      }\r\n    },\r\n    btnSetting: { \r\n        position: 'absolute', \r\n        zIndex: 1031, \r\n        top: 0, \r\n        left: 80,\r\n        backgroundColor: theme.palette.error.dark,   \r\n        minWidth: 30, \r\n        maxWidth: 40, \r\n        minHeight: 38, \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n        '&:hover': { \r\n          backgroundColor: theme.palette.secondary.dark,   \r\n        }, \r\n        '&>span': {\r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            fontSize: 10\r\n        }\r\n    } , \r\n    menu: {    \r\n      position: \"absolute\", \r\n      left: \"calc(50% - 200px)\",\r\n      top: 50, \r\n      backgroundColor: theme.palette.background.paper, \r\n      padding: 10 , \r\n      paddingBottom: 0, \r\n      maxWidth: 400,  \r\n      width: 400,\r\n      maxHeight: 'calc(100vh - 100px)', \r\n      minHeight: 500,\r\n      overflowY: 'scroll',  \r\n    },\r\n    menuTitle: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between', \r\n        fontSize: 14, \r\n        borderBottom: '1px solid #eaeaea',\r\n        paddingBottom: 6,\r\n        marginBottom: 10, \r\n        cursor: 'move'\r\n    },\r\n\r\n  }))\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n  \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n      \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                          <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Действия для страницы  <OpenWithIcon/>\r\n                            </Typography> \r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                  Add new container\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                  Add Main Banner\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                  Add Accordion\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                  Add Contacts with Map\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                  Add About\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop'\r\nimport { Styles  } from '../styles/styles'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n\r\n// import Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    const theme = useTheme();\r\n\r\n    const cls = Styles(theme)\r\n\r\n    // console.log(cls(theme))\r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {/* <Styles/> */}\r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => {\r\n                                const breadcrumbs = [\r\n                                    {\r\n                                        title: category.title,\r\n                                        slug: category.slug\r\n                                    } \r\n                                ]\r\n                                return (\r\n                                    <Route \r\n                                        key={category.id}\r\n                                        exact\r\n                                        path={`/${category.slug}`}\r\n                                        render={\r\n                                            (props) => {\r\n                                                if(category.slug === '/') { \r\n                                                    return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                }\r\n                                                //if === concacts => return contacts .... \r\n                                                return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        }\r\n                                    />  \r\n                                ) \r\n                            })\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        }, \r\n                                        {\r\n                                            title: page.title,\r\n                                            slug: `${category.slug}/${page.slug}`\r\n                                        }\r\n                                    ]\r\n                                    return(\r\n                                        <Route \r\n                                            key={page.id}\r\n                                            exact\r\n                                            path={`/${category.slug}/${page.slug}`}\r\n                                            render = {\r\n                                                (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        />\r\n                                        )\r\n                                })\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n\r\n    if(colorButton === 'primary') {\r\n        colorGradient1 = theme.palette.primary.main\r\n        colorGradient2 = theme.palette.primary.dark\r\n    }\r\n    if(colorButton === 'secondary') {\r\n        colorGradient1 = theme.palette.secondary.main\r\n        colorGradient2 = theme.palette.secondary.dark\r\n    }\r\n    if(colorButton !== 'primary' && colorButton !== 'secondary' ) {\r\n      if(modalSettings.colorButton) {\r\n        colorGradient1 = modalSettings.colorButton\r\n        colorGradient2 = darken(modalSettings.colorButton, 0.4)\r\n      } \r\n    } \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nfunction AlertComponent(props) {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n    }\r\n    const severityText = () => { \r\n        return props.severity\r\n    }\r\n\r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}