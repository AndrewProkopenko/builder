{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/themeContext/ThemeContext.js","context/themeContext/ThemeProvider.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/header/headerHelpers/LogoChanger.js","components/header/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/header/AdminHeader.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/Home.js","components/Login.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/placeholders/SkeletonPage.js","components/pages/SinglePage.js","Router/RouterComponent.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","console","log","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","setState","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","categoryRef","collection","doc","get","exists","data","list","update","slug","delete","array","map","item","deletePage","updateLogo","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","a","layoutsRef","ThemeContext","ThemeProvider","themeMode","storageMode","localStorage","getItem","setThemeMode","setItem","LoadingProgress","classes","makeStyles","root","position","zIndex","top","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","open","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","handleClose","theme","listPages","marginTop","paddingLeft","listStyle","marginBottom","titlePages","fontSize","fontWeight","borderBottom","menu","palette","background","paper","padding","paddingBottom","maxWidth","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","cursor","btnSetting","orange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","dumbWrapper","opacity","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","slice","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","Tooltip","title","placement","Button","onClick","size","variant","color","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newList","newCategory","Object","assign","uuid","push","FormGroup","Box","mb","TextField","required","label","onChange","target","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","LogoChanger","setMainText","setSubText","setImage","amber","uploadHandler","imageData","storageRef","ref","name","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","widthMobile","header","primary","main","logoMain","textAlign","whiteSpace","lineHeight","logoSub","margin","logoImage","marginRight","menuButton","marginLeft","toolbar","drawerContainer","mobileLink","textDecoration","accordionReset","boxShadow","DumbComponent","useEffect","setResponsiveness","window","innerWidth","prevState","mobileView","removeEventListener","addEventListener","drawerOpen","femmecubatorLogo","to","AppBar","Container","disableGutters","fixed","handleDrawerClose","Toolbar","Drawer","anchor","mx","my","content","MenuItem","exact","borderTop","edge","displayMobile","clone","innerItem","innerIndex","StyledComponent","headerContainer","hiddenButtonGroup","transform","btnSettings","dark","secondary","ml","ElementCreator","Fragment","Header","AdminHeader","isOpen","setIsOpen","px","py","providerData","FormControlLabel","control","Switch","checked","logout","md","viewBox","d","placeholder","Home","document","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","res","err","autoComplete","autoFocus","Alert","severity","Error","myClassName","classeForResp","isResponsiveFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setPadding","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","setLineHeight","responseFont","setIsResponsiveFont","text","textInDumb","setTextInDumb","inputNumber","flexGrow","inputGroup","border","divider","tooltip","dumbItemContainer","outline","easeIn","shadows","outlineColor","light","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","Number","handleMargin","newMargin","focus","triangle","colors","onChangeComplete","newColor","hex","FormControl","InputLabel","Select","labelId","sentData","reSaveChildren","aria-haspopup","prop","removeItem","imageStyle","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","borderRadius","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","row","imageClassName","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","pt","pb","settings","innerContainer","ContainerElement","libraryHeading","heading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setFlexDirection","shadow","setShadow","setChildren","settingGutter","setSettingGutter","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","settingInnerContainer","setSettingInnerContainer","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","containerWrapper","mtView","shortest","mbView","settingsItem","toggleDrawer","handleHeadingMenuClose","addHeading","newChildren","newItem","reSaveContainer","slicedChild","forEach","key","confirm","swapContainer","removeContainer","mr","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","SkeletonPage","Skeleton","animation","SinglePage","location","useLocation","useTheme","pageSlug","slugForUpdate","ContainerLayout","setData","items","setItems","isUpdate","setIsUpdate","isHideSettings","setIsHideSettings","settingsContainer","flexWrap","action","active","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","newData","keys","elem","addContainer","newItems","newCont","m","pl","CircularProgress","thickness","RouterComponent","basename","path","render","ThemeComponent","createMuiTheme","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.253d1d83.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth()\r\n        console.log(\"constructor\")\r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) { \r\n                console.log(user)\r\n                this.setState({\r\n                    isLogin: true,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo\r\n            })\r\n        } \r\n    }\r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    updateLogo: (data) => { \r\n                        this.setState({\r\n                            logo: data\r\n                        })\r\n                        this.updateLogo(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( async (user) => {\r\n            if(user) {  \r\n                const layoutsRef = firebase.db.collection(\"library\").doc('layouts')\r\n                const doc = await layoutsRef.get();\r\n                \r\n                if (!doc.exists) {\r\n                    console.log('No such document!'); \r\n                } \r\n                else {\r\n                    console.log('Layouts:', doc.data());\r\n                    \r\n                    this.setState({\r\n                        layouts: doc.data()\r\n                    })\r\n                }\r\n            }\r\n            else { \r\n                console.log('no user') \r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{\r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext()\r\n\r\nexport default ThemeContext","import React from 'react';\r\n \r\nimport ThemeContext from './ThemeContext'\r\n\r\n \r\n\r\nexport default class ThemeProvider extends React.Component { \r\n\r\n    state = { \r\n        themeMode: 'light'\r\n    } \r\n\r\n    componentDidMount() {\r\n        const storageMode =  localStorage.getItem('siteBuilderThemeMode')\r\n        console.log(storageMode)\r\n        if(storageMode == 'dark') {\r\n            this.setState({\r\n                themeMode: 'dark'\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                themeMode: 'light'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ThemeContext.Provider\r\n                value={{\r\n                    themeMode: this.state.themeMode,\r\n                    setThemeMode: () => {\r\n                        localStorage.setItem('siteBuilderThemeMode', this.state.themeMode === 'light' ? \"dark\" : \"light\" )\r\n                        this.setState({\r\n                            themeMode: this.state.themeMode === 'light' ? \"dark\" : \"light\"\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1000, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n// import DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        localCategories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        <Tooltip title='Get Up' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('up', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                            >  \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                            </Button>\r\n                                                        </Tooltip> \r\n                                                        <Tooltip title='Get Down' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('down', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                        >  \r\n                                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                        </Button>\r\n                                                                                    </Tooltip> \r\n                                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                        >     \r\n                                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // right: 2,\r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        updateLogo(newLogo)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать логотип  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='outlined'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n                                    <img\r\n                                        width={100}\r\n                                        src={logo.image}\r\n                                        alt='logo'\r\n                                    /> \r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","import React, {useState, useEffect} from 'react'\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../../assets/header.scss\"\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    makeStyles,\r\n    Button,\r\n    IconButton,\r\n    Drawer, \r\n    MenuItem,\r\n    Container, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst widthMobile = 992\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n      position: 'static' ,\r\n      backgroundColor: theme.palette.primary.main, \r\n      [`@media (max-width: ${widthMobile}px)`]: {\r\n          // paddingLeft: 0,\r\n      }, \r\n    },\r\n    logoMain: { \r\n        fontWeight: 600,\r\n        fontSize: 24,\r\n        color: \"#FFFEFE\",\r\n        textAlign: \"left\",\r\n        whiteSpace: 'nowrap',\r\n        [`@media (max-width: ${widthMobile}px)`]: {\r\n            fontSize: 18,\r\n            lineHeight: 1.2\r\n        },\r\n    },\r\n    logoSub: { \r\n        fontWeight: 400,\r\n        fontSize: 12,\r\n        margin: 0,\r\n        color: \"##DFDFDF\",\r\n        textAlign: \"left\",\r\n        whiteSpace: 'nowrap'\r\n        \r\n    },\r\n    logoImage: { \r\n        width: 80, \r\n        height: 60, \r\n        marginRight: 4, \r\n        '&>img': { \r\n            width: '100%',\r\n            height: '100%'\r\n        },\r\n        [`@media (max-width: ${widthMobile}px)`]: {\r\n            width: 60, \r\n            height: 50, \r\n        },\r\n    },\r\n    menuButton: { \r\n      position: 'relative', \r\n      fontWeight: 700,\r\n      size: \"18px\",\r\n      marginLeft: \"38px\",\r\n      '&>.active': {\r\n          paddingBottom: 3,\r\n          borderBottom: '2px solid #ffffff52'\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    drawerContainer: { \r\n        width: '50vw', \r\n        maxWidth: 450, \r\n        minWidth: 260\r\n    }, \r\n    mobileLink: { \r\n        display: 'flex',\r\n        alignItems: 'center', \r\n        color: 'inherit', \r\n        textDecoration: 'none', \r\n        height: '100%', \r\n        minHeight: 48,\r\n        width: '100%', \r\n        padding: '6px 16px', \r\n        '&.active' : {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: '#fff'\r\n        }\r\n    },  \r\n    accordionReset: {\r\n        paddingLeft: 0,\r\n        marginTop: ' 0 !important', \r\n        marginBottom: '0 !important',\r\n        minHeight: 'auto !important', \r\n        background : 'none', \r\n        boxShadow: 'none'\r\n    }\r\n}));\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    useEffect(() => { \r\n       \r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < widthMobile\r\n            ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n            : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n    }, []);\r\n\r\n    const { toolbar, header, logoImage ,logoMain , logoSub, menuButton, drawerContainer, mobileLink , accordionReset} = useStyles();\r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false,\r\n    }); \r\n    \r\n    const {categories, logo} = React.useContext(CategoryContext)    \r\n    \r\n    const { mobileView, drawerOpen } = state;\r\n\r\n    const femmecubatorLogo = (\r\n        <NavLink to={'/'} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n          <Toolbar className={toolbar}>\r\n            {femmecubatorLogo}\r\n    \r\n            <Box display='flex' clone={true}>\r\n                <ul >\r\n                {\r\n                    categories.map( (item, index) => { \r\n                    return (\r\n                        <li key={index} className={menuButton}>\r\n                            {\r\n                                item.slug === '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                                \r\n                            }\r\n                           {\r\n                                item.slug !== '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                           }\r\n                            <ul >\r\n                            {\r\n                                item.pages.map( (innerItem, innerIndex) => (\r\n                                <li key={innerIndex}>\r\n                                    <NavLink exact to={`/${item.slug}/${innerItem.slug}`} >\r\n                                        {innerItem.title}\r\n                                    </NavLink>\r\n                                </li>\r\n                                ))\r\n                            }\r\n                            </ul>\r\n                        </li>\r\n                    );\r\n                    })\r\n                }\r\n                </ul>\r\n            </Box>\r\n          </Toolbar>\r\n        );\r\n    };\r\n    \r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () => setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () => setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n        return (\r\n            <Toolbar style={{justifyContent: 'space-between'}}> \r\n                <Drawer\r\n                    {...{\r\n                    anchor: \"right\",\r\n                    open: drawerOpen,\r\n                    onClose: handleDrawerClose,\r\n                    }}\r\n                >\r\n                    <div className={drawerContainer}>\r\n                        <Box mx={2} my={1}  >\r\n                            <Button \r\n                                variant='outlined'\r\n                                color='default'\r\n                                onClick={handleDrawerClose}\r\n                            >\r\n                                <ArrowRightAltIcon/>\r\n                            </Button>\r\n                        </Box>\r\n                        \r\n                        {\r\n                            categories.map( (item, index) => {  \r\n                                if(item.pages.length > 0) {\r\n                                    return (  \r\n                                        <Accordion classes={{root: accordionReset}} key={index} >\r\n                                            <AccordionSummary\r\n                                                classes={{root: accordionReset, content: accordionReset  }}\r\n                                                expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                            >\r\n                                                <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >\r\n                                                        {item.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem>     \r\n                                            </AccordionSummary>\r\n                                            { \r\n                                                item.pages.map( page => (\r\n                                                    <MenuItem style={{padding: '0 0 0 15px'}} key={index} > \r\n                                                        <NavLink \r\n                                                            exact\r\n                                                            to={`/${item.slug}/${page.slug}`}  \r\n                                                            className={mobileLink}\r\n                                                            onClick={handleDrawerClose}\r\n                                                        >   \r\n                                                            {page.title}\r\n                                                            \r\n                                                        </NavLink> \r\n                                                    </MenuItem> \r\n                                                ))\r\n                                            }\r\n                                        </Accordion>                                \r\n                                    );\r\n                                }\r\n                                else { \r\n                                    return (\r\n                                        <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                            <NavLink \r\n                                                exact\r\n                                                to={`/${item.slug}`}  \r\n                                                className={mobileLink}\r\n                                                onClick={handleDrawerClose}\r\n                                            >\r\n                                                {item.title} \r\n                                            </NavLink> \r\n                                        </MenuItem>     \r\n                                    )\r\n                                }\r\n                                \r\n                            })\r\n                        }\r\n                    </div>\r\n                </Drawer>\r\n\r\n                <div>{femmecubatorLogo}</div>\r\n                <IconButton\r\n                    {...{\r\n                    edge: \"start\",\r\n                    color: \"inherit\",\r\n                    \"aria-label\": \"menu\",\r\n                    \"aria-haspopup\": \"true\",\r\n                    onClick: handleDrawerOpen,\r\n                    }}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <AppBar className={header}>\r\n            <Container\r\n                disableGutters={true}\r\n                fixed={false} \r\n                maxWidth={'lg'} \r\n                className='link-in-header' \r\n            > \r\n                {mobileView ? displayMobile() : displayDesktop()}\r\n            </Container>\r\n        </AppBar> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\n\r\nimport DumbComponent from './DumbComponent'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            transform: open ? 'scaleY(1)' : 'scaleY(0)',\r\n            height: open ? 'auto' : 0, \r\n            // transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms height`, \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 100, \r\n            left: 5, \r\n            bottom: open ? 10 : 'calc( 50% - 20px )', \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.headerContainer} >   \r\n            <Button \r\n                className={classes.btnSettings}\r\n                onClick={() => { setOpen(!open) }}\r\n            >\r\n                settings\r\n                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n            </Button>\r\n            <div className={classes.hiddenButtonGroup}>\r\n                <Box ml={2} my={1} display='inline-block'>\r\n                    <CategoriesChanger/> \r\n                </Box>\r\n                <Box ml={2} my={1} display='inline-block'>\r\n                    <LogoChanger/>\r\n                </Box>\r\n            </div>\r\n            \r\n            <DumbComponent logo={'logo'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, Switch, FormControlLabel } from '@material-ui/core'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport ThemeContext from '../../context/themeContext/ThemeContext'  \r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)\r\n\r\n    const {themeMode, setThemeMode} = React.useContext(ThemeContext) \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box px={3} py={1}  position=\"relative\" minHeight={54}>\r\n                <Box style={{\r\n                    position: 'absolute', \r\n                    top: 0,\r\n                    left: 0,\r\n                    display:\"flex\",\r\n                    alignItems: 'center', \r\n                    width: 22,\r\n                    height: '100%',\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.33)'\r\n                }}\r\n                    onClick={() => { setIsOpen(!isOpen)}}\r\n                >\r\n                    {\r\n                        isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                    }\r\n                </Box>\r\n                { isOpen && <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n                    <Typography component='span' >\r\n                        hello, { user.providerData[0].email } \r\n                    </Typography>\r\n                    <span>\r\n                        (theme setting , css for body, ....)\r\n                    </span>\r\n                    \r\n                    \r\n                    <Box>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch \r\n                                    color=\"primary\" \r\n                                    checked={themeMode === 'dark' ?  true : false}  \r\n                                    onChange={() => { setThemeMode()}}  \r\n                                /> \r\n                            }\r\n                            label=\"Dark Mode\"\r\n                        /> \r\n                        <Button \r\n                            size='small'\r\n                            color='secondary' \r\n                            variant={'contained'} \r\n                            onClick={handleSignOut}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </Box>\r\n                </Box>}\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent() {\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                Ремонт Macbook <br className=\"d-lg-none\" />\r\n                                в Санкт-Петербурге \r\n                            </h1>\r\n                            <h5>\r\n                                <svg viewBox=\"0 0 511.987 511.987\" > \r\n                                    <g><path d=\"m207.993 123.993c-13.233 0-24-10.767-24-24s10.767-24 24-24 24 10.767 24 24-10.766 24-24 24z\"/><path d=\"m511.477 439.169-39-259.997c-3.4-22.702-22.532-39.18-45.493-39.18h-148.555c13.072-24.73 12.843-53.822-.828-78.611-13.822-25.065-38.887-40.523-67.054-41.352-1.686-.049-3.418-.049-5.115 0-28.161.828-53.226 16.287-67.048 41.352-13.665 24.779-13.899 53.858-.826 78.611h-52.555c-22.961 0-42.093 16.478-45.493 39.176l-39 260.001c-1.987 13.256 1.89 26.684 10.637 36.84 8.748 10.157 21.452 15.982 34.856 15.982h419.98c13.404 0 26.108-5.825 34.856-15.982 8.748-10.154 12.625-23.582 10.638-36.84zm-345.07-362.334c8.423-15.273 22.99-24.319 39.962-24.818.536-.016 1.08-.023 1.625-.023s1.089.008 1.619.023c16.978.499 31.545 9.545 39.968 24.818 8.798 15.954 8.554 34.79-.651 50.392l-40.936 68.92-40.924-68.9c-9.217-15.606-9.465-34.452-.663-50.412zm310.186 378.294c-1.564 1.816-5.023 4.864-10.609 4.864h-289.876c.747-7.5 4.218-18.771 17.343-25.973 7.747-4.251 10.581-13.977 6.33-21.724s-13.979-10.581-21.725-6.33c-16.945 9.298-28.116 23.897-32.305 42.216-.979 4.279-1.452 8.29-1.643 11.811h-98.105c-5.586 0-9.045-3.048-10.609-4.864-1.564-1.817-4.065-5.689-3.237-11.212l39-260.003c1.035-6.907 6.858-11.92 13.847-11.92h71.425l31.046 52.271c4.348 7.343 12.018 11.727 20.519 11.727s16.171-4.384 20.506-11.707l31.059-52.291h167.426c6.988 0 12.812 5.013 13.847 11.923l39 259.999c.826 5.523-1.674 9.396-3.239 11.213z\"/><path d=\"m277.053 220.814c-8.385-2.797-17.444 1.737-20.238 10.119-2.795 8.383 1.736 17.444 10.119 20.238.164.055 16.56 5.917 21.881 21.881 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 8.383-2.794 12.914-11.855 10.119-20.238-10.411-31.23-40.83-41.689-42.12-42.119z\"/><path d=\"m290.621 321.587c-8.334-2.941-17.473 1.43-20.413 9.763-9.03 25.585-39.982 36.575-40.632 36.801-8.349 2.815-12.854 11.855-10.064 20.22 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 1.883-.627 46.287-15.841 60.634-56.49 2.94-8.333-1.431-17.472-9.764-20.413z\"/></g>\r\n                                </svg> \r\n                                <span>\r\n                                    С Бесплатным выездом к вам\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                Ноутбуки Apple устроены сложнее, чем устройства других брендов, поэтому их ремонтом должны заниматься специально обученные люди. Наш штат сотрудникам специализируется на МакБуках разных моделей. Ремонтирует их, заменяет SSD-диски и память, а также проводит чистку с заменой термопасты.\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={(e) => { e.preventDefault() }}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input type=\"tel\" name=\"phone\" required placeholder=\"Ваш телефон\" />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <button type=\"submit\">\r\n                                                Вызвать мастера\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                Нажимая кнопку \"Вызвать мастера\" Вы соглашаетесь на обработку Ваших персональных данных\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{backgroundImage: 'url(https://andrewprokopenko.github.io/mac_repair/assets/img/mb-image.png)'}} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent() {\r\n    return (\r\n        <div>\r\n            <DumbComponent />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from 'react' \r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Button, Container, Typography } from '@material-ui/core'\r\n \r\nimport LoadingContext from '../context/loadingContext/LoadingContext'  \r\n\r\nimport MainBannerCreator from './library/mainBanner/ElementCreator'\r\n\r\n// import firebase from '../firebase/firebase'\r\n// import layout from '../data/library.json'\r\n\r\nfunction Home() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n        document.title = 'Site Builder'\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        // firebase.db.collection(\"library\").doc('layouts').set(layout)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n        <MainBannerCreator/>\r\n\r\n        <Container>\r\n            <Box mt={5}>\r\n                <Typography variant='h3'>\r\n                    Home\r\n                </Typography>\r\n\r\n                <Box mt={3}>\r\n                    <NavLink to='/login'> \r\n                            Login \r\n                    </NavLink> \r\n                </Box>\r\n                \r\n\r\n                <Box mt={3}>\r\n                    <Button onClick={handleClick}>\r\n                        Click\r\n                    </Button>\r\n                </Box>\r\n                \r\n            </Box>\r\n        </Container>\r\n    \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n     \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className \r\n      }));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.isResponsiveFont ? 'resposive-font-size' : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }\r\n            }, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50,  \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline style={{ color: '#fff'}}/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }\r\n            }, \r\n        },\r\n       \r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline style={{ color: '#fff'}}/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n            }, \r\n        }, \r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                imageUrl={imageUrl}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        > \r\n                            <DeleteOutline style={{ color: '#fff'}}/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Container  \r\n                maxWidth={props.settings.maxWidth} \r\n                fixed={props.settings.fixed} \r\n                disableGutters={props.settings.disableGutters} \r\n                className={classes.myClassName}\r\n            > \r\n                {  \r\n                    props.settings.innerContainer && \r\n                    <Container\r\n                        maxWidth={'lg'}\r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                    >\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </Container>\r\n                }\r\n                {  \r\n                    !props.settings.innerContainer && \r\n                    <React.Fragment>\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n                \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select,  Container, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n  \r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n         \r\n        console.log(theme)\r\n        return ( {  \r\n            btnDrawerStyle : {\r\n                position: 'absolute', \r\n                top: 0, \r\n                left: 0, \r\n                zIndex: 10,   \r\n                minWidth: 50, \r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n            }, \r\n            containerWrapper: {\r\n                position: 'relative', \r\n                outline: \"1px solid #ffffff00\", \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle': {\r\n                        opacity: 1\r\n                    }\r\n                },   \r\n               \r\n            },\r\n            mtView: {  \r\n                position: 'absolute', \r\n                top: `-${margin.top}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.top}px`, \r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            mbView: {  \r\n                position: 'absolute', \r\n                bottom: `-${margin.bottom}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.bottom}px`, \r\n                opacity: 0,\r\n                transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            settingsItem: {\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1\r\n            },\r\n            inputNumber: {\r\n                flexGrow: 1, \r\n                margin: 5, \r\n                width: \"100%\", \r\n                maxWidth: '50%'\r\n            }, \r\n            inputGroup: {\r\n                border: \"1px solid #f5f5f5\", \r\n                padding: 3, \r\n                inputNumber: { \r\n                    maxWidth: \"100%\"\r\n    \r\n                }\r\n            },\r\n            btnSave: { \r\n                position: 'sticky', \r\n                zIndex: theme.zIndex.tooltip,\r\n                bottom: 0, \r\n                left: 20, \r\n                right: 0,\r\n                height: 80, \r\n                backgroundColor: theme.palette.background.paper, \r\n                \r\n                '&>button': {\r\n                    marginTop: 20, \r\n                    marginBottom: 30, \r\n                    opacity: 1,  \r\n                    paddingLeft: 40, \r\n                    paddingRight: 40\r\n                }\r\n            }\r\n            \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :  \r\n                console.log('paragraph')\r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :  \r\n                console.log('paragraphImage')\r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        }) \r\n        // console.log(slicedChild)\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) {\r\n            \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n\r\n            console.log(filtered, filtered.length)\r\n            \r\n            \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={propsSettings.fixed} \r\n            disableGutters={true}\r\n            className={classes.containerWrapper} \r\n        >    \r\n            <div className={classes.mtView}></div>\r\n            <div className={classes.mbView}></div>\r\n            <Box style={{position: 'relative'}} > \r\n                {/*  DrawerContainer */}\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                \r\n                            >  \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary' \r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary' \r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                     \r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}> \r\n                                        {/* <Button\r\n                                            // onClick={addContainer}\r\n                                            variant='outlined'\r\n                                            color=\"primary\" \r\n                                            disabled={true}\r\n                                            \r\n                                        >\r\n                                            Add Container\r\n                                        </Button>   */}\r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\" \r\n                                            // disabled={true}\r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph'); toggleDrawer()}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage'); toggleDrawer()}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                             <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n                <DumbComponent\r\n                    reSaveChildren={reSaveChildren}\r\n                    removeItem={removeItem}\r\n                    data={props.data} \r\n                    classes={myClassName}\r\n                    settings={propsSettings}\r\n                />  \r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation='wave'\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='text'  \r\n                  height={50}\r\n                  width='100%'\r\n                  animation='wave'\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react' \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, CircularProgress, Tooltip , Container } from \"@material-ui/core\"; \r\n \r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator' \r\n// import ContainerLayout from '../library/container/containerLayout.json'  \r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n    const location = useLocation()\r\n    const theme = useTheme(); \r\n\r\n    const pageSlug = props.slugForUpdate\r\n\r\n    const { modeDev } = React.useContext(ModeContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const ContainerLayout = layouts.container\r\n  \r\n    const [data, setData] = React.useState({})\r\n    const [items, setItems] = React.useState([])\r\n  \r\n    const [isUpdate, setIsUpdate] = React.useState(true)\r\n\r\n    const [isHideSettings, setIsHideSettings] = React.useState(true)\r\n    //  title\r\n    //  slug\r\n    //  id\r\n    const useStyles = makeStyles((theme) => ({ \r\n      \r\n      btnSetting: {\r\n          opacity: isHideSettings ? '0.1' : '1',\r\n          position: 'absolute', \r\n          zIndex: 10, \r\n          top: 2, \r\n          left: 5,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      } ,\r\n      settingsContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        borderBottom: `${theme.palette.action.active} 1px solid` ,\r\n        opacity: isHideSettings ? '0.1' : '1', \r\n      },\r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      }\r\n  \r\n  }))\r\n  \r\n  const classes = useStyles();\r\n    React.useEffect( () => { \r\n      setIsLoading(true)\r\n      fetchData()\r\n      document.title = props.metaTitle\r\n    }, [location])\r\n  \r\n    const fetchData = async () => {  \r\n       \r\n      const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n      const doc = await pageRef.get();\r\n      \r\n      if (!doc.exists) {\r\n        console.log('No such page!'); \r\n\r\n        // задать шаблон страницы\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.slug = pageSlug\r\n\r\n        await pageRef.set(newPage)\r\n\r\n        setData(newPage)  \r\n        setItems(newPage.items) \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n\r\n      } else { \r\n        setData(doc.data())  \r\n        setItems(doc.data().items)  \r\n        \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }\r\n   \r\n    }  \r\n    \r\n    const reSaveContainer = async (id, childrenContainer) => { \r\n      console.log(childrenContainer.length)\r\n   \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem].children = childrenContainer \r\n        }\r\n        return 0 \r\n      })\r\n   \r\n      setData(newData)\r\n      setItems(newData.items)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }).then( () => {\r\n          if(childrenContainer.length === 0) {\r\n            removeContainer(id)\r\n          }\r\n      })\r\n    } \r\n    const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n      let newData = Object.assign({}, data)\r\n        \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n          newData.items[elem].classes = classes \r\n          newData.items[elem].disableGutters = settings.disableGutters \r\n          newData.items[elem].fixed = settings.fixed \r\n          newData.items[elem].maxWidth = settings.maxWidth \r\n          newData.items[elem].innerContainer = settings.innerContainer \r\n        }\r\n        return 0 \r\n      }) \r\n  \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n   \r\n    const addContainer = async () => {   \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n  \r\n      let newCont = Object.assign({}, ContainerLayout) \r\n      newCont.id = uuid()\r\n   \r\n      newItems.push(newCont) \r\n   \r\n      newData.items = newItems\r\n          \r\n      setData(newData)\r\n      setItems(newItems)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      });  \r\n    }\r\n  \r\n    const removeContainer = async (id) => {  \r\n      let newData = Object.assign({}, data)\r\n      const filtered = items.filter((item) => (item.id !== id))  \r\n  \r\n      newData.items = filtered\r\n          \r\n      setData(newData)\r\n      setItems(filtered) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: filtered\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }); \r\n    }\r\n  \r\n    const swapContainer = async (direction, id) => { \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n      let activeIndex   \r\n   \r\n      newItems.map( (item) => { \r\n        if(item.id === id) {\r\n          activeIndex = newItems.indexOf(item) \r\n        }\r\n        return 0 \r\n      }) \r\n   \r\n      if(direction === 'up' && activeIndex === 0) return  \r\n      if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n      \r\n      if(direction === 'up') { \r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex - 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex - 1 ] = movedItem  \r\n      }\r\n      if(direction === 'down') {\r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex + 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex + 1 ] = movedItem  \r\n      }\r\n  \r\n      newData.items = newItems\r\n         \r\n      setItems(newItems)\r\n      setData(newData)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n   \r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    }\r\n  \r\n    function renderContainers () {   \r\n      if(items.length > 0) {\r\n        return Object.keys(items).map( (key) => { \r\n          return ( \r\n           <ContainerElement \r\n             key={items[key].id} \r\n             data={items[key]} \r\n             reSaveContainer={reSaveContainer}\r\n             reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n             removeContainer={removeContainer}\r\n             swapContainer={swapContainer}\r\n           /> \r\n         ) \r\n       })\r\n      }\r\n      else {\r\n        return ( \r\n          <SkeletonPage/> \r\n        ) \r\n      }\r\n      \r\n    } \r\n\r\n    return (\r\n        <React.Fragment> \r\n\r\n          { \r\n            modeDev &&  \r\n            <Box className={classes.btnContainer}  >\r\n               \r\n              <Tooltip title='Page Settings' placement='bottom'>\r\n                  <Button  \r\n                      onClick={() => { setIsHideSettings(!isHideSettings) }} \r\n                      size='medium'\r\n                      variant='contained'\r\n                      color={'primary'}\r\n                      className={classes.btnSetting}\r\n                  >   \r\n                      <span>Page</span>\r\n                      <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                  </Button>\r\n              </Tooltip>  \r\n              <Container className={classes.settingsContainer} px={3} style={{}}> \r\n                  \r\n                  <Box m={1} pl={'50px'}>\r\n                    <Typography color={theme.palette.action.active} variant=\"h6\" >\r\n                      Page actions\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box display=\"flex\" alignItems='center' mx={1} minWidth={22} >\r\n                    {\r\n                      isUpdate &&\r\n                      <CircularProgress size={22} thickness={5} /> \r\n                    } \r\n                  </Box>\r\n\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'contained'} onClick={addContainer}>\r\n                        Add new container\r\n                    </Button> \r\n                  </Box>\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                        More settings\r\n                    </Button> \r\n                  </Box> \r\n            </Container>\r\n            </Box>\r\n          }\r\n           \r\n          { \r\n            renderContainers()  \r\n          } \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header'\r\nimport AdminHeader from '../components/header/AdminHeader'\r\n\r\nimport Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n  \r\n    return (   \r\n        <Router basename=\"builder\"> \r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                    \r\n                    <AdminHeader/>\r\n                    <Header/>\r\n\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => \r\n                                <Route \r\n                                    key={category.id}\r\n                                    exact\r\n                                    path={`/${category.slug}`}\r\n                                    render={\r\n                                        (props) => {\r\n                                            if(category.slug === '/') { \r\n                                                return <Home/>\r\n                                            }\r\n                                            //if === concacts => return contacts .... \r\n                                            return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} />\r\n                                        }\r\n                                    }\r\n                                />   \r\n                                \r\n                            )\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => \r\n                                    <Route \r\n                                        key={page.id}\r\n                                        exact\r\n                                        path={`/${category.slug}/${page.slug}`}\r\n                                        render = {\r\n                                            (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} />\r\n                                        }\r\n                                    />\r\n                                )\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n// import purple from '@material-ui/core/colors/purple';\r\n// import green from '@material-ui/core/colors/green';\r\n  \r\nimport ThemeContext from '../context/themeContext/ThemeContext'  \r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nfunction ThemeComponent() {  \r\n    const {themeMode} = React.useContext(ThemeContext) \r\n \r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: themeMode,\r\n            primary: {\r\n                main: themeMode === 'dark' ?  '#302B50' : '#311b92',\r\n            },\r\n            secondary: {\r\n                main:  '#f40b00' ,\r\n            },\r\n        },  \r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={theme} >\r\n            \r\n            \r\n            <CssBaseline/>   \r\n\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\" \n\n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ThemeProvider from './context/themeContext/ThemeProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n// import theme from './theme/theme.js'\nimport './assets/style.css'\n\n\n\n\n\n  \nconst App = () => {  \n\n  \n\n  return (\n      <ThemeProvider>\n       \n\n        <ModeProvider> \n          <CategoryProvider>\n            <LoadingProvider>\n              <LibraryProvider>\n                <div className=\"App\">  \n                  <ThemeComponent/> \n                </div>\n              </LibraryProvider> \n            </LoadingProvider> \n          </CategoryProvider> \n        </ModeProvider>\n\n      </ThemeProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}