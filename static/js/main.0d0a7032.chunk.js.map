{"version":3,"sources":["context/modeContext/ModeContext.js","context/modeContext/ModeProvider.js","context/categoryContext/CategoryContext.js","firebase/firebase.js","context/categoryContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","components/placeholders/LoadingProgress.js","components/header/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/Home.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/placeholders/SkeletonPage.js","components/pages/SinglePage.js","Router/RouterComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","ModeProvider","state","modeDev","Provider","value","this","props","children","Component","CategoryContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","db","firestore","console","log","CategoryProvider","categories","categoryRef","collection","doc","get","exists","data","setState","list","update","setCategories","updateCategories","LoadingContext","LoadingProvider","isLoading","setIsLoading","LoadingProgress","classes","makeStyles","root","position","zIndex","top","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","theme","header","palette","primary","main","logo","fontWeight","color","textAlign","menuButton","size","marginLeft","paddingBottom","borderBottom","toolbar","display","justifyContent","drawerContainer","maxWidth","minWidth","mobileLink","alignItems","textDecoration","padding","accordionReset","paddingLeft","marginTop","marginBottom","minHeight","background","boxShadow","DumbComponent","useEffect","setResponsiveness","window","innerWidth","prevState","mobileView","addEventListener","useState","drawerOpen","useContext","femmecubatorLogo","Typography","variant","component","AppBar","Container","disableGutters","fixed","handleDrawerClose","Toolbar","style","Drawer","anchor","open","onClose","Box","mx","my","Button","onClick","map","item","index","pages","length","Accordion","AccordionSummary","content","expandIcon","MenuItem","to","slug","title","page","borderTop","IconButton","edge","displayMobile","clone","exact","innerItem","innerIndex","StyledComponent","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","listPages","listStyle","titlePages","fontSize","menu","maxHeight","overflowY","menuTitle","cursor","btnSetting","opacity","orange","transition","transitions","easing","easeInOut","duration","shorter","dumbWrapper","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleUpdateCategory","place","id","newCategories","slice","handleUpdatePage","categoryId","pageId","swapCategory","direction","activeIndex","indexOf","movedItem","placeItem","swapPage","activeCategory","Tooltip","placement","Modal","aria-labelledby","DialogContent","handle","cancel","mb","newList","newCategory","Object","assign","categoryLayout","uuid","push","disableElevation","filtered","filter","deleteCategory","ButtonGroup","orientation","aria-label","disabled","aria-controls","p","TextField","type","label","fullWidth","onChange","e","target","itemPages","indexPages","category","gutterBottom","mt","newPage","pageLayout","addPage","startIcon","ElementCreator","Fragment","Header","Home","Error","flexDirection","myClassName","classeForResp","isResponsiveFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setPadding","marginRight","margin","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","lineHeight","setLineHeight","responseFont","setIsResponsiveFont","text","textInDumb","setTextInDumb","inputNumber","flexGrow","inputGroup","border","tooltip","dumbItemContainer","outline","easeIn","shadows","outlineColor","error","light","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","Number","handleMargin","newMargin","Grid","container","focus","FormControlLabel","control","Switch","checked","name","InfoOutlined","triangle","colors","onChangeComplete","newColor","hex","FormControl","InputLabel","Select","labelId","sentData","reSaveChildren","xs","event","aria-haspopup","prop","removeItem","imageStyle","image","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","borderRadius","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","FormGroup","row","imageClassName","url","src","alt","titleImg","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","handleImageMargin","px","pt","pb","htmlFor","alert","ml","settings","innerContainer","ContainerElement","setFlexDirection","shadow","setShadow","setChildren","settingGutter","setSettingGutter","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","settingInnerContainer","setSettingInnerContainer","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","containerWrapper","mtView","shortest","mbView","settingsItem","toggleDrawer","handleHeadingMenuClose","addHeading","a","newChildren","newItem","libraryHeading","libraryParagraph","libraryParagraphImage","reSaveContainer","slicedChild","forEach","key","confirm","swapContainer","removeContainer","mr","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","SkeletonPage","Skeleton","animation","SinglePage","location","useLocation","pageSlug","slugForUpdate","setData","items","setItems","isUpdate","setIsUpdate","fetchData","pageRef","set","childrenContainer","newData","keys","elem","then","addContainer","newItems","newCont","ContainerLayout","flexWrap","indigo","m","CircularProgress","thickness","RouterComponent","path","render","App","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d0a7032.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = { \r\n        modeDev: true\r\n        // modeDev: false\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.modeDev\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        console.log(\"constructor\")\r\n    }   \r\n}\r\n\r\n// .collection('test') - имя сайта (site1, site2)\r\n// .doc() - имя документа для обозначения страницы (можно использовать дефолтные, но тогда нужно передавать какую именно страницу обновляем )\r\n  \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [] \r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n          } else {\r\n            console.log('cat data:', doc.data());\r\n            this.setState({\r\n                categories: doc.data().list\r\n            })\r\n          } \r\n    }\r\n\r\n    async updateCategories(data) {\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data)\r\n                        console.log(data)\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1000, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React, {useState, useEffect} from 'react'\r\nimport CategoryContext from '../../context/categoryContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../../assets/header.scss\"\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    makeStyles,\r\n    Button,\r\n    IconButton,\r\n    Drawer, \r\n    MenuItem,\r\n    Container, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst widthMobile = 992\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n      position: 'static' ,\r\n      backgroundColor: theme.palette.primary.main, \r\n      [`@media (max-width: ${widthMobile}px)`]: {\r\n          // paddingLeft: 0,\r\n      }, \r\n    },\r\n    logo: { \r\n      fontWeight: 600,\r\n      color: \"#FFFEFE\",\r\n      textAlign: \"left\",\r\n    },\r\n    menuButton: { \r\n      position: 'relative', \r\n      fontWeight: 700,\r\n      size: \"18px\",\r\n      marginLeft: \"38px\",\r\n      '&>.active': {\r\n          paddingBottom: 3,\r\n          borderBottom: '2px solid #ffffff52'\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    drawerContainer: { \r\n        width: '50vw', \r\n        maxWidth: 450, \r\n        minWidth: 260\r\n    }, \r\n    mobileLink: { \r\n        display: 'flex',\r\n        alignItems: 'center', \r\n        color: 'inherit', \r\n        textDecoration: 'none', \r\n        height: '100%', \r\n        width: '100%', \r\n        padding: '6px 16px', \r\n    },  \r\n    accordionReset: {\r\n        paddingLeft: 0,\r\n        marginTop: ' 0 !important', \r\n        marginBottom: '0 !important',\r\n        minHeight: 'auto !important', \r\n        background : 'none', \r\n        boxShadow: 'none'\r\n    }\r\n}));\r\n\r\nfunction DumbComponent() {\r\n\r\n    useEffect(() => { \r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < widthMobile\r\n            ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n            : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n        }; \r\n        setResponsiveness(); \r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n    }, []);\r\n\r\n    const { toolbar, header, logo , menuButton, drawerContainer, mobileLink , accordionReset} = useStyles();\r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false,\r\n    }); \r\n    \r\n    const {categories} = React.useContext(CategoryContext)    \r\n    \r\n    const { mobileView, drawerOpen } = state;\r\n\r\n    const femmecubatorLogo = (\r\n        <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n            LogoText\r\n        </Typography>\r\n    );\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n          <Toolbar className={toolbar}>\r\n            {femmecubatorLogo}\r\n    \r\n            <Box display='flex' clone={true}>\r\n                <ul >\r\n                {\r\n                    categories.map( (item, index) => { \r\n                    return (\r\n                        <li key={index} className={menuButton}>\r\n                            {\r\n                                item.slug === '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                                \r\n                            }\r\n                           {\r\n                                item.slug !== '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                           }\r\n                            <ul >\r\n                            {\r\n                                item.pages.map( (innerItem, innerIndex) => (\r\n                                <li key={innerIndex}>\r\n                                    <NavLink exact to={`/${item.slug}/${innerItem.slug}`} >\r\n                                        {innerItem.title}\r\n                                    </NavLink>\r\n                                </li>\r\n                                ))\r\n                            }\r\n                            </ul>\r\n                        </li>\r\n                    );\r\n                    })\r\n                }\r\n                </ul>\r\n            </Box>\r\n          </Toolbar>\r\n        );\r\n    };\r\n    \r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () => setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () => setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n        return (\r\n            <Toolbar disableGutters={true} style={{justifyContent: 'space-between'}}>\r\n            \r\n\r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  >\r\n                        <Button \r\n                            variant='outlined'\r\n                            color='default'\r\n                            onClick={handleDrawerClose}\r\n                        >\r\n                            <ArrowRightAltIcon/>\r\n                        </Button>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion classes={{root: accordionReset}}>\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    to={item.slug} \r\n                                                    key={index} \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        {\r\n                                            // isOpenPages && \r\n                                            item.pages.map( page => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}}> \r\n                                                    <NavLink \r\n                                                        to={`/${item.slug}/${page.slug}`} \r\n                                                        key={index} \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            to={item.slug} \r\n                                            key={index} \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>{femmecubatorLogo}</div>\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"inherit\",\r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <AppBar className={header}>\r\n            <Container\r\n                disableGutters={true}\r\n                fixed={true} \r\n                maxWidth={'lg'} \r\n                className='link-in-header' \r\n            > \r\n                {mobileView ? displayMobile() : displayDesktop()}\r\n            </Container>\r\n        </AppBar> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../context/categoryContext/CategoryContext'\r\nimport { Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport categoryLayout from './categoryLayout.json'\r\nimport pageLayout from '../pages/pageLayout.json'\r\n\r\nfunction StyledComponent() {\r\n    \r\n    const {categories, setCategories} = React.useContext(CategoryContext)    \r\n\r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 10, \r\n            top: 2, \r\n            left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80, \r\n            minHeight: 60, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms opacity`, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            position: 'relative', \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: '#fff'\r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = () => {\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.slug = `slug_${uuid()}`\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n \r\n    }\r\n    const addPage = (id) => { \r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.slug = `slug_${uuid()}`\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories) \r\n    }\r\n\r\n    const handleUpdateCategory = (place, value, id) => { \r\n        let newCategories = categories.slice()\r\n        console.log(newCategories)\r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item[place] = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const handleUpdatePage = (place, value, categoryId, pageId) => { \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page[place] = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    }\r\n \r\n    const handleSave = () => {\r\n        console.log('save')\r\n        setCategories(categories) \r\n        setIsDisableBtn(true)\r\n    }\r\n\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        \r\n        console.log(filtered) \r\n        setCategories(filtered) \r\n    }\r\n\r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    }\r\n\r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n\r\n    const deletePage = ( categoryId, pageId) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n        }) \r\n        setCategories(categories)  \r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Header Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >  \r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open} \r\n                // PaperComponent={PaperComponent}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={1}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={addCategory}\r\n                                >\r\n                                    Add Category\r\n                                </Button>\r\n                            </Box>\r\n                            {\r\n                                categories.map( (item, index) => { \r\n\r\n                                    return (\r\n                                        <Box className={classes.accordionContainer} >\r\n                                            <Tooltip title='Delete Category' placement='top'>\r\n                                                <Button\r\n                                                    variant='contained'\r\n                                                    color=\"default\"\r\n                                                    disableElevation={true}\r\n                                                    className={classes.deleteBtn}\r\n                                                    onClick={() => { deleteCategory(item.id) }}\r\n                                                > \r\n                                                    <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                </Button>\r\n                                            </Tooltip>\r\n\r\n                                            <ButtonGroup\r\n                                                orientation=\"vertical\"\r\n                                                color=\"primary\"\r\n                                                aria-label=\"vertical contained primary button group\"\r\n                                                variant=\"contained\"\r\n                                                className={classes.movingBtn}\r\n                                            >  \r\n                                                <Tooltip title='Get Up' placement='right'>\r\n                                                    <Button   \r\n                                                        onClick={() => { swapCategory('up', item.id) }}\r\n                                                        size='small'\r\n                                                        variant='contained'\r\n                                                        color='primary' \r\n                                                        disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                    >  \r\n                                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                    </Button>\r\n                                                </Tooltip> \r\n                                                <Tooltip title='Get Down' placement='right'>\r\n                                                    <Button   \r\n                                                        onClick={() => { swapCategory('down', item.id) }}\r\n                                                        size='small'\r\n                                                        variant='contained'\r\n                                                        color='primary' \r\n                                                        disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                    >     \r\n                                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                    </Button>\r\n                                                </Tooltip>  \r\n                                            </ButtonGroup>\r\n                                            \r\n                                            <Accordion key={index}>\r\n                                                <AccordionSummary\r\n                                                    expandIcon={<ExpandMoreIcon />}\r\n                                                    aria-controls=\"image-settings-content\"\r\n                                                    id=\"panel1a-header\" \r\n                                                    className={classes.accordionHeader} \r\n                                                >\r\n                                                    <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                    \r\n                                                </AccordionSummary>\r\n                                                <Box p={2}  > \r\n                                                    <TextField \r\n                                                        type='text' \r\n                                                        label=\"Category title\"\r\n                                                        fullWidth\r\n                                                        variant='filled'\r\n                                                        value={item.title} \r\n                                                        onChange={(e) => { handleUpdateCategory('title', e.target.value, item.id)}}\r\n                                                    />    \r\n                                                    <TextField \r\n                                                        type='text' \r\n                                                        label=\"Category slug\"\r\n                                                        fullWidth\r\n                                                        variant='filled'\r\n                                                        value={item.slug} \r\n                                                        onChange={(e) => { handleUpdateCategory('slug', e.target.value, item.id)}}\r\n                                                    />  \r\n                                                    <ul className={classes.listPages}>  \r\n                                                        <Typography className={classes.titlePages}>\r\n                                                            Pages List:\r\n                                                        </Typography>\r\n                                                        {\r\n                                                            item.pages.length > 0 &&\r\n                                                            item.pages.map((itemPages, indexPages) => (\r\n                                                                <li key={indexPages} >\r\n                                                                    <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                        <Typography >Page: { itemPages.title } </Typography>\r\n                                                                        <ButtonGroup \r\n                                                                            color=\"primary\"\r\n                                                                            aria-label=\"contained primary button group\"\r\n                                                                            variant=\"contained\"\r\n                                                                            className={classes.movingPageBtn}\r\n                                                                        >  \r\n                                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                                <Button   \r\n                                                                                    onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                    size='small'\r\n                                                                                    variant='contained'\r\n                                                                                    color='primary' \r\n                                                                                    // disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                                >  \r\n                                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                </Button>\r\n                                                                            </Tooltip> \r\n                                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                                <Button   \r\n                                                                                    onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                    size='small'\r\n                                                                                    variant='contained'\r\n                                                                                    color='primary' \r\n                                                                                    // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                                >     \r\n                                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                </Button>\r\n                                                                            </Tooltip>  \r\n                                                                            <Tooltip title='Delete Page' placement='top'>\r\n                                                                                <Button\r\n                                                                                    variant='contained'\r\n                                                                                    color=\"default\"\r\n                                                                                    disableElevation={true}\r\n                                                                                    className={classes.deletePageBtn}\r\n                                                                                    onClick={() => { deletePage(item.id, itemPages.id) }}\r\n                                                                                > \r\n                                                                                    <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                </Button>\r\n                                                                            </Tooltip>  \r\n                                                                        </ButtonGroup>\r\n                                                                    </Box>\r\n                                                                    <TextField \r\n                                                                        type='text' \r\n                                                                        label=\"Page title\"\r\n                                                                        fullWidth\r\n                                                                        variant='filled'\r\n                                                                        value={itemPages.title} \r\n                                                                        onChange={(e) => {handleUpdatePage('title', e.target.value, item.id, itemPages.id )}}\r\n                                                                    />    \r\n                                                                    <TextField \r\n                                                                        type='text' \r\n                                                                        label=\"Page slug\"\r\n                                                                        fullWidth\r\n                                                                        variant='filled'\r\n                                                                        value={itemPages.slug} \r\n                                                                        onChange={(e) => {handleUpdatePage('slug', e.target.value, item.id, itemPages.id )}}\r\n                                                                    />  \r\n                                                                </li>\r\n                                                            ))\r\n                                                        }\r\n                                                        {\r\n                                                            item.pages.length === 0 && \r\n                                                            <Typography gutterBottom >No Pages </Typography>\r\n                                                        }\r\n                                                        <li>\r\n                                                            <Box mt={2}> \r\n                                                                <Button \r\n                                                                    color={'primary'} \r\n                                                                    variant=\"contained\"\r\n                                                                    onClick={() => { addPage(item.id) }}\r\n                                                                >\r\n                                                                    Add New Page\r\n                                                                </Button>\r\n                                                            </Box>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </Box>\r\n                                            </Accordion>\r\n                                        </Box>\r\n                                    )  \r\n                                })\r\n                            }\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>\r\n\r\n            <DumbComponent data={categories} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => { \r\n   \r\n\r\n    return (  \r\n        <HeaderCreator />  \r\n    );\r\n  }\r\n\r\nexport default Header","import React from 'react'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Home() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nfunction Error() {\r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className \r\n      }));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.isResponsiveFont ? 'resposive-font-size' : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: '#fff', \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }\r\n            }, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: '#fff',\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: '#fff', \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '.1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }\r\n            }, \r\n        },\r\n       \r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: '#fff',\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';\r\n \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.data.image.url &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.data.image.url} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                }\r\n                {/* <div dangerouslySetInnerHTML={{__html: props.textChildren}}></div> */}\r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return (\r\n        <React.Fragment> \r\n            <Tooltip title={titleImg} placement={props.image.placement}>\r\n                <img \r\n                    src={props.image.url} \r\n                    className={classes.imageStyle}   \r\n                    alt={titleImg}\r\n                />  \r\n            </Tooltip>\r\n          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n \r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: '#fff', \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n            }, \r\n        },\r\n        \r\n       \r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: '#fff',\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n\r\n    // const handleImageSetting = (value, type) => {  \r\n    //     const newImData = { \r\n    //         [type]: value, \r\n\r\n    //     }\r\n    //     setImage(Object.assign(image, newImData))\r\n         \r\n    //     console.log(image)\r\n    // }\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' style={{\r\n                                                    position: 'absolute',\r\n                                                    zIndex: 10, \r\n                                                    top: 0, \r\n                                                    bottom: 0, \r\n                                                    left: 0, \r\n                                                    right: 0, \r\n                                                    width: \"100%\", \r\n                                                    maxWidth: \"100%\", \r\n                                                    height: \"100%\", \r\n                                                    maxHeight: \"100%\", \r\n                                                    cursor: 'pointer'\r\n                                                }}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={ () => {alert(\"Changed\")}} \r\n                                                    style={{ \r\n                                                        display: \"none\"\r\n                                                    }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Container  \r\n                maxWidth={props.settings.maxWidth} \r\n                fixed={props.settings.fixed} \r\n                disableGutters={props.settings.disableGutters} \r\n                className={classes.myClassName}\r\n            > \r\n                {  \r\n                    props.settings.innerContainer && \r\n                    <Container\r\n                        maxWidth={'lg'}\r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                    >\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </Container>\r\n                }\r\n                {  \r\n                    !props.settings.innerContainer && \r\n                    <React.Fragment>\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n                \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select,  Container, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\nimport libraryHeading from '../heading/headingLayout.json'\r\nimport libraryParagraph from '../paragraph/paragraphLayout.json'\r\nimport libraryParagraphImage from '../paragraphImage/paragraphImageLayout.json'\r\n \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n         \r\n        console.log(theme)\r\n        return ( {  \r\n            btnDrawerStyle : {\r\n                position: 'absolute', \r\n                top: 0, \r\n                left: 0, \r\n                zIndex: 10,   \r\n                minWidth: 50, \r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n            }, \r\n            containerWrapper: {\r\n                position: 'relative', \r\n                outline: \"1px solid #ffffff00\", \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle': {\r\n                        opacity: 1\r\n                    }\r\n                },   \r\n               \r\n            },\r\n            mtView: {  \r\n                position: 'absolute', \r\n                top: `-${margin.top}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.top}px`, \r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            mbView: {  \r\n                position: 'absolute', \r\n                bottom: `-${margin.bottom}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.bottom}px`, \r\n                opacity: 0,\r\n                transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            settingsItem: {\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1\r\n            },\r\n            inputNumber: {\r\n                flexGrow: 1, \r\n                margin: 5, \r\n                width: \"100%\", \r\n                maxWidth: '50%'\r\n            }, \r\n            inputGroup: {\r\n                border: \"1px solid #f5f5f5\", \r\n                padding: 3, \r\n                inputNumber: { \r\n                    maxWidth: \"100%\"\r\n    \r\n                }\r\n            },\r\n            btnSave: { \r\n                position: 'sticky', \r\n                zIndex: theme.zIndex.tooltip,\r\n                bottom: 0, \r\n                left: 20, \r\n                right: 0,\r\n                height: 80, \r\n                backgroundColor: '#fff', \r\n                \r\n                '&>button': {\r\n                    marginTop: 20, \r\n                    marginBottom: 30, \r\n                    opacity: 1,  \r\n                    paddingLeft: 40, \r\n                    paddingRight: 40\r\n                }\r\n            }\r\n            \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :  \r\n                console.log('paragraph')\r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :  \r\n                console.log('paragraphImage')\r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        }) \r\n        // console.log(slicedChild)\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) {\r\n            \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n            \r\n            // save in firestore\r\n            props.reSaveContainer(props.data.id, filtered) \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={propsSettings.fixed} \r\n            disableGutters={true}\r\n            className={classes.containerWrapper} \r\n        >    \r\n            <div className={classes.mtView}></div>\r\n            <div className={classes.mbView}></div>\r\n            <Box style={{position: 'relative'}} > \r\n                {/*  DrawerContainer */}\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                \r\n                            >  \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary' \r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary' \r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                     \r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}> \r\n                                        {/* <Button\r\n                                            // onClick={addContainer}\r\n                                            variant='outlined'\r\n                                            color=\"primary\" \r\n                                            disabled={true}\r\n                                            \r\n                                        >\r\n                                            Add Container\r\n                                        </Button>   */}\r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\" \r\n                                            // disabled={true}\r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='outlined'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph')}}\r\n                                                    variant='outlined'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage')}}\r\n                                                    variant='outlined'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                             <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n                <DumbComponent\r\n                    reSaveChildren={reSaveChildren}\r\n                    removeItem={removeItem}\r\n                    data={props.data} \r\n                    classes={myClassName}\r\n                    settings={propsSettings}\r\n                />  \r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation='wave'\r\n                />\r\n              </Box>\r\n              <Box display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation='wave'\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='text'  \r\n                  height={50}\r\n                  width='100%'\r\n                  animation='wave'\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation='wave'\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation='wave'\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react' \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, CircularProgress } from \"@material-ui/core\"; \r\n\r\nimport { indigo } from '@material-ui/core/colors'\r\n  \r\nimport ContainerElement from '../library/container/ElementCreator' \r\nimport ContainerLayout from '../library/container/containerLayout.json' \r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n\r\nimport pageLayout from './pageLayout.json'\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n    const location = useLocation()\r\n\r\n    const pageSlug = props.slugForUpdate\r\n\r\n    const { modeDev } = React.useContext(ModeContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n  \r\n    const [data, setData] = React.useState({})\r\n    const [items, setItems] = React.useState([])\r\n  \r\n    const [isUpdate, setIsUpdate] = React.useState(true)\r\n    //  title\r\n    //  slug\r\n    //  id\r\n  \r\n    React.useEffect( () => { \r\n      setIsLoading(true)\r\n      fetchData()\r\n    }, [location])\r\n  \r\n    const fetchData = async () => {  \r\n       \r\n      const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n      const doc = await pageRef.get();\r\n      \r\n      if (!doc.exists) {\r\n        console.log('No such document!'); \r\n\r\n        // задать шаблон страницы\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.slug = pageSlug\r\n\r\n        await pageRef.set(newPage)\r\n\r\n        setData(newPage)  \r\n        setItems(newPage.items) \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n\r\n      } else {\r\n        console.log('Document data:', doc.data());\r\n        \r\n        setData(doc.data())  \r\n        setItems(doc.data().items)  \r\n        \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }\r\n   \r\n    }  \r\n    \r\n    const reSaveContainer = async (id, childrenContainer) => { \r\n   \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n         if(newData.items[elem].id === id) {\r\n            newData.items[elem].children = childrenContainer \r\n        }\r\n      })\r\n   \r\n      setData(newData)\r\n      setItems(newData.items)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n    const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n      let newData = Object.assign({}, data)\r\n        \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem].classes = classes \r\n            newData.items[elem].disableGutters = settings.disableGutters \r\n            newData.items[elem].fixed = settings.fixed \r\n            newData.items[elem].maxWidth = settings.maxWidth \r\n            newData.items[elem].innerContainer = settings.innerContainer \r\n        }\r\n      }) \r\n  \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n   \r\n    const addContainer = async () => {   \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n  \r\n      let newCont = Object.assign({}, ContainerLayout) \r\n      newCont.id = uuid()\r\n   \r\n      newItems.push(newCont) \r\n   \r\n      newData.items = newItems\r\n          \r\n      setData(newData)\r\n      setItems(newItems)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      });  \r\n    }\r\n  \r\n    const removeContainer = async (id) => {  \r\n      let newData = Object.assign({}, data)\r\n      const filtered = items.filter((item) => (item.id !== id))  \r\n  \r\n      newData.items = filtered\r\n          \r\n      setData(newData)\r\n      setItems(filtered) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: filtered\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }); \r\n    }\r\n  \r\n    const swapContainer = async (direction, id) => { \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n      let activeIndex   \r\n   \r\n      newItems.map( (item) => { \r\n        if(item.id === id) {\r\n          activeIndex = newItems.indexOf(item) \r\n        }\r\n      }) \r\n   \r\n      if(direction === 'up' && activeIndex === 0) return  \r\n      if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n      \r\n      if(direction === 'up') { \r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex - 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex - 1 ] = movedItem  \r\n      }\r\n      if(direction === 'down') {\r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex + 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex + 1 ] = movedItem  \r\n      }\r\n  \r\n      newData.items = newItems\r\n         \r\n      setItems(newItems)\r\n      setData(newData)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n   \r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    }\r\n  \r\n    function renderContainers () {   \r\n      if(items.length > 0) {\r\n        return Object.keys(items).map( (key) => { \r\n          return ( \r\n           <ContainerElement \r\n             key={items[key].id} \r\n             data={items[key]} \r\n             reSaveContainer={reSaveContainer}\r\n             reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n             removeContainer={removeContainer}\r\n             swapContainer={swapContainer}\r\n           /> \r\n         ) \r\n       })\r\n      }\r\n      else {\r\n        return ( \r\n          <SkeletonPage/> \r\n        ) \r\n      }\r\n      \r\n    } \r\n\r\n    return (\r\n        <React.Fragment> \r\n          { \r\n            modeDev &&  \r\n            <Box px={3} display='flex' flexWrap='wrap' style={{backgroundColor: indigo[50] }}> \r\n                  \r\n                  <Box m={1}>\r\n                    <Typography variant=\"h6\" >\r\n                      Page actions\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box display=\"flex\" alignItems='center' mx={1} minWidth={22} >\r\n                    {\r\n                      isUpdate &&\r\n                      <CircularProgress size={22} thickness={5} /> \r\n                    } \r\n                  </Box>\r\n\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'contained'} onClick={addContainer}>\r\n                        Add new container\r\n                    </Button> \r\n                  </Box>\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                        More settings\r\n                    </Button> \r\n                  </Box> \r\n            </Box>\r\n          }\r\n           \r\n          { \r\n            renderContainers()  \r\n          } \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header'\r\n\r\nimport Home from '../components/Home'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/categoryContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext) \r\n\r\n    return (\r\n        <Router> \r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n \r\n                    <Header/>\r\n\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => \r\n                                <Route \r\n                                    key={category.id}\r\n                                    exact\r\n                                    path={`/${category.slug}`}\r\n                                    render={\r\n                                        (props) => {\r\n                                            if(category.slug === '/') { \r\n                                                return <Home/>\r\n                                            }\r\n                                            //if === concacts => return contacts .... \r\n                                            return <SinglePage {...props} slugForUpdate={category.slug} />\r\n                                        }\r\n                                    }\r\n                                /> \r\n                            )\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => \r\n                                    <Route \r\n                                        key={page.id}\r\n                                        exact\r\n                                        path={`/${category.slug}/${page.slug}`}\r\n                                        render = {\r\n                                            (props) => <SinglePage {...props} slugForUpdate={page.slug} />\r\n                                        }\r\n                                    />\r\n                                )\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from \"react\" \n\nimport CssBaseline from '@material-ui/core/CssBaseline'; \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/categoryContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\n \nimport RouterComponent from './Router/RouterComponent'\n  \nfunction App() {  \n  return (\n    <ModeProvider> \n      <CategoryProvider>\n        <LoadingProvider>\n            <div className=\"App\">\n              <CssBaseline/>  \n\n              <RouterComponent/>\n\n            </div>\n        </LoadingProvider> \n      </CategoryProvider> \n    </ModeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}