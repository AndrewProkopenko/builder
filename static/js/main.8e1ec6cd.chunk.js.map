{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/library/about/DumbComponent.js","components/library/contactMap/DumbComponent.js","components/Login.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","imageList","nameList","fetchListFromStorage","fetchListFromFirestore","listRef","ref","imagesArray","listAll","res","items","forEach","itemRef","push","fullPath","name","child","removeImage","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","theme","listPages","marginTop","paddingLeft","listStyle","marginBottom","titlePages","fontSize","fontWeight","borderBottom","menu","palette","background","paper","padding","paddingBottom","maxWidth","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","cursor","btnSetting","orange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","dumbWrapper","opacity","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","Tooltip","title","placement","Button","onClick","size","variant","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","colorSelect","setColorSelect","colorCustom","setColorCustom","amber","uploadHandler","imageData","storageRef","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","margin","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","labelId","MenuItem","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","boxShadow","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackground","settingsItem","marginRight","flexGrow","row","Number","ThemeChanger","default","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","primary","main","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","secondary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","deepOrange","colorPreview","borderRadius","flexWrap","mr","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","textDecoration","easeIn","menuButtonInnerLi","shortest","toolbar","listUnstyle","buttonModal","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","DumbComponent","modalBtnColor1","modalBtnColor2","widthMobile","headerHeight","setHeaderHeight","modalBtnColor","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","getContrastText","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","divider","handleOnceCheck","isCheck","handleRemove","Checkbox","request","Card","CardContent","keys","String","CardActions","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","ml","newData","AdminHeader","isOpen","setIsOpen","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","fill","footer","footerHeading","paragraph","imageUrl","isButton","textButton","targetButton","border","sm","md","colorMapOnload","formPhone","setFormPhone","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","phone","inputComment","svg","itemBackground","input","fontFamily","borderColor","link","boxForFlex","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","place","placeholder","cols","rows","defaultValue","dangerouslySetInnerHTML","__html","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","err","autoComplete","autoFocus","Alert","severity","Error","myClassName","resposiveFontSize","classeForResp","responseFont","textChildren","renderText","setPadding","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","inputNumber","inputGroup","tooltip","dumbItemContainer","outline","shadows","outlineColor","mtView","mbView","ptView","pbView","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","handleMargin","newMargin","focus","triangle","colors","onChangeComplete","newColor","hex","sentData","reSaveChildren","aria-haspopup","prop","removeItem","imageStyle","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","imageClassName","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","pt","pb","classForResp","isPaper","innerContainer","ContainerElement","libraryHeading","libraryParagraph","libraryParagraphImage","paragraphImage","setFlexDirection","shadow","setShadow","setChildren","settingInnerContainer","setSettingInnerContainer","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","btnDrawerItem","containerWrapper","toggleDrawer","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","slicedChild","key","confirm","swapContainer","removeContainer","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","colorFocusInput","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","xlinkHref","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","handleImageUpload","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","setItems","handleUpdateItem","newItems","swapItem","splice","setLocation","setPhone","setInputComment","setMapFrame","setIsButton","setTextButton","setTargetButton","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","setData","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","m","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","darken","closeBtn","targetContainer","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8e1ec6cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n      \r\n    } \r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    state = { \r\n        imageList: [],\r\n        nameList: []\r\n    } \r\n\r\n    async componentDidMount() { \r\n          this.fetchListFromStorage()\r\n          this.fetchListFromFirestore()\r\n    }\r\n\r\n    async fetchListFromStorage() {\r\n        const listRef = firebase.storage.ref(); \r\n        \r\n        let imagesArray = []\r\n\r\n        await listRef.listAll().then(function(res) {\r\n            res.items.forEach(function(itemRef) { \r\n                imagesArray.push(itemRef.fullPath) \r\n            });\r\n          }).catch(function(error) {\r\n              console.log(error) \r\n          });\r\n          this.setState({\r\n            imageList: imagesArray\r\n          }) \r\n    }\r\n\r\n    async fetchListFromFirestore() {\r\n        const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n        const doc = await listRef.get();\r\n      \r\n        if (!doc.exists) {\r\n            console.log('No such page!');  \r\n\r\n        } else { \r\n            this.setState({\r\n                nameList: doc.data().list\r\n            }) \r\n        }\r\n    }\r\n\r\n    removeImage(name) { \r\n        const storageRef = firebase.storage.ref();\r\n \r\n        const imageRef = storageRef.child(name)\r\n     \r\n        imageRef.delete().then(function() {\r\n            console.log('File deleted successfully')\r\n        }).catch(function(error) {\r\n            console.log(error) \r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    imageList: this.state.imageList, \r\n                    nameList: this.state.nameList ,\r\n                    // updateImageNameList: (name) => {\r\n                    //     let newList = this.state.nameList.slice()\r\n                    //     let isUnic = true\r\n                    //     newList.map((item) => {\r\n                    //         if( item === name ) isUnic = false\r\n                    //     })\r\n                    //     if(isUnic) newList.push(name)\r\n\r\n                    //     this.setState({\r\n                    //         nameList: newList\r\n                    //     }) \r\n                    //     firebase.db.collection(\"site1category\").doc('imageList').update({\r\n                    //         list: newList\r\n                    //     })\r\n                    // },\r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n// import DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        <Tooltip title='Get Up' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('up', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                            >  \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                            </Button>\r\n                                                        </Tooltip> \r\n                                                        <Tooltip title='Get Down' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('down', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                        >  \r\n                                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                        </Button>\r\n                                                                                    </Tooltip> \r\n                                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                        >     \r\n                                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(modal.color !== 'primary' && modal.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        }, \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Редактировать логотип/модальное окно   <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <TextField    \r\n                                                        type='text'\r\n                                                        label=\"Set Custom Color on #hex\"  \r\n                                                        variant=\"outlined\"  \r\n                                                        value={colorCustom}\r\n                                                        onChange={ (e) => { setIsDisableBtn(false); setColorCustom(e.target.value)  } }     \r\n                                                    />\r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\nimport { TwitterPicker } from 'react-color';\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackground, setSettingBackground] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: { \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n        settingsItem: {\r\n            width: '100%',\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1, \r\n        },\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition,\r\n                backgroundColor: settingBackground,\r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Изменить настройки  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {/* <Box \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[   'transparent', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSettingBackground(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  */}\r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,    \r\n} from '@material-ui/core' \r\n\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 450px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 900,  \r\n            width: 900,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n         \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        \r\n        colorPreview: { \r\n            width: '100%',\r\n            height: 8,  \r\n            borderRadius: 3, \r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Отредактировать тему  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundDefault}\r\n                                        label='Light Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundPaper}\r\n                                        label='Light Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightPrimary}\r\n                                        label='Light Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightSecondary}\r\n                                        label='Light Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundDefault}\r\n                                        label='Dark Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundPaper}\r\n                                        label='Dark Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkPrimary}\r\n                                        label='Dark Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkSecondary}\r\n                                        label='Dark Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`,\r\n\r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , listUnstyle, buttonModal  } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={menuLink} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box  my={4} width={'100%'} clone={true}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nfunction DumbComponent() {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings} = React.useContext(CategoryContext)    \r\n  \r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n\r\n    let modalBtnColor = modal.color\r\n    let modalBtnColor1 \r\n    let modalBtnColor2 \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        if(modalBtnColor === 'primary') {\r\n            modalBtnColor1 = theme.palette.primary.main\r\n            modalBtnColor2 = theme.palette.primary.dark\r\n        }\r\n        if(modalBtnColor === 'secondary') {\r\n            modalBtnColor1 = theme.palette.secondary.main\r\n            modalBtnColor2 = theme.palette.secondary.dark\r\n        }\r\n        if(modalBtnColor !== 'primary' && modalBtnColor !== 'secondary' ) {\r\n            modalBtnColor1 = modal.color\r\n            modalBtnColor2 = modal.color\r\n        } \r\n\r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: theme.palette.background.paper, \r\n\r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal } = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            setHeaderHeight(headHeight)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n       \r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal}\r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 400px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 800,  \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex',  \r\n                fontSize: 10\r\n            }\r\n        },\r\n        \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        cardRoot: {\r\n            display: 'inline-block', \r\n            width: 'calc( 50% - 20px)',\r\n            marginBottom: 20,\r\n            marginRight: 20\r\n        },\r\n        checkbox: {\r\n            display: 'flex',\r\n            alignItems: 'center' ,\r\n            marginBottom: theme.spacing(2),\r\n            marginLeft:  theme.spacing(1), \r\n            borderBottom: `1px solid ${theme.palette.divider}`\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,  \r\n    FormControl, \r\n    Select,\r\n    MenuItem, \r\n    InputLabel\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 300px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 600,  \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[700], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex',  \r\n                fontSize: 10\r\n            }\r\n        },\r\n        \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                    <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"color-select-label\"\r\n                                        id=\"color-select\"\r\n                                        value={colorSelect}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                    >\r\n                                        <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                        <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Box ml={1} >\r\n                                    {\r\n                                        colorSelect === 'custom' &&\r\n                                        <TextField    \r\n                                            type='text'\r\n                                            label=\"Set Custom Color on #hex\"  \r\n                                            variant=\"outlined\"  \r\n                                            value={colorCustom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setColorCustom(e.target.value)  } }     \r\n                                        />\r\n                                    }\r\n                                    \r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const imageUrl = props.data.image\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    let colorButton = props.data.colorButton || '#f00'\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth=\"lg\" >\r\n                <div className=\"electro-about heading\">\r\n                    <Grid container> \r\n                        <Grid item md={6} >\r\n                            <div className=\"electro-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"electro-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box } from '@material-ui/core'\r\n\r\nimport '../../../assets/contactMap.scss'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n    \r\n\r\n    let colorMapOnload \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${theme.palette.primary.main}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: theme.palette.secondary.light\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: theme.palette.primary.main ,\r\n                border: `2px solid ${theme.palette.primary.main}`, \r\n                color: '#fff',\r\n                '&:hover' : {\r\n                    background: 'none',\r\n                    '&>span': { \r\n                        color: theme.palette.primary.main\r\n                    }\r\n                }\r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${theme.palette.primary.main} !important`,\r\n                }\r\n            },\r\n            boxForFlex: {\r\n                [`@media (min-width: 960px)`]: {\r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"ln-contact\"> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={'ln-contact_item'} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`${phone}`}>{phone}</a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment} \r\n                                                defaultValue={\"\"} \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ln-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\n\r\n// import ImageManager from './header/headerHelpers/ImageManager'\r\n// import DumbAccordion from '../components/library/accordion/DumbComponent'\r\nimport Dumb from '../components/library/about/DumbComponent'\r\n\r\nimport DumbContact from '../components/library/contactMap/DumbComponent'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\nimport ImageContext from '../context/imageContext/ImageContext'\r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { imageList } = React.useContext(ImageContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n        {/* <Dumb/>   */}\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n \r\n            {/* <ImageManager/> */}\r\n \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6, \r\n                marginTop: props.className.marginTop*0.5,\r\n                marginBottom: props.className.marginBottom*0.5\r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                },  \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50,  \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                },  \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                },  \r\n            }, \r\n        }, \r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                imageUrl={imageUrl}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.45,\r\n                marginBottom: props.classes.marginBottom*0.45\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n  \r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({  \r\n        btnDrawerStyle : {\r\n            backgroundColor: theme.palette.error.dark, \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\", \r\n            maxWidth: '50%'\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 20, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        }\r\n    })\r\n    )\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n\r\n        toggleDrawer()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        toggleDrawer()\r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Box \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={String(propsSettings.fixed)}  \r\n            className={classes.containerWrapper} \r\n        >    \r\n            <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip> \r\n\r\n            <Box style={{position: 'relative'}} > \r\n                \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >   \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                {/*  DrawerContainer */}\r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}>  \r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\"  \r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-paper-label\"\r\n                                            id=\"inner-paper-style\"\r\n                                            value={settingIsPaper}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n            \r\n            <DumbComponent\r\n                reSaveChildren={reSaveChildren}\r\n                removeItem={removeItem}\r\n                data={props.data} \r\n                classes={myClassName}\r\n                settings={propsSettings}\r\n            />  \r\n           \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                '&:hover' : {\r\n                    background: 'none', \r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } \r\n        } )\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                <svg style={{fill: '#fff'}}>       \r\n                                    <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                </svg>\r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                  \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e, imageType) => { \r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => {  \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                  if(imageType === 'icon') setIconUrl(url)\r\n\r\n                  if(imageType === 'mainImage') setImageUrl(url) \r\n              })\r\n          }\r\n        ) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >  \r\n                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                </Button>\r\n                            </Tooltip> \r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки банера <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button> \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <img src={iconUrl} alt='icon' width={35} />\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Форма\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <TextField    \r\n                                                    type='text'\r\n                                                    label=\"Set Custom Color on #hex\"  \r\n                                                    variant=\"outlined\"  \r\n                                                    value={colorCustom}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false); setColorCustom(e.target.value)  } }     \r\n                                                />\r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'> \r\n                                            <Button color='primary' variant='contained'> \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'} />\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className=\"mac-accordion heading\">\r\n            <Container maxWidth={'lg'} className={classes.disableMobileGutters}>\r\n\r\n                <h3> { heading } </h3> \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"mac-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"mac-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        \r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >  \r\n                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                </Button>\r\n                            </Tooltip> \r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки аккордиона  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                <Tooltip title='Get Up' placement='top'>\r\n                                                                    <Button   \r\n                                                                        onClick={() => { swapItem('up', index) }}\r\n                                                                        size='small'\r\n                                                                        variant='contained'\r\n                                                                        color='primary' \r\n                                                                        disabled={index === 0 ? true : false }\r\n                                                                    >  \r\n                                                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                    </Button>\r\n                                                                </Tooltip> \r\n                                                                <Tooltip title='Get Down' placement='top'>\r\n                                                                    <Button   \r\n                                                                        onClick={() => { swapItem('down', index) }} \r\n                                                                        size='small'\r\n                                                                        variant='contained'\r\n                                                                        color='primary' \r\n                                                                        disabled={items.length - 1 === index ? true : false }\r\n                                                                    >    \r\n                                                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <TextField    \r\n                                                    type='text'\r\n                                                    label=\"Set Custom Color on #hex\"  \r\n                                                    variant=\"outlined\"  \r\n                                                    value={colorCustom}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false); setColorCustom(e.target.value)  } }     \r\n                                                />\r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = mapFrame === '' ? null : mapFrame \r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >  \r\n                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                </Button>\r\n                            </Tooltip> \r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки контактов  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} mb={2}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Map Frame\" \r\n                                            variant=\"outlined\"  \r\n                                            value={mapFrame}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    { \r\n                                        !mapFrame && \r\n                                        <Typography color='secondary'>\r\n                                            If <b>Map Frame</b> is null layout have another view!\r\n                                        </Typography>\r\n                                    } \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorButton]) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                 \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            }\r\n        },\r\n        menu: {\r\n            position: \"absolute\",\r\n            left: 50,\r\n            top: 50,\r\n            backgroundColor: theme.palette.background.paper,\r\n            padding: 10,\r\n            paddingBottom: 0,\r\n            maxWidth: '100% ',\r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)',\r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            fontSize: 14,\r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10,\r\n            cursor: 'move'\r\n        },\r\n        btnSave: {\r\n            position: 'sticky',\r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            height: 80,\r\n            backgroundColor: theme.palette.background.paper,\r\n\r\n            '&>button': {\r\n                marginTop: 20,\r\n                marginBottom: 30,\r\n                opacity: 1,\r\n                paddingLeft: 40,\r\n                paddingRight: 40\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async(e) => {\r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase\r\n            .storage\r\n            .ref(`${imageData.name}`)\r\n            .put(imageData)\r\n        storageRef.on('state-changed', snapshot => {\r\n            console.log(snapshot)\r\n        }, error => {\r\n            console.log(error.message)\r\n        }, () => {\r\n            storageRef\r\n                .snapshot\r\n                .ref\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    setImageUrl(url)\r\n                })\r\n        })\r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button\r\n                                    onClick={() => {\r\n                                    props.swapContainer('up', props.data.id)\r\n                                }}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <ExpandLessOutlinedIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button\r\n                                    onClick={() => {\r\n                                    props.swapContainer('down', props.data.id)\r\n                                }}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <ExpandMoreOutlinedIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Настройки банера\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <TextField    \r\n                                                                    type='text'\r\n                                                                    label=\"Set Custom Color on #hex\"  \r\n                                                                    variant=\"outlined\"  \r\n                                                                    value={colorCustom}\r\n                                                                    onChange={ (e) => { setIsDisableBtn(false); setColorCustom(e.target.value)  } }     \r\n                                                                />\r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained'>\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'}/>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent  } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({ \r\n    \r\n    btnSetting: { \r\n        position: 'absolute', \r\n        zIndex: 1031, \r\n        top: 0, \r\n        left: 80,\r\n        backgroundColor: theme.palette.error.dark,   \r\n        minWidth: 30, \r\n        maxWidth: 40, \r\n        minHeight: 38, \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n        '&:hover': { \r\n          backgroundColor: theme.palette.secondary.dark,   \r\n        }, \r\n        '&>span': {\r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            fontSize: 10\r\n        }\r\n    } ,\r\n      \r\n    btnContainer: {\r\n      position: 'relative',\r\n      '&:hover $btnSetting' : {\r\n        opacity: 1\r\n      }\r\n    },\r\n    menu: {    \r\n      position: \"absolute\", \r\n      left: \"calc(50% - 200px)\",\r\n      top: 50, \r\n      backgroundColor: theme.palette.background.paper, \r\n      padding: 10 , \r\n      paddingBottom: 0, \r\n      maxWidth: 400,  \r\n      width: 400,\r\n      maxHeight: 'calc(100vh - 100px)', \r\n      minHeight: 500,\r\n      overflowY: 'scroll',  \r\n    },\r\n    menuTitle: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between', \r\n        fontSize: 14, \r\n        borderBottom: '1px solid #eaeaea',\r\n        paddingBottom: 6,\r\n        marginBottom: 10, \r\n        cursor: 'move'\r\n    },\r\n\r\n  }))\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n  \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n      \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                          <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Действия для страницы  <OpenWithIcon/>\r\n                            </Typography> \r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                  Add new container\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                  Add Main Banner\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                  Add Accordion\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                  Add Contacts with Map\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                  Add About\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n\r\n// import Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n  \r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => {\r\n                                const breadcrumbs = [\r\n                                    {\r\n                                        title: category.title,\r\n                                        slug: category.slug\r\n                                    } \r\n                                ]\r\n                                return (\r\n                                    <Route \r\n                                        key={category.id}\r\n                                        exact\r\n                                        path={`/${category.slug}`}\r\n                                        render={\r\n                                            (props) => {\r\n                                                if(category.slug === '/') { \r\n                                                    return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                }\r\n                                                //if === concacts => return contacts .... \r\n                                                return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        }\r\n                                    />  \r\n                                ) \r\n                            })\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        }, \r\n                                        {\r\n                                            title: page.title,\r\n                                            slug: `${category.slug}/${page.slug}`\r\n                                        }\r\n                                    ]\r\n                                    return(\r\n                                        <Route \r\n                                            key={page.id}\r\n                                            exact\r\n                                            path={`/${category.slug}/${page.slug}`}\r\n                                            render = {\r\n                                                (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        />\r\n                                        )\r\n                                })\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, handleOpen, handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2 \r\n  console.log(modalSettings)\r\n \r\n  const useStyles = makeStyles((theme) => {\r\n\r\n    if(colorButton === 'primary') {\r\n        colorGradient1 = theme.palette.primary.main\r\n        colorGradient2 = theme.palette.primary.dark\r\n    }\r\n    if(colorButton === 'secondary') {\r\n        colorGradient1 = theme.palette.secondary.main\r\n        colorGradient2 = theme.palette.secondary.dark\r\n    }\r\n    if(colorButton !== 'primary' && colorButton !== 'secondary' ) {\r\n      if(modalSettings.colorButton) {\r\n        colorGradient1 = modalSettings.colorButton\r\n        colorGradient2 = darken(modalSettings.colorButton, 0.4)\r\n      } \r\n    } \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 3),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.text.primary}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: { \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        maxWidth: 250, \r\n        textAlign: 'center', \r\n        fontSize: \".75rem\"\r\n      }, \r\n      target: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \"1.2em\", \r\n        fontWeight: 500\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  const openModal = () => {\r\n    handleOpen('')\r\n  }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.target}>{ targetText } </span>{ target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nfunction AlertComponent(props) {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n    }\r\n    const severityText = () => { \r\n        return props.severity\r\n    }\r\n\r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                    <LoadingProvider>\n                        <div className=\"App\">  \n                          <ThemeComponent/> \n                        </div>\n                    </LoadingProvider> \n                </ModeProvider>\n              </LibraryProvider> \n            </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}