{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/utilits/LoadingProgress.js","components/utilits/PreloaderThumbnail.js","components/functions/InputMaskPhone.js","components/functions/colorChanger/ColorCalculation.js","components/utilits/ValidationChip.js","components/functions/formValidation.js","components/modal/DumbComponent.js","styles/changers.js","components/header/headerHelpers/category/AddItem.js","components/header/headerHelpers/category/ChangePage.js","components/functions/InputChange.js","components/header/headerHelpers/CategoriesChanger.js","components/functions/colorChanger/ColorPicker.js","components/functions/colorChanger/ColorSelecter.js","components/functions/RemoveImage.js","components/header/headerHelpers/LogoChanger.js","components/functions/SelectShadow.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ValidationChanger.js","assets/icons/half-moon.svg","assets/icons/sun.svg","components/header/dumb/ThemeSwitcher.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/single/Login.js","components/single/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","assets/icons/location.js","assets/icons/phone.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/AddItem.js","components/functions/SelectPage.js","components/library/swiper/StyledComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/DumbComponent.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/library/blocksPages/DumbComponent.js","components/library/blocksPages/AddItem.js","components/library/blocksPages/StyledComponent.js","components/library/blocksPages/ElementCreator.js","components/library/blocksAdv/DumbComponent.js","components/library/blocksAdv/AddItem.js","components/library/blocksAdv/StyledComponent.js","components/library/blocksAdv/ElementCreator.js","components/utilits/SkeletonPage.js","components/utilits/Breadcrumbs.js","components/page/SinglePage.js","Router/RouterComponent.js","components/utilits/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","SendFormContext","SendFormProvider","requests","modalSettings","isAlertSeverity","alertText","validationSettings","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","time","setTimeout","req","newList","slice","newReq","Object","assign","getCurrentDate","push","closeAlertFromTimeout","severity","duration","isShowAlert","updateValidationSettings","updateRequests","updateModalSettings","sendRequests","closeAlert","setCustomAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","PreloaderThumbnail","status","theme","preloaderContainer","bottom","opacity","palette","background","default","transition","centeredFlexed","display","flexDirection","alignItems","justifyContent","progressCircle","title","marginTop","fontSize","disabled","fontWeight","loadContainer","transform","enterTitle","Box","CircularProgress","size","thickness","circle","Typography","variant","InputMaskPhone","setValue","placeholder","useState","valueLocal","setValueLocal","mask","useContext","maskPlaceholder","alwaysShowMask","onChange","e","onBlur","getColorByPalette","primary","main","secondary","warning","info","success","paper","getColorByPaletteForGradient","getColorByPaletteReverse","isNoThemeColor","ValidationChip","isValid","place","absolute","closeOnFirstClick","style","textForView","variantView","colorView","setCloseClick","handleCloseChip","addEventListener","removeEventListener","chipColor","chipContainer","borderRadius","marginBottom","transitions","shortest","easing","easeInOut","transformOrigin","minHeight","breakpoints","down","chipFilled","getContrastText","action","selected","hover","chipOutlined","border","darken","chipLabel","lineHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","marginRight","flexGrow","textAlign","closeChip","cursor","fill","Fade","in","timeout","enter","exit","component","name","phone","renderText","IconButton","aria-label","onClick","NameValidation","field","answer","undefined","length","PhoneValidation","includes","TransitionsModal","colorGradient1","colorGradient2","formPhone","setFormPhone","formName","setFormName","isValidPhone","setIsValidPhone","isValidName","setIsValidName","heading","subHeading","targetText","buttonText","policy","inputName","inputPhone","inValidColor","colorButton","padding","spacing","margin","values","sm","outline","closeBtn","input","fontFamily","divider","boxShadow","shorter","borderColor","inValidInput","inValidColorFade","button","textTransform","targetContainer","maxWidth","targetLabel","closeModal","handleCloseValidationChip","Fragment","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","onSubmit","preventDefault","valphone","valname","isCheck","my","type","Button","StylesChangers","menu","maxHeight","overflowY","menuTitle","borderBottom","btnSetting","deepOrange","minWidth","btnSave","btnWithLabel","btnDrawerStyle","easeIn","btnDrawerItem","containerWrapper","outlineOffset","responseValues","responseTablets","responseMobile","mobileTooltip","tabletTooltip","dialogContentUnstyle","infoBlock","infoBtn","AddItem","newItemTitle","setNewItemTitle","newItemSlug","setNewItemSlug","id","addItem","FormGroup","mb","TextField","required","fullWidth","label","Tooltip","placement","ChangeCategory","itemPages","handleUpdatePage","ml","InputChange","memo","multiline","setIsDisableBtn","Number","CategoriesChanger","pageLayout","page","categoryLayout","category","setOpen","isDisableBtn","commonClasses","classesRef","listPages","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","addPage","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","handleUpdateCategory","categoryId","pageId","handleSave","swapCategory","direction","activeIndex","indexOf","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","DialogContent","handle","cancel","Grid","container","xs","newCategory","index","disableElevation","confirm","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","gutterBottom","mt","ColorPicker","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","boxColor","shape","short","shadows","boxPicker","iconButton","iconButtonDisabled","draggableColorTitle","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","isContrastSelect","block","defaultColor","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","RemoveImage","a","storageRef","ref","imageRef","child","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","modalTarget","setModalTarget","colorTheme","newLogo","newModal","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","mr","SelectShadow","useTheme","defaultValue","autoWidth","MenuProps","changedValue","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","newSettings","row","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","startIcon","RequestsChanger","setHeading","setSubHeading","setTargetText","setButtonText","setPolicy","setInputName","setInputPhone","amber","newData","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","innerIndex","String","CardActions","handleOnceCheck","handleRemove","Checkbox","request","setMask","setName","setPhone","setVariant","blue","ThemeSwitcher","ThemeCustomSwitch","withStyles","switchBase","darkThemeIcon","thumb","lightThemeIcon","backgroundSize","backgroundPosition","track","create","focusVisible","focusVisibleClassName","disableRipple","Desktop","menuButton","menuButtonLink","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","ListItem","ListItemText","Mobile","drawerContainer","mobileLink","menuColor","iconColor","accordionReset","drawerHeader","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","handleSignOut","content","indexPage","borderTop","px","openModal","edge","DumbComponent","backgroundHeader","widthMobile","mobileView","setMobileView","modalBtnColor","headerRef","useRef","topHeaderRef","header","fixedPadding","topHeader","logoMain","whiteSpace","logoSub","logoImage","buttonModal","linkModal","setResponsiveness","setScrollHeader","headerTop","pageYOffset","current","classList","add","remove","err","logout","createLogo","createModalBtn","renderModal","AppBar","Container","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ModalChanger","ValidationChanger","ElementCreator","Header","Footer","contrastFooter","backgroundFooter","footer","buttonToTop","handleClickToTop","Login","setPassword","setError","isRedirect","setIsRedirect","isSubmit","setIsSubmit","avatar","form","submitBtn","forgotTitle","handleChange","value1","value2","disableCheck","Avatar","loginWithEmail","res","autoComplete","autoFocus","Alert","AlertTitle","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","backgroundSelect","setBackgroundSelect","backgroundCustom","setBackgroundCustom","borderColorSelect","setBorderColorSelect","borderColorCustom","setBorderColorCustom","shadow","setShadow","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","anchorEl","setAnchorEl","propsSettings","bgTheme","borderTheme","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","newChildren","newItem","reSaveContainer","reSaveContainerStyleSettings","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","swapHeading","swapChildrens","viewCorrect","sentData","reSaveChildren","prop","isFirst","isLast","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","handleItemChange","newItems","swapItem","swapList","splice","deleteItemList","swapParagraph","imageBorderColor","imageClassName","imageStyle","imageStabilization","imageUrl","titleImg","imageBorderColorSelect","setImageBorderColorSelect","imageBorderColorCustom","setImageBorderColorCustom","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageBorderTheme","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","F","styleClass","renderItems","orderFirst","orderLast","isPaper","createArrayImages","images","forEach","swapContainer","removeContainer","newArr","colorFocusInput","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","maxWidthContainer","lighten","up","webkitMaskImage","maskImage","webkitMask","webkitMaskSize","maskSize","md","xlinkHref","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","newItemBody","setNewItemBody","handleUpdateItemHead","handleUpdateItemBody","itemLayout","Location","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","d","Phone","colorMapOnload","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","link","boxForFlex","heightRegular","linksContainer","validationChipsContainer","href","comment","cols","rows","setLocation","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableMinWidth","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isButtonShowMore","isButtonClick","setIsButtonClick","StyledTableRow","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","newItemPrice","setNewItemPrice","setRows","setTableRow","setTableMinWidth","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleTableHeadChange","newRow","handleRowChangeName","newRows","handleRowChangePrice","warningBtn","rowLayout","lineDecor","gridItem","gridValidation","SwiperCore","use","Navigation","isSwiper","setIsSwiper","slidesForViewDesktop","slidesPerView","slidesForViewTablet","slidesPerViewTablet","slidesForViewMobile","slidesPerViewMobile","spaceBetween","speed","loop","freeMode","slides","slideHeight","setSlideHeight","slideRef","swiper","activeSlide","slide","overflow","slideBox","slideImg","backgroundRepeat","slideTitle","gallery","marginRigth","getWidthViewport","actualWidth","slideHeightCalc","clientWidth","renderSlide","key","isUrl","handleSlideClick","activePage","600","960","navigation","newImageName","setNewImageName","newImageUrl","setNewImageUrl","newImageTitle","setNewImageTitle","addSlide","replace","SelectPage","SetPages","selectValue","setSelectValue","createPages","pagesArray","categorySlug","setSlidesPerView","setSlidesPerViewTablet","setSlidesPerViewMobile","setSpaceBetween","setSpeed","setLoop","setFreeMode","setSlides","imageForDelete","setImageForDelete","slideContainer","dumbSlide","dumbSlideButtons","dumbSlideTitle","tooltipReload","handleSlideTitle","newSlides","handleChangeUrl","handleChangeIsButtonTarget","swipeSlide","element","imgArray","handleChangeIsButton","handleChangeIsUrl","newImageForDelete","deletedImageName","removeSlide","colorText","paddingVertical","bannerBackground","bannerContent","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","colorButtonTheme","colorTextTheme","boxSizing","standard","newSvg","setNewSvg","idActive","setIdActive","setActivePage","selectedPage","dumbSlideSvg","handleSlideSvg","inner","setNewTitle","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","BlocksPagesLayout","blocksPages","BlocksAdvLayout","blocksAdv","setData","btnContainer","boxMenuItem","fetchData","document","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","history","RouterComponent","preloaderStatus","setPreloaderStatus","basename","path","render","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.197e19e9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 600) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isAlertSeverity: null,\r\n        alertText: '',\r\n        validationSettings: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n                validationSettings: doc.data().validationSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout(time) {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isAlertSeverity: null,\r\n                alertText: ''\r\n            })\r\n        }, time);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isAlertSeverity: 'info',\r\n            alertText: \"Your request is being processed\"\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isAlertSeverity: 'success', \r\n                alertText: 'Your request was accepted successfully'\r\n            })\r\n            this.closeAlertFromTimeout(7000)\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isAlertSeverity: 'error', \r\n                alertText: \"An error has occurred :(\"\r\n            })\r\n            this.closeAlertFromTimeout(700)\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n    async updateValidationSettings(settings) {\r\n        this.setState({\r\n            validationSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            validationSettings: settings, \r\n        }) \r\n    }\r\n\r\n    setCustomAlert(severity, text, duration) {\r\n        this.setState({  \r\n            isAlertSeverity: severity, \r\n            alertText: text\r\n        })\r\n        this.closeAlertFromTimeout(duration)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    validationSettings: this.state.validationSettings, \r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isAlertSeverity, \r\n                    modalSettings: this.state.modalSettings, \r\n                    alertText: this.state.alertText, \r\n                    \r\n                    updateValidationSettings: (settings) => {\r\n                        this.updateValidationSettings(settings)\r\n                    },\r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isAlertSeverity: null, \r\n                            alertText: ''\r\n                        }) \r\n                    }, \r\n                    setCustomAlert: (severity, text, duration) => {\r\n                        this.setCustomAlert(severity, text, duration)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 10001, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { Box, makeStyles, CircularProgress, Typography } from '@material-ui/core'\r\n   \r\nfunction PreloaderThumbnail({status}) {\r\n\r\n \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        return({\r\n            preloaderContainer: {\r\n                position: 'fixed', \r\n                zIndex: 10000, \r\n                top: 0, \r\n                left: 0, \r\n                bottom: 0, \r\n                right: 0, \r\n  \r\n                opacity: status === 'delete' ? 0 : 1,   \r\n                // backgroundColor: status === 'loading' ? '#fdfdfd' : '#d1cfe6',  \r\n                backgroundColor: theme.palette.background.default,  \r\n\r\n                transition: `400ms ease-in-out`,\r\n            },  \r\n            centeredFlexed: { \r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            },\r\n            progressCircle: {\r\n                color: \"#08bb35bf\"\r\n            },    \r\n            title: {\r\n                marginTop: 4, \r\n                fontSize: 16, \r\n                color: theme.palette.text.disabled, \r\n                fontWeight: 300 \r\n            }, \r\n            loadContainer: { \r\n                transform: status === 'loading' ? 'translateY(0)' : 'translateY(-40px)', \r\n                transition: `300ms ease-in-out`,\r\n                opacity: status === 'loading' ? 1 : 0\r\n            },\r\n            enterTitle: {\r\n                fontSize: 24, \r\n                color: theme.palette.text.disabled, \r\n                fontWeight: 300 , \r\n                transition: `300ms ease-in-out`,\r\n                transform: status === 'loading' ? 'translateY(30px)' : 'translateY(-30px)', \r\n                opacity: status === 'loading' ? 0 : 1\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n\r\n    return ( \r\n        status !== 'hide' ? \r\n        \r\n        <Box className={`${classes.preloaderContainer} ${classes.centeredFlexed}`}>\r\n            <Box className={`${classes.loadContainer} ${classes.centeredFlexed}`}>   \r\n                <CircularProgress \r\n                    size={34}\r\n                    thickness={2}  \r\n                    classes={{ circle: classes.progressCircle }} \r\n                /> \r\n                <Typography className={classes.title} variant='h3'>\r\n                    Loading\r\n                </Typography>  \r\n            </Box>\r\n            \r\n            <Typography className={classes.enterTitle} variant='h3'>\r\n                Site builder\r\n            </Typography>  \r\n        </Box> \r\n        :\r\n        null\r\n    )\r\n}\r\n\r\nexport default PreloaderThumbnail\r\n","import React, {useState, useContext} from 'react'\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst InputMaskPhone = ({value, setValue, className, placeholder}) => {\r\n\r\n    const [valueLocal, setValueLocal] = useState(value) \r\n\r\n    const { validationSettings } = useContext(SendFormContext)  \r\n    const mask = validationSettings.mask\r\n \r\n    React.useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const handleSave = () => { \r\n        setValue(valueLocal) \r\n    }\r\n\r\n    return ( \r\n        <InputMask \r\n            mask={mask}\r\n            maskPlaceholder={'_'}\r\n            alwaysShowMask={false}\r\n            className={className}\r\n            placeholder={placeholder} \r\n            value={valueLocal}\r\n            onChange={(e) => { setValueLocal(e.target.value) }}\r\n            onBlur={handleSave} \r\n        /> \r\n    )\r\n}\r\n\r\nexport default InputMaskPhone\r\n"," \r\nexport const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('contrast') : {\r\n            return 'contrast'\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        case ('default') : {\r\n            return [theme.palette.background.paper, theme.palette.background.default]\r\n        } \r\n        case ('paper') : {\r\n            return [theme.palette.background.default, theme.palette.background.paper]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.default\r\n        }\r\n        default: return color\r\n    } \r\n}\r\nexport const isNoThemeColor = (color) => {\r\n    if(\r\n        color !== 'contrast' && \r\n        color !== 'default' && \r\n        color !== 'paper' && \r\n        color !== 'primary' && \r\n        color !== 'secondary' &&\r\n        color !== 'warning' &&\r\n        color !== 'error' &&\r\n        color !== 'info' &&\r\n        color !== 'success' \r\n    ) return true \r\n    else return false \r\n}\r\n","import React , { useEffect, useContext } from 'react'\r\n\r\nimport { Box, makeStyles, IconButton, Typography, darken, Fade  } from '@material-ui/core'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'; \r\n \r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'  \r\n\r\nimport { getColorByPalette} from '../../components/functions/colorChanger/ColorCalculation'\r\n\r\nconst  ValidationChip = ({ isValid, handleClose, place, absolute, closeOnFirstClick, style, textForView, variantView, colorView}) => {\r\n  \r\n    const { validationSettings } = useContext(SendFormContext)    \r\n\r\n    const variant = variantView ? variantView : validationSettings.variant\r\n\r\n    useEffect(() => {\r\n        const setCloseClick = () => { \r\n            if(closeOnFirstClick) handleCloseChip() \r\n        }  \r\n\r\n        window.addEventListener(\"click\", setCloseClick); \r\n        window.addEventListener(\"scroll\", setCloseClick); \r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('click', setCloseClick)   \r\n            window.removeEventListener('scroll', setCloseClick)   \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    const useStyles = makeStyles( theme => {\r\n         \r\n        const chipColor = colorView ? getColorByPalette(theme, colorView) : getColorByPalette(theme, validationSettings.color)\r\n        return({\r\n            chipContainer: {\r\n                position: absolute ? 'absolute' : 'relative', \r\n                top:  absolute ? -42 : 'auto', \r\n                left: absolute ? 0 : 'auto', \r\n                right: absolute ? 0 : 'auto', \r\n                display: isValid ? 'none' : 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                borderRadius: 16, \r\n                width: '100%', \r\n                marginTop: 8, \r\n                marginBottom: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                transformOrigin: 'bottom', \r\n                minHeight: 30,   \r\n                [theme.breakpoints.down('sm')] : {\r\n                    position: 'relative', \r\n                    top: absolute ? 0 : \"inherit\",\r\n                    marginTop: 0 \r\n                }\r\n            },\r\n            chipFilled: {\r\n                backgroundColor: chipColor,\r\n                color: theme.palette.getContrastText(chipColor),\r\n                '& $closeChip': { \r\n                    backgroundColor: theme.palette.action.selected, \r\n                    '&:hover': {\r\n                        backgroundColor: theme.palette.action.hover, \r\n                    }\r\n                }\r\n            },\r\n            chipOutlined: {\r\n                backgroundColor: 'inherit', \r\n                border: `1px solid ${chipColor}`,  \r\n                color: chipColor,\r\n                '& $closeChip': { \r\n                    backgroundColor: chipColor, \r\n                    '&:hover': {\r\n                        backgroundColor: darken(chipColor), \r\n                    }\r\n                }\r\n            },\r\n            chipLabel: {\r\n                fontSize: \"0.8125rem\", \r\n                lineHeight: 1.15,\r\n                paddingTop: 3, \r\n                paddingBottom: 3, \r\n                paddingLeft: 25,\r\n                paddingRight: 25,\r\n                marginRight: 0, \r\n                flexGrow: 1, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center'\r\n                }\r\n            }, \r\n            closeChip: {\r\n                position: 'absolute',\r\n                top: 'calc(50% - 9px)', \r\n                right: 6,  \r\n                zIndex: 5, \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',   \r\n                width: 18,\r\n                cursor: \"pointer\",\r\n                height: 18, \r\n                fontSize: 15, \r\n                '& svg': {\r\n                    fill: theme.palette.getContrastText(chipColor)\r\n                }\r\n                \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles()\r\n  \r\n    const handleCloseChip = () => { \r\n        handleClose(place)\r\n    }\r\n    const renderText = () => {\r\n        if(textForView) return textForView\r\n        switch(place) {\r\n            case('name') : {\r\n                return validationSettings.name\r\n            }\r\n            case('phone') : {\r\n                return validationSettings.phone\r\n            }\r\n            default: return \"Incorrect field\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade in={!isValid} timeout={{enter: 300, exit: 0}}>\r\n            <Box className={`${classes.chipContainer} ${variant === 'outlined' ? classes.chipOutlined : classes.chipFilled}`} style={style} >\r\n                <Typography component=\"span\" className={classes.chipLabel}>\r\n                    {renderText()}    \r\n                </Typography>\r\n                <IconButton \r\n                    aria-label=\"close\" \r\n                    onClick={handleCloseChip} \r\n                    size={'small'}\r\n                    className={classes.closeChip}\r\n                >\r\n                    <CloseIcon fontSize={'inherit'} />\r\n                </IconButton>\r\n            </Box>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default ValidationChip\r\n"," \r\nexport const NameValidation = (field) => { \r\n    const answer = {\r\n        isValid: false\r\n    }\r\n    if(field !== undefined ) {\r\n        answer.isValid = field.length > 0 ? true : false \r\n    }\r\n    return answer \r\n}\r\nexport const PhoneValidation = (field) => { \r\n    const answer = {\r\n        isValid: false\r\n    }\r\n    if(field !== undefined ) {\r\n        answer.isValid = !field.includes('_') && field.length > 0 \r\n    } \r\n    return answer \r\n}\r\n \r\n","import React, {useContext, useState} from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton,  \r\n    fade,  \r\n} from '@material-ui/core';  \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport InputMaskPhone from '../functions/InputMaskPhone'\r\nimport ValidationChip from '../utilits/ValidationChip'\r\n\r\nimport { getColorByPalette, getColorByPaletteForGradient} from '../functions/colorChanger/ColorCalculation'\r\n\r\nimport { NameValidation, PhoneValidation} from '../functions/formValidation'\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings, validationSettings } = useContext(SendFormContext)\r\n  const { target, open, handleClose } = useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = useState('')\r\n  const [formName, setFormName] = useState('') \r\n  const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n  const [isValidName, setIsValidName] = useState({isValid: true})\r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone \r\n\r\n  let colorGradient1, colorGradient2, inValidColorFade\r\n  let inValidColor = validationSettings.color \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n     \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    inValidColor = getColorByPalette(theme, validationSettings.color)   \r\n      \r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1, \r\n          // background: fade(colorGradient1, 0.05), \r\n          \"&:hover\": {\r\n              // background: fade(colorGradient1, 0.05), \r\n          },\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: \"#7979792b\", \r\n        },\r\n         \r\n      },\r\n      inValidInput: {\r\n          borderColor: inValidColor, \r\n          background: inValidColorFade,  \r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n      \r\n    const valphone = PhoneValidation(formPhone) \r\n    const valname = NameValidation(formName) \r\n\r\n    if(valphone.isValid && valname.isValid) {\r\n      const sendForm = {\r\n        phone: formPhone,\r\n        name: formName,  \r\n        target: target,\r\n        place: 'modal',  \r\n        isCheck: false\r\n      }\r\n\r\n      sendRequests(sendForm)\r\n      \r\n      setFormPhone('')\r\n      setFormName('')\r\n      closeModal()\r\n    } else {\r\n      setIsValidName(valname)\r\n      setIsValidPhone(valphone)\r\n    }\r\n      \r\n  } \r\n    \r\n  const closeModal = () => { \r\n    setIsValidName({isValid: true})\r\n    setIsValidPhone({isValid: true})\r\n    handleClose()\r\n  }\r\n\r\n  const handleChangePhone = (value) => {\r\n    setFormPhone(value) \r\n    setIsValidPhone({isValid: true})\r\n  }\r\n  const handleChangeName = (value) => {\r\n    setFormName(value) \r\n    setIsValidName({isValid: true})\r\n  }\r\n\r\n  const handleCloseValidationChip = (place) => {\r\n    if(place === 'name') setIsValidName({isValid: true})\r\n    if(place === 'phone') setIsValidPhone({isValid: true})\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>  \r\n                      {\r\n                        !isValidName.isValid &&\r\n                        <ValidationChip  \r\n                          isValid={isValidName.isValid} \r\n                          handleClose={handleCloseValidationChip}\r\n                          place={'name'}\r\n                          absolute={false}\r\n                          style={{textAlign: 'center'}}\r\n                        />\r\n                      }\r\n                      {\r\n                        !isValidPhone.isValid &&\r\n                        <ValidationChip  \r\n                          isValid={isValidPhone.isValid}  \r\n                          handleClose={handleCloseValidationChip}\r\n                          place={'phone'}\r\n                          absolute={false}\r\n                          style={{textAlign: 'center'}}\r\n                        />\r\n                      }\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName}  \r\n                          variant='outlined' \r\n                          className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                          value={formName}\r\n                          onChange={ e => handleChangeName(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      \r\n                      <InputMaskPhone \r\n                          placeholder={`${inputPhone}`}   \r\n                          className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                          value={formPhone}\r\n                          setValue={handleChangePhone}\r\n                      /> \r\n                    </Box> \r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            // paddingBottom: 50,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }, \r\n        dialogContentUnstyle: {\r\n            outline: 0, \r\n            padding: 0\r\n        }, \r\n        infoBlock: {\r\n            display: \"flex\", \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1), \r\n            border: `1px solid ${theme.palette.divider}`, \r\n            '&:hover': {\r\n                borderColor: theme.palette.warning.light,  \r\n                '& $infoBtn': {\r\n                    backgroundColor: theme.palette.warning.main,   \r\n                    '& svg': {\r\n                        fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                    }\r\n                }\r\n            }, \r\n            '& h6': {\r\n                fontSize: 14, \r\n                lineHeight: 1.2\r\n            }\r\n             \r\n        },\r\n        infoBtn: {\r\n            backgroundColor: theme.palette.divider, \r\n            '&:hover': {\r\n                backgroundColor: theme.palette.warning.light,\r\n            }\r\n        },\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddItem = (props) => {\r\n\r\n    \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemSlug, setNewItemSlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(props.id !== null ) props.addItem(newItemTitle, newItemSlug, props.id)\r\n        else props.addItem(newItemTitle, newItemSlug)\r\n        \r\n        \r\n        setNewItemTitle('') \r\n        setNewItemSlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} title`} \r\n                        variant=\"outlined\" \r\n                        value={newItemTitle}\r\n                        onChange={(e) => { setNewItemTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} slug`} \r\n                        variant=\"outlined\" \r\n                        value={newItemSlug}\r\n                        onChange={(e) => { setNewItemSlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New {props.title}\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { memo, useState, useEffect } from \"react\";\r\n\r\nimport { TextField } from '@material-ui/core' \r\n \r\n\r\n\r\nconst InputChange = memo(({ id, fullWidth, required, multiline,  type, size, label, variant, value, setValue, setIsDisableBtn }) => {\r\n\r\n   \r\n    const [valueLocal, setValueLocal] = useState(value)   \r\n   \r\n    useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const save = () => { \r\n        if(valueLocal !== value) {\r\n            if(id !== null ) setValue(valueLocal, id)\r\n            else setValue(valueLocal)\r\n\r\n            setIsDisableBtn(false) \r\n        } \r\n    } \r\n    \r\n    const handleChange = (e) => {\r\n        type === 'number' ? setValueLocal(Number(e.target.value)) : setValueLocal(e.target.value)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n      \r\n    return ( \r\n        <TextField\r\n            required={required}\r\n            fullWidth={fullWidth}\r\n            type={type}\r\n            multiline={multiline}\r\n            size={size}\r\n            label={label}\r\n            variant={variant}\r\n            value={valueLocal}\r\n            onChange={handleChange}\r\n            onBlur={save}\r\n        /> \r\n    )\r\n})\r\n\r\nexport default InputChange\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddItem from './category/AddItem' \r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,\r\n    TextField,  \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('Categories Changer')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    \r\n \r\n    const handleOpen = () => {  \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting , dialogContentUnstyle } = commonClasses\r\n       \r\n        return( { \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        // setCategories(localCategories)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = JSON.parse(JSON.stringify(categories)) \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        const conf = window.confirm('Delete category?')\r\n        if(conf) {\r\n            let filtered = categories.filter((item) => (item.id !== id))  \r\n            const deleted = categories.filter( (item) => (item.id === id))\r\n            let arrayOfPagesForDelete = [] \r\n\r\n            arrayOfPagesForDelete.push(deleted[0].slug)\r\n            if(deleted[0].pages.length > 0) {\r\n                deleted[0].pages.map((item) => {\r\n                    arrayOfPagesForDelete.push(item.slug)\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            setCategories(filtered)  \r\n            deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        }  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        const conf = window.confirm('Delete page?')\r\n            if(conf) {\r\n            categories.map( category => {\r\n                if(category.id === categoryId) {  \r\n                    let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                    category.pages = filtered\r\n                }\r\n                return 0 \r\n            }) \r\n            setCategories(categories)  \r\n\r\n            deletePageFromFirebase(slug)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddItem title={'Category'} id={null} addItem={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  >  \r\n                                                            <InputChange\r\n                                                                id={item.id}\r\n                                                                fullWidth={true}\r\n                                                                required={true}\r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Category title\"\r\n                                                                variant='filled'\r\n                                                                value={item.title}\r\n                                                                setValue={handleUpdateCategory}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            <TextField\r\n                                                                type='text' \r\n                                                                label=\"Category slug (read only)\"\r\n                                                                fullWidth\r\n                                                                variant='filled'\r\n                                                                value={item.slug} \r\n                                                                disabled={true} \r\n                                                            /> \r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <Box mt={2} ml={'auto'} maxWidth={300}>\r\n                                                                        <Box mb={1} ><Typography variant='caption' gutterBottom >Add new page</Typography></Box>\r\n                                                                        <AddItem title={'Page'} id={item.id} addItem={addPage} />\r\n                                                                    </Box> \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box mt={5} />\r\n                                    {/* <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport Draggable from 'react-draggable'; \r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip, Typography } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'contrast' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.short}ms ${theme.transitions.easing.easeInOut} `, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[2]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -290, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }, \r\n            draggableColorTitle: {\r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                padding: theme.spacing(1, 2), \r\n                backgroundColor: theme.palette.background.default, \r\n                cursor: 'move'\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                   \r\n                        <Draggable  handle=\"#draggable-color\"  >\r\n                            <Box className={classes.boxPicker}> \r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.draggableColorTitle}\r\n                                    id=\"draggable-color\"\r\n                                >\r\n                                    Set color <OpenWithIcon/>\r\n                                </Typography>\r\n                                <ChromePicker \r\n                                    color={ color }\r\n                                    onChangeComplete={ handleChange } \r\n                                />\r\n                            </Box>\r\n                        </Draggable>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit, isContrastSelect }) {\r\n    \r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        },\r\n        defaultColor: {\r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        paper: { \r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success, defaultColor , paper } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'default'}>\r\n                        Default Background\r\n                        <Box className={`${block} ${defaultColor}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'paper'}>\r\n                        Paper Background\r\n                        <Box className={`${block} ${paper}`} />\r\n                    </MenuItem>\r\n                    {   \r\n                        isContrastSelect &&\r\n                        <MenuItem style={{position: 'relative'}} value={'contrast'}>\r\n                            Contrast (about Background)\r\n                        </MenuItem>\r\n                    }\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","  \r\nimport firebase from '../../firebase/firebase'\r\n \r\nconst RemoveImage = async (name) => { \r\n    console.log(name)\r\n    if(name !== '') {\r\n        const storageRef = firebase.storage.ref();\r\n\r\n        const imageRef = storageRef.child(name)\r\n    \r\n        try {\r\n            await imageRef.delete().then(function() {\r\n                console.log('File deleted successfully')\r\n            }).catch(function(error) {\r\n                console.log(error) \r\n            }); \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }  \r\n} \r\n\r\nexport { RemoveImage }\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch, \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n    \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n    const [modalTarget, setModalTarget] = React.useState(modal.target || 'buy') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(modal.color) \r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [modal])\r\n\r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText, \r\n            target: modalTarget\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        RemoveImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => { \r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Logo/Modal Settings  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained' \r\n                                        className={classes.btnWithLabel}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    /> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <Box mr={1} display='inline'>\r\n                                                    <TextField\r\n                                                        type='text'\r\n                                                        label=\"Text for Button\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={modalText}\r\n                                                        onChange={(e) => {\r\n                                                        setIsDisableBtn(false);\r\n                                                        setModalText(e.target.value)\r\n                                                    }}/>  \r\n                                                </Box> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Target for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalTarget}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalTarget(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","import React from 'react'\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst SelectShadow =  ({variant, size, className, label, value, setValue, setIsDisableBtn}) => {\r\n    \r\n   \r\n    const theme = useTheme(); \r\n    const handleChange = (changedValue) => {\r\n        setValue(changedValue)\r\n        setIsDisableBtn(false)\r\n    }\r\n   \r\n    return ( \r\n        <FormControl  \r\n            variant={variant}\r\n            size={size}   \r\n            className={className}\r\n        >\r\n            <InputLabel id=\"Shadow-style-label\">{label}</InputLabel>\r\n            <Select\r\n                labelId=\"Shadow-label\"\r\n                id=\"Shadow-style\"\r\n                defaultValue={'none'}\r\n                value={value} \r\n                autoWidth={true}\r\n                MenuProps={{style: {maxHeight: 400}}}\r\n                onChange={(e) => {handleChange(e.target.value) }}\r\n            > \r\n                {\r\n                    theme.shadows.map( (item, index) => {\r\n                        const title = item === 'none' ? 'None' : `Shadow - ${index}`\r\n                        return <MenuItem value={item}>{title}</MenuItem>\r\n                    })\r\n                } \r\n            </Select>\r\n        </FormControl> \r\n    )\r\n}\r\n\r\nexport default SelectShadow\r\n","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport SelectShadow from '../../functions/SelectShadow'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n    IconButton\r\n} from '@material-ui/core' \r\n\r\nimport {InfoOutlined} from '@material-ui/icons'; \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(settings.classes.backgroundColor) \r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [settings])\r\n     \r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle, infoBtn, infoBlock } = commonClasses\r\n        \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true) \r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style Header</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                               { !isDisableBtn && \"Close to save - \" }  Header Style Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <SelectShadow\r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                        label='Header shadow'\r\n                                        value={settingBoxShadow}\r\n                                        setValue={setSettingBoxShadow}\r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                    />\r\n                                    \r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                        <ColorSelecter\r\n                                            label={'Background for Header'}\r\n                                            colorSelect={settingBackgroundSelect} \r\n                                            setColorSelect={setSettingBackgroundSelect}\r\n                                            colorCustom={settingBackgroundCustom}\r\n                                            setColorCustom={setSettingBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        />\r\n                                             \r\n                                        </Box>\r\n                                        <Box className={classes.infoBlock} mt={2}> \r\n                                            <Box mr={1}>  \r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton> \r\n                                            </Box>\r\n                                            <Box>\r\n                                                <Typography variant='h6'>\r\n                                                    Max Width , Fixed  and Disable Gutters settings also share for footer \r\n                                                </Typography>   \r\n                                            </Box>\r\n                                        </Box>\r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../functions/colorChanger/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = React.useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = React.useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = React.useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = React.useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = React.useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = React.useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = React.useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = React.useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }, \r\n            dialogContentUnstyle: dialogContentUnstyle\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport InputChange from '../../functions/InputChange'\r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n     \r\n    const colorTheme = isNoThemeColor(modalSettings.colorButton)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: amber[700],  \r\n                }\r\n            }},  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}> \r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Heading\" \r\n                                    variant='outlined'\r\n                                    value={heading}\r\n                                    setValue={setHeading}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Sub Heading\"\r\n                                    variant='outlined'\r\n                                    value={subHeading}\r\n                                    setValue={setSubHeading}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Target text\" \r\n                                    variant='outlined'\r\n                                    value={targetText}\r\n                                    setValue={setTargetText}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Input Name text\" \r\n                                    variant='outlined'\r\n                                    value={inputName}\r\n                                    setValue={setInputName}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Input Phone text\" \r\n                                    variant='outlined'\r\n                                    value={inputPhone}\r\n                                    setValue={setInputPhone}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Button text\" \r\n                                    variant='outlined'\r\n                                    value={buttonText}\r\n                                    setValue={setButtonText}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Policy text\" \r\n                                    variant='outlined'\r\n                                    value={policy}\r\n                                    setValue={setPolicy}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: amber[700],  \r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {   \r\n        const conf = window.confirm('Delete request?') \r\n        if(conf) {\r\n            const newReq = localRequests.slice()\r\n            const filtered = newReq.filter(item => ( item.time !== id ))\r\n    \r\n            setLocalRequests(filtered)\r\n            setIsDisableBtn(false) \r\n        }\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    IconButton,\r\n    MenuItem, \r\n    FormControl,\r\n    Select, \r\n    InputLabel\r\n} from '@material-ui/core' \r\nimport {InfoOutlined} from '@material-ui/icons'; \r\n\r\nimport { blue } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\n\r\nimport InputChange from '../../functions/InputChange'\r\nimport ValidationChip from '../../utilits/ValidationChip'\r\n\r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { validationSettings, updateValidationSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mask, setMask] = React.useState(validationSettings.mask || '')  \r\n    const [name, setName] = React.useState(validationSettings.name || '')\r\n    const [phone, setPhone] = React.useState(validationSettings.phone || '')\r\n    const [variant, setVariant] = React.useState(validationSettings.variant || 'filled')\r\n    const [colorSelect,  setColorSelect] = React.useState(validationSettings.color || 'error')\r\n    const [colorCustom, setColorCustom] = React.useState(validationSettings.color || 'error')\r\n\r\n    const colorTheme = isNoThemeColor(validationSettings.color) \r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [validationSettings.color])  \r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    const handleChangeVariant = (value) => {\r\n        setVariant(value)\r\n    }\r\n         \r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle, infoBlock, infoBtn } = commonClasses\r\n \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: blue[700], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: blue[500], \r\n                },\r\n            }},  \r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn,  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, validationSettings) \r\n         \r\n        newData.mask = mask \r\n        newData.name = name \r\n        newData.phone = phone \r\n        newData.variant = variant \r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateValidationSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Validation Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Validation</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Validation Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Error text for Name input'\r\n                                    variant='outlined'\r\n                                    value={name}\r\n                                    setValue={setName}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Error text for Phone input'\r\n                                    variant='outlined'\r\n                                    value={phone}\r\n                                    setValue={setPhone}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Mask Phone input'\r\n                                    variant='outlined'\r\n                                    value={mask}\r\n                                    setValue={setMask}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                                \r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'top'}\r\n                                    noInherit={true}\r\n                                />\r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'    \r\n                                >\r\n                                    <InputLabel id=\"variant-style-label\">Variant</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"variant-label\"\r\n                                        id=\"variant-style\"\r\n                                        value={variant}\r\n                                        style={{minWidth: 180}}\r\n                                        onChange={(e) => {setIsDisableBtn(false); handleChangeVariant(e.target.value) }}\r\n                                    > \r\n                                        <MenuItem value={'filled'}>Filled</MenuItem> \r\n                                        <MenuItem value={'outlined'}>Outlined</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box> \r\n                            <Box className={classes.infoBlock}> \r\n                                <Box mr={1}>  \r\n                                    <IconButton className={classes.infoBtn} >\r\n                                        <InfoOutlined/>\r\n                                    </IconButton> \r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography>\r\n                                        Validation Setting is common for all fields on site\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Enter the mask in the format \"+7 (999) 999-99-99\", where 9 is any number  \r\n                                    </Typography> \r\n                                    <ValidationChip \r\n                                        textForView={name} \r\n                                        variantView={variant} \r\n                                        colorView={colorSelect === 'custom' ? colorCustom : colorSelect} \r\n                                        isValid={false} \r\n                                        handleClose={() => {}} \r\n                                        absolute={false} \r\n                                        closeOnFirstClick={false}\r\n                                    />\r\n                                    <ValidationChip \r\n                                        textForView={phone} \r\n                                        variantView={variant} \r\n                                        colorView={colorSelect === 'custom' ? colorCustom : colorSelect} \r\n                                        isValid={false} \r\n                                        handleClose={() => {}} \r\n                                        absolute={false} \r\n                                        closeOnFirstClick={false}\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","export default __webpack_public_path__ + \"static/media/half-moon.4946e6c2.svg\";","export default __webpack_public_path__ + \"static/media/sun.b7c92f87.svg\";","import React from 'react'\r\n\r\nimport {  \r\n    FormControlLabel, \r\n    Switch,\r\n    withStyles\r\n} from \"@material-ui/core\"; \r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n \r\nimport darkThemeIcon from '../../../assets/icons/half-moon.svg'\r\nimport lightThemeIcon from '../../../assets/icons/sun.svg' \r\n\r\nfunction ThemeSwitcher() {\r\n\r\n    const { setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n    \r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const ThemeCustomSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 60,\r\n          height: 28,\r\n          padding: 0, \r\n          marginRight: 5\r\n        },\r\n        switchBase: {\r\n          padding: 1,  \r\n          '&$checked': {\r\n            transform: 'translateX(32px)',\r\n            color: '#27536b',\r\n            '& + $track': {\r\n              backgroundColor: '#27536b',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n            '&  $thumb': { \r\n              opacity: 1,\r\n              border: 'none',\r\n              backgroundImage: `url(${darkThemeIcon})`\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869', \r\n          },\r\n        },\r\n        thumb: {\r\n          width: 26,\r\n          height: 26,\r\n          backgroundImage: `url(${lightThemeIcon})`,\r\n          backgroundSize: '28px',\r\n          backgroundPosition: 'center',  \r\n        },\r\n        track: {\r\n          borderRadius: 28 / 2,\r\n          border: `1px solid #a3d4ff`,\r\n          backgroundColor: '#a3d4ff',\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n    return ( \r\n        <FormControlLabel\r\n            control={<ThemeCustomSwitch checked={checked} onChange={handleChange} name=\"checkedB\" />}\r\n            label={checked ? 'Night Mode' : 'Light Mode'}\r\n        /> \r\n    ) \r\n}\r\n\r\nexport default ThemeSwitcher\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                // paddingLeft: 10, \r\n                // paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n    Button\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nconst Mobile = (props) => { \r\n \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: props.menuColor,\r\n                    color: props.iconColor\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            drawerHeader: {\r\n                margin: theme.spacing(1, 2), \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                '& .log-button': {\r\n                    minWidth: 100\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset, drawerHeader } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n    const handleModal = () => {\r\n        handleDrawerClose()\r\n        props.openModal()\r\n    }\r\n\r\n    return (\r\n        <Toolbar disableGutters style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box className={drawerHeader}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {\r\n                            props.user ? \r\n                            <Button \r\n                                size='medium'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={ () => { props.handleSignOut(); handleDrawerClose()  } }\r\n                                className={'log-button'}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                            :\r\n                            <NavLink to='/login' onClick={handleDrawerClose}>\r\n                                <Button  \r\n                                    color='primary' \r\n                                    variant=\"contained\"\r\n                                    size='medium'\r\n                                    className={'log-button'} \r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </NavLink>\r\n                        }\r\n                        \r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={3} width={'100%'} clone={true} onClick={handleModal}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box px={3} my={2} >\r\n                        <Box  width={'100%'} clone={true} >\r\n                            <ThemeSwitcher/>\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"default\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon style={{color: props.iconColor}} />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n   \r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button, \r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\n\r\nimport { getColorByPalette } from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { user } = React.useContext(ModeContext)\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings } = React.useContext(CategoryContext)    \r\n    \r\n    const [mobileView, setMobileView] = useState(true); \r\n   \r\n    let backgroundHeader\r\n    let colorHeader \r\n    let hoverActiveLinkColor \r\n  \r\n    let modalBtnColor = modal.color  \r\n\r\n    let widthMobile \r\n     \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`] \r\n        modalBtnColor= getColorByPalette(theme, modal.color)  \r\n\r\n        backgroundHeader = getColorByPalette(theme, settings.classes.backgroundColor) \r\n\r\n        hoverActiveLinkColor = darken(backgroundHeader, 0.3)\r\n        colorHeader =  theme.palette.getContrastText(backgroundHeader)  \r\n \r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n               \r\n                top: 0,  \r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n                '&.sticky' : {\r\n                    transform: \"translateY(-41px)\",\r\n                    [`@media (max-width: ${widthMobile}px)`]: {\r\n                        transform: \"translateY(0px)\",\r\n                    }\r\n                }\r\n            },\r\n            fixedPadding: { \r\n                minHeight: 100 + settings.classes.paddingY*2 , \r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    minHeight: 60 + settings.classes.paddingY , \r\n                },\r\n            },\r\n            topHeader: {   \r\n                height: '100%', \r\n                paddingTop: 5, \r\n                paddingBottom: 5,  \r\n                backgroundColor:  \"rgba(0, 0, 0, 0.16)\" , \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `,  \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 700,\r\n                fontSize: 22,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundColor: modalBtnColor,   \r\n                color: theme.palette.getContrastText(modalBtnColor), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': {  \r\n                    backgroundColor: darken(modalBtnColor, .3) , \r\n                }\r\n            }, \r\n            linkModal: {  \r\n                textTransform: 'inherit', \r\n                color: colorHeader, \r\n                padding: theme.spacing(0.5, 1.2),\r\n                '&:hover': { \r\n                    backgroundColor: modalBtnColor, \r\n                    color: theme.palette.getContrastText(modalBtnColor), \r\n                    cursor: 'pointer'\r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, linkModal, topHeader} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {  \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            if(mobileView) {\r\n                const headerTop =  window.pageYOffset \r\n                try {\r\n                    if( headerTop > 1 ) {\r\n                        headerRef.current.classList.add('sticky')\r\n                    } else {\r\n                        headerRef.current.classList.remove('sticky')\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                } \r\n            }\r\n        } \r\n        setResponsiveness(); \r\n        setScrollHeader();\r\n\r\n        window.addEventListener(\"resize\", setResponsiveness);\r\n        window.addEventListener(\"scroll\", setScrollHeader);\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', setResponsiveness) \r\n            window.removeEventListener('scroll', setScrollHeader) \r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n     \r\n\r\n    const openModal = () => { \r\n        handleOpen(modal.target) \r\n    }\r\n\r\n    const handleSignOut = () => { \r\n        firebase.logout()\r\n        setCustomAlert('warning', 'You are logged out successfully', 3000)\r\n    }\r\n  \r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n    const topHeaderModalBtn = () => ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            className={linkModal}\r\n            size='small' \r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                    { \r\n                        !mobileView &&\r\n                        <Box className={topHeader} ref={topHeaderRef} >\r\n                            <Container \r\n                                disableGutters={settings.disableGutters}\r\n                                fixed={settings.fixed} \r\n                                maxWidth={settings.maxWidth}  \r\n                            > \r\n                                <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n                                    {  modal.isModal ? topHeaderModalBtn() : ( <span></span> ) }\r\n                                    <Box display='flex' alignItems='center' >\r\n                                        \r\n                                        <ThemeSwitcher/>\r\n                                        \r\n                                        {\r\n                                            user ?\r\n                                            <Button \r\n                                                size='small'\r\n                                                color='secondary' \r\n                                                variant={'contained'} \r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                            :\r\n                                            <NavLink to='/login'>\r\n                                                <Button \r\n                                                    color='default' \r\n                                                    variant=\"outlined\"\r\n                                                    size='small'\r\n                                                >\r\n                                                    Login\r\n                                                </Button>\r\n                                            </NavLink>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Box>\r\n                    }\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop   \r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            openModal={openModal}\r\n                            iconColor={colorHeader}  \r\n                            menuColor={backgroundHeader}  \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                            user={user}\r\n                            handleSignOut={handleSignOut}\r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ValidationChanger from './headerHelpers/ValidationChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\n\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: open ? 1 : 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 10, \r\n            top: 5, \r\n            width: 60, \r\n            height: 60,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            textAlign: 'center' ,\r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.headerContainer}>\r\n  \r\n            <div>   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >   \r\n                    {open ? 'close' : 'open' }\r\n                    <br/>\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <RequestsChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ValidationChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles, Box, Typography, Container, IconButton, Tooltip, darken } from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nimport { getColorByPalette } from '../functions/colorChanger/ColorCalculation'\r\n\r\nfunction Footer() {\r\n\r\n    const { logo, settings } = React.useContext(CategoryContext)\r\n \r\n    let backgroundFooter = settings.classes.backgroundColor\r\n    let contrastFooter\r\n    let hoverActiveLinkColor\r\n     \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        backgroundFooter = getColorByPalette(theme, backgroundFooter) \r\n        contrastFooter = theme.palette.getContrastText(backgroundFooter)\r\n        hoverActiveLinkColor = darken(backgroundFooter, 0.3)\r\n\r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n\r\n        return({ \r\n            footer: {\r\n                backgroundColor: backgroundFooter, \r\n                padding: theme.spacing(3, 0)\r\n            }, \r\n            logoMain: { \r\n                color: contrastFooter,\r\n                fontWeight: 700,\r\n                fontSize: 25, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                color: contrastFooter,\r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 70, \r\n                height: 50, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 45, \r\n                    height: 30, \r\n                },\r\n            },  \r\n            buttonToTop: {\r\n                '&:hover': {\r\n                    backgroundColor: hoverActiveLinkColor\r\n                }\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n \r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none', display: 'inline-block'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={classes.logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={classes.logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={classes.logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n    const buttonToTop = () => (\r\n        <Tooltip title='To Top' placement='top' >\r\n            <IconButton \r\n                className={classes.buttonToTop}  \r\n                onClick={handleClickToTop}\r\n            >\r\n                <KeyboardArrowUpIcon style={{fill: contrastFooter}}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n    const handleClickToTop = () => {\r\n        window.scrollTo({\r\n            top: 0, \r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container \r\n                maxWidth={settings.maxWidth}\r\n                fixed={settings.fixed}\r\n                disableGutters={settings.disableGutters}\r\n            > \r\n                <Box display='flex' alignItems=\"center\" justifyContent='space-between'>\r\n                    { createLogo() }\r\n                    { buttonToTop() }\r\n                </Box>\r\n                 \r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../../firebase/firebase' \r\n\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext' \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext' \r\n \r\nimport { Avatar, Button, TextField, Box, Container, CircularProgress, Typography, Tooltip } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert, AlertTitle } from '@material-ui/lab'; \r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n    const { user } = React.useContext(ModeContext) \r\n \r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isSubmit, setIsSubmit] = React.useState(false)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        if(user) setIsRedirect(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          marginBottom: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: isSubmit ? theme.palette.primary.main : theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submitBtn: {  \r\n            minHeight: 55\r\n        },\r\n        forgotTitle: {\r\n            textAlign: 'center'\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const disableCheck = ({value1, value2}) => { \r\n        console.log(value1, value2)\r\n        if(value1 !== '' && value2 !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)   \r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        setError(null)\r\n        disableCheck({\r\n            value1: value, \r\n            value2: place === 'name' ? password : name\r\n        })\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsLoading(true)\r\n        setIsDisableBtn(true)\r\n        setIsSubmit(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n            setIsSubmit(false) \r\n            setCustomAlert('success', `Hello, ${res.user.email}. Now you can change site`, 7000)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n            setIsSubmit(false)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        { isSubmit ? <CircularProgress size={25} style={{color: '#fff'}} /> : <LockOutlinedIcon /> }\r\n                    </Avatar> \r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                autoComplete='true'\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'name')} }\r\n                            />\r\n                        </Box>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'password')} }\r\n                            />\r\n                        </Box>\r\n                        {\r\n                            error && \r\n                            <Box mb={2} >\r\n                                <Alert severity=\"error\"> \r\n                                    <AlertTitle>Error</AlertTitle>\r\n                                    {error.message}\r\n                                </Alert>\r\n                            </Box>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submitBtn}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                        \r\n                    <Box mt={2} >\r\n                        <Tooltip title=\"It's your problem\" placement='top'>\r\n                            <Typography variant='caption' className={classes.forgotTitle}>\r\n                                Forgot Password? \r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/' style={{color: 'inherit'}}>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5, \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\nimport Draggable from 'react-draggable'; \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\nimport SelectShadow from '../../functions/SelectShadow';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    const [borderColorSelect,  setBorderColorSelect] = React.useState(props.data.classes.borderColor || 'inherit')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor || 'inherit')\r\n \r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false ) \r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer\r\n    }\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor])\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n        \r\n        return ({   \r\n            dialogContentUnstyle:dialogContentUnstyle, \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                // maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,  \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        if (backgroundSelect === 'custom') { myClassName.backgroundColor = backgroundCustom }\r\n        else { myClassName.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { myClassName.color = colorCustom } \r\n        else { myClassName.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { myClassName.borderColor = borderColorCustom } \r\n        else { myClassName.borderColor = borderColorSelect }\r\n\r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true);  \r\n    } \r\n\r\n    const handleClose = () => {\r\n        if(!isDisableBtn)reSaveClassesSettings()\r\n        props.handleClose()\r\n    } \r\n    \r\n    \r\n    \r\n \r\n    return (\r\n        <Box >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"For correct margin inside conteiner recomended:   display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Top'\r\n                                        variant='filled'\r\n                                        value={margin.top}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Bottom'\r\n                                        variant='filled'\r\n                                        value={margin.bottom}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Top\" \r\n                                        variant='filled'\r\n                                        value={padding.top}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Bottom\" \r\n                                        variant='filled'\r\n                                        value={padding.bottom}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} > \r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={backgroundSelect} \r\n                                    setColorSelect={setBackgroundSelect}\r\n                                    colorCustom={backgroundCustom}\r\n                                    setColorCustom={setBackgroundCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                />  \r\n                            </Box>\r\n                        </Box>\r\n                        <Box  className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Color'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                    isContrastSelect={true}\r\n                                />   \r\n                                {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                            </Box> \r\n                        </Box>\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Border Color'}\r\n                                    colorSelect={borderColorSelect} \r\n                                    setColorSelect={setBorderColorSelect}\r\n                                    colorCustom={borderColorCustom}\r\n                                    setColorCustom={setBorderColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false} \r\n                                />  \r\n                            </Box> \r\n                        </Box>\r\n                         \r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <SelectShadow\r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                                label='Shadow'\r\n                                value={shadow}\r\n                                setValue={setShadow}\r\n                                setIsDisableBtn={setIsDisableBtn}\r\n                            /> \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Radius\" \r\n                                        variant='filled'\r\n                                        value={borderRadius}\r\n                                        setValue={setBorderRadius}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Width\" \r\n                                        variant='filled'\r\n                                        value={borderWidth}\r\n                                        setValue={setBorderWidth}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box mt={5} />\r\n                        {/* <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box> */}\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} ,\r\n            resposiveFontSize: { \r\n                [`@media (max-width: 960px)`]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.8 : 20, \r\n                    marginTop: props.className.marginTop*0.8,\r\n                    marginBottom: props.className.marginBottom*0.8\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                    lineHeight : 1.2, \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n             \r\n          })\r\n    } );\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren.length > 0) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n        else {\r\n            return `(No text - ${props.data.variant})`\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent,\r\n    ButtonGroup,\r\n    FormGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n \r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n          \r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            // btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n            tooltip: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.primary.main\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n \r\n\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        // handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    const swapHeading = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const viewCorrect = props.data.classes.display !== 'block' ? `(uncorrect view for ${props.data.classes.display} display)` : ''\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    { !isDisableBtn && \"Close to save - \" } Heading - {props.data.variant} Settings <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <InputChange\r\n                                        id={null}\r\n                                        fullWidth={true}\r\n                                        multiline={true}\r\n                                        type='text'\r\n                                        size=\"medium\" \r\n                                        label=\"Text input\"\r\n                                        variant='standard'\r\n                                        value={textInDumb}\r\n                                        setValue={setTextInDumb}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />      \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip classes={{tooltip: classes.tooltip}}  title=\"If enabled, the type will be smaller on mobile devices and the alignment will be centered\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.8 : 20 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={display}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'block'}>Block</MenuItem> \r\n                                            <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                            <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                            <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>  \r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='filled'\r\n                                                value={margin.top}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={margin.bottom}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Left'\r\n                                                variant='filled'\r\n                                                value={margin.left}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Right'\r\n                                                variant='filled'\r\n                                                value={margin.right}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top\" \r\n                                                variant='filled'\r\n                                                value={padding.top}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Bottom\" \r\n                                                variant='filled'\r\n                                                value={padding.bottom}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Left\" \r\n                                                variant='filled'\r\n                                                value={padding.left}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Right\" \r\n                                                variant='filled'\r\n                                                value={padding.right}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Background'}\r\n                                            colorSelect={backgroundSelect} \r\n                                            setColorSelect={setBackgroundSelect}\r\n                                            colorCustom={backgroundCustom}\r\n                                            setColorCustom={setBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                            isContrastSelect={true} \r\n                                        /> \r\n                                        {\r\n                                            backgroundCustom === 'inherit' &&\r\n                                            colorSelect === 'contrast' && \r\n                                            <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>\r\n                                        } \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Font Size\" \r\n                                                variant='filled'\r\n                                                value={fontSize}\r\n                                                setValue={setFontSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Line Height (em)\" \r\n                                                variant='filled'\r\n                                                value={lineHeight}\r\n                                                setValue={setLineHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                     \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={borderRadius}\r\n                                                setValue={setBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={borderWidth}\r\n                                                setValue={setBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber} >   \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={borderColorSelect} \r\n                                                setColorSelect={setBorderColorSelect}\r\n                                                colorCustom={borderColorCustom}\r\n                                                setColorCustom={setBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                                {/* <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box> */}\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                        \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        \r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,   \r\n            }},  \r\n            liClass: props.data.itemsStyle,\r\n            mobileClass: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                    marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                    paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n                } \r\n            }\r\n          })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n                {\r\n                    props.data.items.length === 0 &&\r\n                    <li className={classes.liClass} >No items</li>\r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid,  \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n     \r\n    const [colorSelect, setColorSelect] = React.useState(props.data.classes.color || 'inherit') \r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft,  \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n        if(colorSelect === 'custom') {\r\n            sentData.classes.color = colorCustom\r\n        } else {\r\n            sentData.classes.color = colorSelect\r\n        }\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (value, index) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItemList = (index) => { \r\n        let conf = window.confirm(\"Delete item?\");\r\n        if(conf) {\r\n            let newItems = items.slice()\r\n            newItems.splice(index, 1)\r\n             \r\n            setItems(newItems) \r\n            setIsDisableBtn(false)\r\n        } \r\n    } \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    } \r\n    const swapList = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>  \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Block Padding Left\" \r\n                                            variant='filled'\r\n                                            value={paddingLeft}\r\n                                            setValue={setPaddingLeft}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Item Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={itemsPadding}\r\n                                            setValue={setItemsPadding}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                </Box>\r\n                                 \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n \r\n                                       \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >\r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"left\"\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} alignItems='flex-start' p={1} > \r\n                                                <InputChange\r\n                                                    id={index}\r\n                                                    fullWidth={true}\r\n                                                    multiline={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant='outlined'\r\n                                                    value={item}\r\n                                                    setValue={handleItemChange}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                />  \r\n                                                <Box mr={0.5} />\r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItemList(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <Box px={1}>\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='text'\r\n                                        label={`New Item`} \r\n                                        variant=\"outlined\" \r\n                                        size='small'  \r\n                                        value={newItem}\r\n                                        onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                    />\r\n                                    <Box my={1}>\r\n                                        <Button \r\n                                            onClick={handleAddItem}\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            disabled={newItem.length > 0 ? false : true}\r\n                                        >\r\n                                            Add new item\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box mt={5} />\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` list margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` list margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                            \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor) \r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }}   \r\n        })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren.length !== 0 ? props.textChildren : '(No text - paragraph)'\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)     \r\n\r\n        const { menu, menuTitle, responseValues, responseMobile, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right, \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n      \r\n     \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)   \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)   \r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />     \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >   \r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box> \r\n                                    \r\n                            </Box>\r\n\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                            </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                              \r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box> */}\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        let  imageBorderColor = getColorByPalette(theme, props.imageClassName.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} , \r\n            imageStyle: props.imageClassName ? {...props.imageClassName, ...{ \r\n                borderColor: imageBorderColor\r\n            }} : {} ,  \r\n            imageStabilization: {\r\n                maxWidth: '100%', \r\n                maxHeight: '100%',  \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    height: 'auto'\r\n                }, \r\n                // [theme.breakpoints.down('md')]: { \r\n                // }\r\n            },\r\n            mobileClass: {\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    textAlign: 'center', \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5,\r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n            }\r\n          })\r\n    }); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext'  \r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    ButtonGroup, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n    const [imageBorderColorSelect, setImageBorderColorSelect] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderColorCustom, setImageBorderColorCustom] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n  \r\n    // eslint-disable-next-line\r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n     \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n \r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    const imageBorderTheme = isNoThemeColor(props.data.image.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        if(imageBorderTheme) {  \r\n            setImageBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor, props.data.image.classes.borderColor ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius,  \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        if (imageBorderColorSelect === 'custom') { sentData.classes.borderColor = imageBorderColorCustom } \r\n        else { sentData.classes.borderColor = imageBorderColorSelect }\r\n\r\n\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            RemoveImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }\r\n     \r\n    \r\n    const handleImageUpload = async (e) => { \r\n        RemoveImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Image Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />   \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <InputChange\r\n                                                    id={null} \r\n                                                    fullWidth={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label=\"Image title\" \r\n                                                    variant='filled'\r\n                                                    value={imageTitle}\r\n                                                    setValue={setImageTitle}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                /> \r\n                                                 \r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Top'\r\n                                                variant='filled'\r\n                                                value={imageMargin.top}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={imageMargin.bottom}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Left'\r\n                                                variant='filled'\r\n                                                value={imageMargin.left}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Right'\r\n                                                variant='filled'\r\n                                                value={imageMargin.right}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Width'\r\n                                                variant='filled'\r\n                                                value={imageWidth}\r\n                                                setValue={setImageWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Height'\r\n                                                variant='filled'\r\n                                                value={imageHeight}\r\n                                                setValue={setImageHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} > \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={imageBorderColorSelect} \r\n                                                setColorSelect={setImageBorderColorSelect}\r\n                                                colorCustom={imageBorderColorCustom}\r\n                                                setColorCustom={setImageBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={imageBorderRadius}\r\n                                                setValue={setImageBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={imageBorderWidth}\r\n                                                setValue={setImageBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                 \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            \r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            F = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                                 \r\n\r\n\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            \r\n                            <Box mt={5} />\r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                 */}\r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer } onClick={handleOpen}>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem } \r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n  \r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const {modeDev} = React.useContext(ModeContext)\r\n \r\n    console.log('dumb container work') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.classes.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.classes.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.classes.borderColor)\r\n\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n             myClassName: {...props.classes, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor \r\n            }} ,   \r\n            styleClass: { \r\n                [`@media (max-width: 960px)`]: { \r\n                    marginTop: props.classes.marginTop*0.8,\r\n                    marginBottom: props.classes.marginBottom*0.8, \r\n                    paddingTop: props.classes.paddingTop*0.8,\r\n                    paddingBottom: props.classes.paddingBottom*0.8,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    marginTop: props.classes.marginTop*0.5,\r\n                    marginBottom: props.classes.marginBottom*0.5,  \r\n                    paddingTop: props.classes.paddingTop*0.5,\r\n                    paddingBottom: props.classes.paddingBottom*0.5,\r\n                },\r\n            }, \r\n        })\r\n    });\r\n    const classes = useStyles(); \r\n \r\n    const renderItems = () => { \r\n        return (\r\n            modeDev ?\r\n            props.data.children.map((item) => {   \r\n                // eslint-disable-next-line\r\n                let orderFirst = props.data.children.indexOf(item) == 0 ? true : false\r\n                // eslint-disable-next-line\r\n                let orderLast = props.data.children.indexOf(item) == props.data.children.length - 1 ? true : false\r\n\r\n                switch(item.type) {  \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens} \r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )\r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )  \r\n                    default: break;\r\n                }  \r\n                return null\r\n            })\r\n            :\r\n            props.data.children.map((item) => {  \r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    default: break;\r\n                }  \r\n                return null\r\n            }) \r\n        )\r\n    }\r\n    return ( \r\n        <Container  \r\n            maxWidth={props.settings.maxWidth} \r\n            fixed={props.settings.fixed} \r\n            disableGutters={props.settings.disableGutters} \r\n            className={`${classes.myClassName} ${classes.styleClass}  `}\r\n        > \r\n            {  \r\n                props.settings.innerContainer && \r\n                <Container\r\n                    maxWidth={props.settings.innerContainer}\r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                >\r\n                        { renderItems() }\r\n                </Container>\r\n            }\r\n            {  \r\n                !props.settings.innerContainer && \r\n                <React.Fragment>\r\n                        { renderItems() }\r\n                </React.Fragment>\r\n            }\r\n            \r\n        </Container>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext' \r\n \r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)    \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                RemoveImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    const swapChildrens = (direction, id) => {  \r\n\r\n        let newChildren = props.data.children.slice() \r\n        let activeIndex  \r\n        newChildren.map( (item) => { \r\n            if(item.id === id) {\r\n              activeIndex = newChildren.indexOf(item) \r\n            }\r\n            return 0 \r\n        }) \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newChildren.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex - 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex + 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex + 1 ] = movedItem  \r\n        } \r\n \r\n        props.reSaveContainer(props.data.id, newChildren)\r\n    }\r\n\r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                        swapChildrens={swapChildrens}\r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useState, useContext} from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken, fade, lighten } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone'\r\n\r\nimport ValidationChip from '../../utilits/ValidationChip'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = useState(false)\r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput, inValidColor\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07),\r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                }, \r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                }\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles() \r\n     \r\n \r\n    const handleSubmit = (event) => {\r\n        \r\n        event.preventDefault() \r\n          \r\n        const valphone = PhoneValidation(formPhone)  \r\n        if(valphone.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                place: 'main page',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setIsDisableBtn(false) \r\n            setFormPhone('')\r\n        } else {\r\n            setIsValidPhone(valphone)\r\n        }\r\n        \r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n    }\r\n    const handleCloseValidationChip = (place) => { \r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n      }\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={7} >\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            {\r\n                                                !isValidPhone.isValid && \r\n                                                <ValidationChip \r\n                                                    isValid={isValidPhone.isValid} \r\n                                                    handleClose={handleCloseValidationChip}\r\n                                                    place={'phone'}\r\n                                                    absolute={true} \r\n                                                    closeOnFirstClick={true}\r\n                                                />\r\n                                            }\r\n                                            \r\n                                            <InputMaskPhone \r\n                                                placeholder={`${inputLabel}`}   \r\n                                                className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                                value={formPhone}\r\n                                                setValue={handleChangePhone}\r\n                                            /> \r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} > \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction StyledComponent(props) { \r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            RemoveImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            RemoveImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            RemoveImage(imageName) \r\n            RemoveImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Sub Heading'\r\n                                            variant='outlined'\r\n                                            value={subHeading}\r\n                                            setValue={setSubHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                         \r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >  \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Input Label\" \r\n                                                variant='outlined'\r\n                                                value={inputLabel}\r\n                                                setValue={setInputLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Button Label\" \r\n                                                variant='outlined'\r\n                                                value={buttonLabel}\r\n                                                setValue={setButtonLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Form Policy\" \r\n                                            variant='outlined'\r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />   \r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemBody, setNewItemBody] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, dialogContentUnstyle, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItemHead = (head, index) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head \r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleUpdateItemBody = (body, index) => { \r\n        const newItems = items.slice() \r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const conf = window.confirm('Delete item?')\r\n        if(conf) {\r\n            const newItems = items.slice()\r\n            newItems.splice(index, 1) \r\n    \r\n            setItems(newItems)\r\n            setIsDisableBtn(false); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                             \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Head'\r\n                                                            variant='outlined'\r\n                                                            value={item.head}\r\n                                                            setValue={handleUpdateItemHead}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />\r\n                                                        <Box mt={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Body'\r\n                                                            variant='outlined'\r\n                                                            value={item.body}\r\n                                                            setValue={handleUpdateItemBody}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        /> \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n \r\n                                    <Box mt={5} />  \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                     \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","export const Location = () => (\r\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 511.999 511.999\" style={{enableBackground: 'new 0 0 511.999 511.999'}} xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n            <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                    c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                    c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                    M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                    S306.457,272.806,255.999,272.806z\" />\r\n            </g>\r\n        </g> \r\n    </svg>\r\n\r\n) ","export const Phone = () => ( \r\n    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n    <g>\r\n        <g>\r\n        <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n        </g>\r\n    </g> \r\n    </svg> \r\n)","import React, {useState, useContext} from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken, fade, lighten } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation' \r\nimport { NameValidation, PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone' \r\nimport ValidationChip from '../../utilits/ValidationChip'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\n\r\nimport {Location} from '../../../assets/icons/location.js'\r\nimport {Phone} from '../../../assets/icons/phone.js'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [formName, setFormName] = useState('')\r\n    const [formComment, setFormComment] = useState('')\r\n\r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n    const [isValidName, setIsValidName] = useState({isValid: true})\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput, inValidColor\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput, \r\n                marginRight: 15,\r\n                maxWidth: 25,\r\n                minWidth: 25,\r\n                height: 25,\r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '& svg': {\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                }\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`,  \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07), \r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }, \r\n            validationChipsContainer: {\r\n                display: 'flex', \r\n                [theme.breakpoints.down('sm')]: {\r\n                    flexDirection: 'column',\r\n                    '& >*' : {\r\n                        marginLeft: 0, \r\n                        marginTop: `0px !important`\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n        const valphone = PhoneValidation(formPhone) \r\n        const valname = NameValidation(formName) \r\n    \r\n        if(valphone.isValid && valname.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                name: formName, \r\n                comment: formComment,\r\n                place: 'contact',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setFormPhone('')\r\n            setFormName('')\r\n            setFormComment('')\r\n        } else {\r\n            setIsValidName(valname)\r\n            setIsValidPhone(valphone)\r\n        } \r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n    }\r\n    const handleChangeName = (value) => {\r\n        setFormName(value) \r\n        setIsValidName({isValid: true})\r\n    }\r\n\r\n    const handleCloseValidationChip = (place) => {\r\n        if(place === 'name') setIsValidName({isValid: true})\r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <div className={classes.svg} > \r\n                                                <Location/>\r\n                                            </div>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\" >\r\n                                            <div className={classes.svg}> \r\n                                                 <Phone/>\r\n                                            </div>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <Box className={classes.validationChipsContainer}> \r\n                                            {\r\n                                                !isValidName.isValid &&\r\n                                                <Box flexGrow={1}  >\r\n                                                    <ValidationChip  \r\n                                                        isValid={isValidName.isValid} \r\n                                                        handleClose={handleCloseValidationChip}\r\n                                                        place={'name'}\r\n                                                        absolute={false}\r\n                                                        style={{marginTop: 0}}\r\n                                                        closeOnFirstClick={true}\r\n                                                    />\r\n                                                </Box>\r\n                                            } \r\n                                            {\r\n                                                !isValidPhone.isValid &&\r\n                                                <Box flexGrow={1} ml={2}>\r\n                                                    <ValidationChip  \r\n                                                        isValid={isValidPhone.isValid}  \r\n                                                        handleClose={handleCloseValidationChip}\r\n                                                        place={'phone'}\r\n                                                        absolute={false}\r\n                                                        style={{ marginTop: 0 }}\r\n                                                        closeOnFirstClick={true}\r\n                                                    />\r\n                                                </Box>\r\n                                            } \r\n                                        </Box>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName}  \r\n                                                    className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                                                    value={formName}\r\n                                                    onChange={e => {handleChangeName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <InputMaskPhone \r\n                                                    placeholder={`${inputPhone}`}  \r\n                                                    className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                                    value={formPhone}\r\n                                                    setValue={handleChangePhone}\r\n                                                /> \r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) { \r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData)  \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Location'\r\n                                            variant='outlined'\r\n                                            value={location}\r\n                                            setValue={setLocation}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Phone'\r\n                                            variant='outlined'  \r\n                                            value={phone}\r\n                                            setValue={setPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} > \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Comment Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputComment}\r\n                                            setValue={setInputComment}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >       \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                  \r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={true} \r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Map Frame\" \r\n                                                        variant='outlined'  \r\n                                                        value={mapFrame}\r\n                                                        setValue={setMapFrame}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />  \r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box my={5} />\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    // let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(colorButton, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction StyledComponent(props) { \r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorButton)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem,  dialogContentUnstyle, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n\r\n        \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        RemoveImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => { \r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete about? ')\r\n        if (conf)  {\r\n            RemoveImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }  Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />   \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />  \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.5) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorMain, 0.3) ,  \r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorMain)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, dialogContentUnstyle,\r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Action Line \r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Heading Size\"\r\n                                                variant='outlined'\r\n                                                value={headingSize}\r\n                                                setValue={setHeadingSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n \r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />   \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box    \r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const tableMinWidth = props.data.tableMinWidth\r\n    const isButton = props.data.isButton\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isButtonShowMore = rows.length - visibleRows > 0 ? true : false  \r\n    const [isButtonClick, setIsButtonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: { \r\n                minWidth: tableMinWidth,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsButtonClick(!isButtonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(isButtonClick)\r\n            return (\r\n                rows.map((row, index) => { \r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                })\r\n            )\r\n        else\r\n            return (\r\n                rows.map((row, index) => {\r\n                    if(index < visibleRows)\r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                    return false\r\n                })\r\n            )\r\n       \r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            {\r\n                isButton && \r\n                <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                    <Button \r\n                        variant='contained'   \r\n                        className={classes.tableButton}\r\n                        onClick={() => { handleOpenModal(row.name) }}\r\n                    >\r\n                        { buttonText }\r\n                    </Button>\r\n                </TableCell>\r\n            }\r\n        </StyledTableRow> \r\n    )\r\n    const renderButton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isButtonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead> \r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            {\r\n                                isButton &&\r\n                                <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    \r\n                        <TableBody>\r\n                            {\r\n                                renderRows()\r\n                            }\r\n                        </TableBody> \r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isButtonShowMore &&\r\n                renderButton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemPrice, setNewItemPrice] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n    FormControlLabel, \r\n    Switch, \r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [tableMinWidth, setTableMinWidth] = React.useState(props.data.tableMinWidth || 200 )\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses   \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.tableMinWidth = tableMinWidth \r\n        newData.isButton = isButton \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (value, index) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChangeName = (name, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].name = name \r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleRowChangePrice = (price, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false);  \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <Box my={2} display={'flex'}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1}> \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Text for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={textButton}\r\n                                                        setValue={setTextButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box my={3} display='flex' alignItems='center'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip  title=\"The table will scroll horizontally with a smaller width\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            fullWidth={true}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Table Min Width\"\r\n                                            variant='outlined'\r\n                                            value={tableMinWidth}\r\n                                            setValue={setTableMinWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <InputChange\r\n                                                            id={index} \r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item}\r\n                                                            setValue={handleTableHeadChange}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Row' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Name ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.name}\r\n                                                            setValue={handleRowChangeName}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        <Box mr={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={false}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Price ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.price}\r\n                                                            setValue={handleRowChangePrice}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        {/* <ChangeItem handleRowChange={handleRowChange} item={item} index={index} /> */}\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label={`Quantity to show`}\r\n                                                variant='outlined'\r\n                                                value={visibleRows}\r\n                                                setValue={setVisibleRows}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label={`Text for botton`}\r\n                                                variant='outlined'\r\n                                                value={visibleBottonText}\r\n                                                setValue={setVisibleBottonText}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null}  \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label={`Text for botton clicked`}\r\n                                            variant='outlined'\r\n                                            value={visibleBottonTextClick}\r\n                                            setValue={setVisibleBottonTextClick}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                        \r\n                                    </Box>\r\n                                                \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useState, useContext} from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken, lighten } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nimport ValidationChip from '../../utilits/ValidationChip'\r\nimport {NameValidation, PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone'\r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [formName, setFormName] = useState('') \r\n    \r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n    const [isValidName, setIsValidName] = useState({isValid: true})\r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput, inValidColor\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput,\r\n                    background: fade(colorFocusInput, 0.07), \r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                position: 'relative',\r\n                paddingRight: theme.spacing(1), \r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            gridValidation: {\r\n                position: 'relative', \r\n                height: 45, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    height: 35\r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const valphone = PhoneValidation(formPhone) \r\n        const valname = NameValidation(formName) \r\n\r\n        if(valphone.isValid && valname.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                name: formName,  \r\n                place: 'line Form',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setFormPhone('')\r\n            setFormName('')\r\n        } else {\r\n          setIsValidName(valname)\r\n          setIsValidPhone(valphone)\r\n        }\r\n         \r\n\r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n      }\r\n      const handleChangeName = (value) => {\r\n        setFormName(value) \r\n        setIsValidName({isValid: true})\r\n      }\r\n    \r\n      const handleCloseValidationChip = (place) => {\r\n        if(place === 'name') setIsValidName({isValid: true})\r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n      }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}  >\r\n                            {\r\n                                !isValidName.isValid && \r\n                                <Box className={classes.gridValidation}>\r\n                                    <ValidationChip \r\n                                        isValid={isValidName.isValid}  \r\n                                        handleClose={handleCloseValidationChip}\r\n                                        place={'name'}\r\n                                        absolute={true} \r\n                                        closeOnFirstClick={true}\r\n                                        style={{width: 'calc(100% - 10px)', top: 'auto', bottom: 0}}\r\n                                    />\r\n                                </Box>\r\n                            }\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}  >\r\n                            {\r\n                                !isValidPhone.isValid && \r\n                                <Box className={classes.gridValidation}>\r\n                                    <ValidationChip  \r\n                                        isValid={isValidPhone.isValid}  \r\n                                        handleClose={handleCloseValidationChip}\r\n                                        place={'phone'}\r\n                                        absolute={true} \r\n                                        closeOnFirstClick={true}\r\n                                        style={{width: 'calc(100% - 10px)', top: 'auto', bottom: 0}}\r\n                                    />\r\n                                </Box>\r\n                                \r\n                            }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`}  \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {handleChangeName(e.target.value)}} \r\n                                    className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                 \r\n                                <InputMaskPhone \r\n                                    placeholder={`${inputPhone}`}   \r\n                                    className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                    value={formPhone}\r\n                                    setValue={handleChangePhone}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if (colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n         \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>  \r\n                                    <Box mt={2} >        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >      \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) { \r\n    \r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({  \r\n            swiper: {\r\n                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },  \r\n            },\r\n            activeSlide: {\r\n                cursor: 'pointer', \r\n                '&:hover': {\r\n                    '& $slideImg': {\r\n                        transform: \"scale(1.03)\"\r\n                    },\r\n                    '& $slideTitle': { \r\n                        backgroundColor: theme.palette.background.default\r\n                    },\r\n                }\r\n            }, \r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,   \r\n                overflow: 'hidden', \r\n                '& a': {\r\n                    color: 'inherit'\r\n                }\r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: '3vw', \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2), \r\n                borderBottom: `2px solid ${color}`,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 20\r\n                }\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 300, \r\n                    marginLeft: spaceBetween,\r\n                    marginRigth: spaceBetween,\r\n                    marginBottom: spaceBetween, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 0, \r\n                        marginRight: 0, \r\n                        maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n     \r\n  \r\n    React.useEffect(() => {   \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('swiper resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const handleSlideClick = (slide) => {\r\n        if(slide.isButton) {\r\n            handleOpen(slide.targetButton)\r\n        } \r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key} \r\n            ref={slideRef} \r\n            className={`${classes.slide} ${(slide.isButton || slide.isUrl) ? classes.activeSlide : '' } `}\r\n            onClick={() => { handleSlideClick(slide) }}\r\n        >\r\n            {\r\n                slide.isUrl ? \r\n                <NavLink to={slide.activePage.slug}>\r\n                    <Box className={classes.slideBox}>\r\n                        <Box \r\n                            style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                            className={classes.slideImg}\r\n                        />\r\n                        {\r\n                            slide.title.length > 0 &&\r\n                            <Typography\r\n                                component='h6'\r\n                                className={classes.slideTitle}\r\n                            >\r\n                                {slide.title}\r\n                            </Typography>\r\n                        }\r\n                        \r\n                    </Box>\r\n                </NavLink>\r\n                :\r\n                <Box className={classes.slideBox}>\r\n                    <Box \r\n                        style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                        className={classes.slideImg}\r\n                    />\r\n                    {\r\n                        slide.title.length > 0 &&\r\n                        <Typography\r\n                            component='h6'\r\n                            className={classes.slideTitle}\r\n                        >\r\n                            {slide.title}\r\n                        </Typography>\r\n                    }\r\n                    \r\n                </Box>\r\n            }\r\n            \r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return renderSlide(slide, key)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return renderSlide(slide, key)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,  \r\n    Typography, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newImageName, setNewImageName] = React.useState('')\r\n    const [newImageUrl, setNewImageUrl] = React.useState('')\r\n    const [newImageTitle, setNewImageTitle] = React.useState('')\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setNewImageUrl(downloadURL)\r\n        setNewImageName(generateImageName)   \r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newImageUrl, newImageName, newImageTitle)\r\n        setNewImageName('')\r\n        setNewImageUrl('') \r\n        setNewImageTitle('') \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n            <Button color='primary' variant='contained' className={props.btnWithLabel}  >\r\n                <label htmlFor='image-input-label'>\r\n                    Set image\r\n                </label>\r\n                <input\r\n                    id=\"image-input-label\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {  handleImageUpload(e) }}\r\n                    style={{\r\n                    display: \"none\"\r\n                }}/>\r\n            </Button> \r\n            <Box ml={2} display='inline-block'>\r\n                <Typography variant='caption' > Image: { newImageName.replace(`-${props.id}`, '') }</Typography>\r\n            </Box>\r\n            <Box my={1}>\r\n                <TextField \r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Title'\r\n                    variant=\"outlined\"\r\n                    value={newImageTitle}\r\n                    onChange={(e) => { setNewImageTitle(e.target.value) }}\r\n                />\r\n                <Box my={1}>\r\n                    <Button\r\n                        disabled={newImageName !== '' ? false : true }\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useContext, useState, useEffect, memo} from 'react'\r\n\r\nimport {   \r\n    Box,   \r\n    FormControl, \r\n    InputLabel, \r\n    Select,  \r\n    MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nconst SelectPage = memo( ({value, setValue, index}) => {\r\n   \r\n    console.log(value)\r\n    const { categories } = useContext(CategoryContext)\r\n\r\n    const [pages, SetPages] = useState([]) \r\n    const [selectValue, setSelectValue] = useState(value)\r\n\r\n    useEffect( () => {\r\n        createPages() \r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if(selectValue !== value && value !== null) {\r\n            setSelectValue(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const createPages = () => {\r\n        let pagesArray = []\r\n        categories.forEach( item => { \r\n            pagesArray.push(item)\r\n            if(item.pages.length > 0) {\r\n                item.pages.forEach( innerItem => {\r\n                    let page = JSON.parse(JSON.stringify(innerItem))\r\n                    page.categorySlug = item.slug\r\n                    pagesArray.push(page)\r\n                })\r\n            }\r\n        })\r\n        SetPages(pagesArray) \r\n    }\r\n    \r\n    const handleChange = (id) => { \r\n        const activePage = {\r\n            id: id\r\n        }\r\n        pages.forEach( page => {\r\n            if(page.id === id) {\r\n                activePage.title = page.title\r\n                activePage.slug = (page.type === 'page') ? (`/${page.categorySlug}/${page.slug}`) : (`/${page.slug}`)\r\n            }\r\n        })\r\n        setSelectValue(id) \r\n        if(index !== undefined) { \r\n            setValue(activePage, index)\r\n        }\r\n        else {\r\n            setValue(activePage)\r\n        }\r\n    }\r\n\r\n    const renderLinkList = () => { \r\n        return pages.map( link => {\r\n            switch(link.type) {\r\n                case('category') : {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - { link.slug}</MenuItem> \r\n                }\r\n                case('page'): {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - {`${link.categorySlug}/${link.slug}`}</MenuItem>\r\n                }\r\n                default: break;\r\n            } \r\n            return false\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <Box> \r\n            <FormControl \r\n                variant='filled' \r\n                size='small'    \r\n                // style={{width: '100%'}}\r\n                fullWidth\r\n            >\r\n                <InputLabel id={`url-pages`}>Choice page</InputLabel>\r\n                {\r\n                    pages.length > 0 && \r\n                    <Select\r\n                        labelId={`url-pages`}\r\n                        id=\"url-select\"\r\n                        value={selectValue}  \r\n                        fullWidth\r\n                        style={{maxWidth: '100%'}}\r\n                        onChange={(e) => { handleChange(e.target.value) }}\r\n                    >   \r\n                        {\r\n                            renderLinkList()\r\n                        }\r\n                        {\r\n                            value === 'none' &&\r\n                            <MenuItem value={'none'} style={{display: 'none'}} >None</MenuItem>\r\n                        }\r\n                            \r\n                    </Select>\r\n                }\r\n            </FormControl>\r\n        </Box> \r\n    )\r\n})\r\n\r\nexport default SelectPage\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent, \r\n    fade, \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const [imageForDelete, setImageForDelete] = React.useState([])\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues \r\n            ,responseMobile , mobileTooltip, dialogContentUnstyle, infoBtn, infoBlock } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-block', \r\n                width: 250, \r\n                height: 250, \r\n                position: 'relative', \r\n                \"& img\": {\r\n                    width: '100%', \r\n                    height: '100%'\r\n                },\r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }, \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        if(imageForDelete.length > 0) {\r\n            imageForDelete.forEach( name => {\r\n                RemoveImage(name)\r\n            })\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n        setImageForDelete([])\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  { \r\n            let imgArray = []\r\n            slides.forEach( slide => {\r\n                if(slide.imageName !== 'ImageExample') imgArray.push(slide.imageName)\r\n            })\r\n            if(imgArray.length > 0) {\r\n                imgArray.forEach( name => {\r\n                    RemoveImage(name)\r\n                })\r\n            }\r\n\r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsUrl = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isUrl = !value \r\n        newSlides[index].isButton = false \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].activePage = activePage  \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButton = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isButton = !value \r\n        newSlides[index].isUrl = false\r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButtonTarget = (value, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].targetButton = value \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false) \r\n    }\r\n\r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => {\r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newImageForDelete = imageForDelete.slice()\r\n            const newSlides = slides.slice()\r\n            const deletedImageName = newSlides[index].imageName\r\n    \r\n            if(deletedImageName !== 'imageExample') newImageForDelete.push(deletedImageName)\r\n    \r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides)\r\n            setImageForDelete(newImageForDelete)\r\n            setIsDisableBtn(false) \r\n        }\r\n    }\r\n    const addSlide = ( url, name, title ) => {\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            imageUrl: url, \r\n            imageName: name, \r\n            title: title, \r\n            isUrl: false, \r\n            activePage: {id: 'none'},\r\n            isButton: false, \r\n            targetButton: \"\"\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    {\r\n                        !item.isUrl &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isButton }\r\n                                            onChange = { () => {handleChangeIsButton(item.isButton, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Modal Button\"\r\n                            /> \r\n                            {\r\n                                item.isButton &&  \r\n                                <Box my={1}>  \r\n                                    <InputChange\r\n                                        id={index}\r\n                                        fullWidth={true}\r\n                                        type='text'\r\n                                        size=\"small\"  \r\n                                        label=\"Target for Modal\"\r\n                                        variant='outlined'\r\n                                        value={item.targetButton}\r\n                                        setValue={handleChangeIsButtonTarget}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />  \r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        !item.isButton &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isUrl }\r\n                                            onChange = { () => {handleChangeIsUrl(item.isUrl, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Link\"\r\n                            /> \r\n                            {\r\n                                item.isUrl &&  \r\n                                <Box my={1}>\r\n                                    <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} />\r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box>\r\n                        <img src={item.imageUrl} alt={item.imageName}/>\r\n                        <Box className={classes.dumbSlideTitle}>  \r\n                            <InputChange\r\n                                id={index}\r\n                                fullWidth={true}\r\n                                type='text'\r\n                                size=\"small\"  \r\n                                variant='outlined'\r\n                                value={item.title}\r\n                                setValue={handleSlideTitle}\r\n                                setIsDisableBtn={setIsDisableBtn} \r\n                            /> \r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Swiper margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Swiper margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    \r\n                                    <Box className={classes.infoBlock}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Arrows'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} btnWithLabel={classes.btnWithLabel} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken, fade } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n \r\n    const useStyles = makeStyles((theme) => {   \r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundColor: fade(theme.palette.primary.main, 0.3), \r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginTop: -10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorButton, 0.2) , \r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange'; \r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction StyledComponent(props) { \r\n     \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.imageUrl)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    \r\n    const colorButtonTheme = isNoThemeColor(props.data.colorButton)\r\n    const colorTextTheme = isNoThemeColor(props.data.colorText)\r\n\r\n    React.useEffect(() => {\r\n        if(colorButtonTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        if(colorTextTheme) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton, props.data.colorText])  \r\n   \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        RemoveImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete banner? ')\r\n        if (conf) { \r\n            RemoveImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Banner Settings ' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                         { !isDisableBtn && \"Close to save - \" }  Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Min Height for block\"\r\n                                                variant='outlined'\r\n                                                value={minHeight}\r\n                                                setValue={setMinHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant='outlined'\r\n                                                value={paddingVertical}\r\n                                                setValue={setPaddingVertical}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />    \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,   \r\n                cursor: 'pointer',   \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 10, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        // maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    React.useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n  \r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`}\r\n        >\r\n            <NavLink to={slide.activePage.slug}>\r\n                <Box className={classes.slideBox}> \r\n                    <Box className={classes.slideImg}>\r\n                        <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                    </Box> \r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.activePage.title} \r\n                    </Typography> \r\n                </Box>\r\n            </NavLink>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return  renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                         items.map( (slide, key) => {\r\n                            return renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n\r\nimport SelectPage from '../../functions/SelectPage'\r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = React.useState('') \r\n    const [idActive, setIdActive] = React.useState('none') \r\n    const [activePage, setActivePage] = React.useState({}) \r\n \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, activePage)\r\n        setNewSvg('') \r\n        setIdActive('')\r\n        setActivePage({})\r\n    }\r\n    function handleChangeUrl(selectedPage) {  \r\n     \r\n        setIdActive(selectedPage.id)\r\n        setActivePage(selectedPage)\r\n      \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <TextField \r\n                    fullWidth\r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Svg'\r\n                    variant=\"outlined\"\r\n                    value={newSvg}\r\n                    onChange={(e) => { setNewSvg(e.target.value) }}\r\n                />\r\n                <Box my={1}> \r\n                    <SelectPage value={idActive} setValue={handleChangeUrl} />\r\n                </Box> \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,\r\n            responseMobile , mobileTooltip, dialogContentUnstyle, infoBlock, infoBtn } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  {  \r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n   \r\n        newSlides[index].activePage = activePage \r\n         \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => { \r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newSlides = slides.slice() \r\n    \r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides) \r\n            setIsDisableBtn(false) \r\n        } \r\n    }\r\n    const addSlide = ( svg, activePage ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            activePage: activePage,   \r\n            inner: []\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>  \r\n                    <Box my={1}> \r\n                        <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} /> \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.activePage.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Block Pages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Block Pages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Block Pages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Block Pages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                      \r\n                                    <Box className={classes.infoBlock}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react' \r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n \r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    const isButton = props.data.isButton  \r\n    const targetButton = props.data.targetButton \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {  \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                }, \r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,    \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n\r\n                cursor: isButton ? 'pointer' : 'default', \r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 15, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('xs')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        maxWidth: 400,   \r\n                    },\r\n                    '& $slideBox': {\r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        flexDirection: 'row', \r\n                        padding: 10\r\n                    },\r\n                    '& $slideImg': {\r\n                        position: 'relative', \r\n                        top: 'auto',\r\n                        left: 'auto',\r\n                        minWidth: 50\r\n                    },\r\n                    '& $slideTitle': {\r\n                        marginTop: 0, \r\n                        marginLeft: 8\r\n                    },\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    React.useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n  \r\n    const handleSlideClick = () => { \r\n        if(isButton) handleOpen(targetButton) \r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`} \r\n            onClick={handleSlideClick}\r\n        > \r\n            <Box className={classes.slideBox}> \r\n                <Box className={classes.slideImg}>\r\n                    <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                </Box> \r\n                <Typography\r\n                    component='h6'\r\n                    className={classes.slideTitle}\r\n                >\r\n                    {slide.title} \r\n                </Typography> \r\n            </Box> \r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return  renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = React.useState('') \r\n    const [newTitle, setNewTitle] = React.useState('') \r\n    \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, newTitle)\r\n        setNewSvg('') \r\n        setNewTitle('') \r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Title'\r\n                        variant=\"outlined\"\r\n                        value={newTitle}\r\n                        onChange={(e) => { setNewTitle(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Svg'\r\n                        variant=\"outlined\"\r\n                        value={newSvg}\r\n                        onChange={(e) => { setNewSvg(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n    \r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle, infoBtn, infoBlock } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.isButton = isButton   \r\n        newData.targetButton = targetButton   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  {  \r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => { \r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newSlides = slides.slice() \r\n\r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides) \r\n            setIsDisableBtn(false)\r\n        }\r\n         \r\n    }\r\n    const addSlide = ( svg, title ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            title: title\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set title\"\r\n                            variant='outlined'\r\n                            value={item.title}\r\n                            setValue={handleSlideTitle}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Advantages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Advantages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Advantages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Advantages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Box display='flex' mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Open Modal by click\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1} > \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Target for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={targetButton}\r\n                                                        setValue={setTargetButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />   \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.infoBlock}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '20px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                margin: '10px 0', \r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\nimport BlocksPagesElement from '../library/blocksPages/ElementCreator'   \r\nimport BlocksAdvElement from '../library/blocksAdv/ElementCreator'   \r\n\r\nimport SkeletonPage from '../utilits/SkeletonPage'\r\nimport Breadcrumbs from '../utilits/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n  const BlocksPagesLayout = layouts.blocksPages \r\n  const BlocksAdvLayout = layouts.blocksAdv \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => { \r\n\r\n    const classesRef = StylesChangers()\r\n    const commonClasses = classesRef(theme)\r\n\r\n    const { menu, menuTitle, dialogContentUnstyle } = commonClasses \r\n\r\n    return ({ \r\n      dialogContentUnstyle: dialogContentUnstyle, \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 70,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38,  \r\n          opacity: 0, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer  \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')   newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner')  newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')   newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap')  newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')       newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine')  newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')       newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')    newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')      newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')      newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n    if(type === 'blocksPages') newCont = JSON.parse(JSON.stringify(BlocksPagesLayout))\r\n    if(type === 'blocksAdv')   newCont = JSON.parse(JSON.stringify(BlocksAdvLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksPages') { \r\n          return(\r\n              <BlocksPagesElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksAdv') { \r\n          return(\r\n              <BlocksAdvElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <Box className={classes.btnContainer}> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <React.Fragment>\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip> \r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon, contain link to page. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksPages') }}>\r\n                                    Blocks with Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksAdv') }}>\r\n                                    Blocks without Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>  \r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Line for small text paragrapher with ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images. Has be blocks' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </React.Fragment>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React, { useState, useEffect } from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop'  \r\n    \r\nimport LoadingProgress from '../components/utilits/LoadingProgress'\r\nimport PreloaderThumbnail from '../components/utilits/PreloaderThumbnail'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/single/Login'\r\nimport Error from '../components/single/Error'\r\nimport SinglePage from '../components/page/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    const [preloaderStatus, setPreloaderStatus] = useState('loading')\r\n\r\n    useEffect(() => {\r\n        if(categories.length > 0) {\r\n            setPreloaderStatus('ready')\r\n            setTimeout(() => {\r\n                setPreloaderStatus('delete') \r\n                document.body.style.overflow = 'visible'\r\n            }, 2000);\r\n            setTimeout(() => {\r\n                setPreloaderStatus('hide') \r\n            }, 2500);\r\n        } \r\n    }, [categories])\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n             \r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            <PreloaderThumbnail status={preloaderStatus} />  \r\n\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Modal/>\r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst  AlertComponent = () => { \r\n    \r\n    const { isShowAlert, closeAlert, alertText  } = React.useContext(SendFormContext)  \r\n\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        closeAlert() \r\n    }\r\n   \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={isShowAlert} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Alert from '../components/utilits/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert  /> \r\n            } \r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider'  \nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n \n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}